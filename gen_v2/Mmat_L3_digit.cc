/*
 * Automatically Generated from Mathematica.
 * Mon 19 Jun 2023 22:42:17 GMT-04:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1)
{
  double t3004;
  double t3037;
  double t3077;
  double t2890;
  double t3182;
  double t3184;
  double t3203;
  double t3215;
  double t3264;
  double t3101;
  double t3104;
  double t3112;
  double t3137;
  double t3142;
  double t3269;
  double t1497;
  double t3373;
  double t3377;
  double t3476;
  double t3477;
  double t3459;
  double t3467;
  double t3469;
  double t3504;
  double t3499;
  double t3177;
  double t3274;
  double t3322;
  double t3344;
  double t3383;
  double t3390;
  double t3399;
  double t3402;
  double t3416;
  double t3419;
  double t3420;
  double t3470;
  double t3478;
  double t3483;
  double t3487;
  double t3488;
  double t3492;
  double t3496;
  double t3498;
  double t3506;
  double t3512;
  double t3514;
  double t3516;
  double t3629;
  double t3641;
  double t3530;
  double t3535;
  double t3543;
  double t3549;
  double t3552;
  double t3555;
  double t3559;
  double t3563;
  double t3592;
  double t3594;
  double t3598;
  double t3599;
  double t3601;
  double t3606;
  double t3630;
  double t3637;
  double t3642;
  double t3646;
  double t3647;
  double t3661;
  double t3662;
  double t3673;
  double t3675;
  double t3678;
  double t3679;
  double t3692;
  double t3693;
  double t3694;
  double t3696;
  double t3698;
  double t3707;
  double t3774;
  double t3775;
  double t3777;
  double t3781;
  double t3782;
  double t3784;
  double t3788;
  double t3789;
  double t3790;
  double t3791;
  double t3765;
  double t3772;
  double t3773;
  double t3783;
  double t3792;
  double t3794;
  double t3796;
  double t3797;
  double t3798;
  double t3799;
  double t3803;
  double t3807;
  double t3808;
  double t3810;
  double t3813;
  double t3815;
  double t3816;
  double t3821;
  double t3822;
  double t3840;
  double t3842;
  double t3843;
  double t3829;
  double t3831;
  double t3833;
  double t3814;
  double t3825;
  double t3827;
  double t3849;
  double t3855;
  double t3862;
  double t3873;
  double t3888;
  double t3891;
  double t3902;
  double t3907;
  double t3918;
  double t3922;
  double t3934;
  double t3937;
  double t4006;
  double t3961;
  double t3638;
  double t3655;
  double t3656;
  double t3657;
  double t3674;
  double t3681;
  double t3686;
  double t3687;
  double t3695;
  double t3712;
  double t3713;
  double t3714;
  double t3719;
  double t3728;
  double t3730;
  double t3731;
  double t3734;
  double t3739;
  double t3740;
  double t3757;
  double t3758;
  double t3762;
  double t3828;
  double t3834;
  double t3850;
  double t3851;
  double t3856;
  double t3857;
  double t3858;
  double t3859;
  double t3860;
  double t3863;
  double t3870;
  double t3871;
  double t3872;
  double t3877;
  double t3878;
  double t3879;
  double t3880;
  double t3881;
  double t3886;
  double t3887;
  double t3889;
  double t3890;
  double t3892;
  double t3893;
  double t3896;
  double t3897;
  double t3898;
  double t3901;
  double t3903;
  double t3906;
  double t3908;
  double t3912;
  double t3915;
  double t3916;
  double t3919;
  double t3920;
  double t3921;
  double t3923;
  double t3926;
  double t3927;
  double t3928;
  double t3930;
  double t3935;
  double t3936;
  double t3938;
  double t3939;
  double t3940;
  double t3943;
  double t3960;
  double t3962;
  double t3967;
  double t3968;
  double t3971;
  double t3972;
  double t3976;
  double t3977;
  double t3981;
  double t3986;
  double t3987;
  double t3992;
  double t3993;
  double t3999;
  double t4000;
  double t4001;
  double t3946;
  double t3950;
  double t3951;
  double t3952;
  double t3953;
  double t3956;
  double t3957;
  double t3958;
  double t4021;
  double t4022;
  double t4023;
  double t4024;
  double t4025;
  double t4026;
  double t4027;
  double t4028;
  double t4029;
  double t4030;
  double t4031;
  double t4004;
  double t4007;
  double t4015;
  double t4016;
  double t4017;
  double t4019;
  double t4033;
  double t4034;
  double t4035;
  double t4042;
  double t4043;
  double t4044;
  double t3733;
  double t3748;
  double t3763;
  double t3764;
  double t4064;
  double t4065;
  double t4066;
  double t4067;
  double t3861;
  double t3882;
  double t3899;
  double t3900;
  double t4068;
  double t4069;
  double t4070;
  double t4071;
  double t4104;
  double t4105;
  double t4106;
  double t4107;
  double t4189;
  double t3917;
  double t3929;
  double t3944;
  double t3945;
  double t4072;
  double t4073;
  double t4074;
  double t4078;
  double t4108;
  double t4109;
  double t4112;
  double t4113;
  double t4166;
  double t4128;
  double t4129;
  double t4130;
  double t4131;
  double t4133;
  double t4134;
  double t4135;
  double t4136;
  double t4138;
  double t4142;
  double t4143;
  double t4144;
  double t4167;
  double t4168;
  double t4151;
  double t4152;
  double t4153;
  double t4154;
  double t4156;
  double t4157;
  double t4158;
  double t4159;
  double t4161;
  double t4162;
  double t4163;
  double t4164;
  double t4170;
  double t4171;
  double t4172;
  double t4173;
  double t4175;
  double t4176;
  double t4177;
  double t4178;
  double t4180;
  double t4181;
  double t4182;
  double t4183;
  double t4190;
  double t4191;
  double t4192;
  double t4194;
  double t4195;
  double t4196;
  double t4198;
  double t4199;
  double t4200;
  double t3959;
  double t3980;
  double t4002;
  double t4003;
  double t4079;
  double t4080;
  double t4081;
  double t4082;
  double t4114;
  double t4115;
  double t4116;
  double t4117;
  double t4185;
  double t4186;
  double t4187;
  double t4230;
  double t4231;
  double t4232;
  double t4020;
  double t4032;
  double t4045;
  double t4046;
  double t4083;
  double t4084;
  double t4088;
  double t4089;
  double t4118;
  double t4119;
  double t4120;
  double t4121;
  double t4202;
  double t4203;
  double t4204;
  double t4237;
  double t4238;
  double t4239;
  double t4269;
  double t4270;
  double t4271;
  double t4047;
  double t4048;
  double t4049;
  double t4050;
  double t4090;
  double t4091;
  double t4092;
  double t4093;
  double t4122;
  double t4123;
  double t4124;
  double t4125;
  double t4209;
  double t4210;
  double t4211;
  double t4244;
  double t4245;
  double t4246;
  double t4278;
  double t4279;
  double t4280;
  double t4303;
  double t4306;
  double t4307;
  t3004 = Cos(var1[7]);
  t3037 = -1.*t3004;
  t3077 = 1. + t3037;
  t2890 = Cos(var1[6]);
  t3182 = -0.8656776547239999*t3077;
  t3184 = 1. + t3182;
  t3203 = 0.366501*t3184;
  t3215 = 0.3172717261340007*t3077;
  t3264 = t3203 + t3215;
  t3101 = -0.134322983001*t3077;
  t3104 = 1. + t3101;
  t3112 = -0.930418*t3104;
  t3137 = -0.12497652119782442*t3077;
  t3142 = t3112 + t3137;
  t3269 = Sin(var1[6]);
  t1497 = Sin(var1[4]);
  t3373 = Cos(var1[4]);
  t3377 = Sin(var1[5]);
  t3476 = 0.930418*t3184;
  t3477 = t3476 + t3137;
  t3459 = 0.366501*t3104;
  t3467 = -0.3172717261340007*t3077;
  t3469 = t3459 + t3467;
  t3504 = Sin(var1[7]);
  t3499 = Cos(var1[5]);
  t3177 = t2890*t3142;
  t3274 = -1.*t3264*t3269;
  t3322 = t3177 + t3274;
  t3344 = t1497*t3322;
  t3383 = t2890*t3264;
  t3390 = t3142*t3269;
  t3399 = t3383 + t3390;
  t3402 = -1.*t3377*t3399;
  t3416 = 0. + t3402;
  t3419 = t3373*t3416;
  t3420 = t3344 + t3419;
  t3470 = t2890*t3469;
  t3478 = -1.*t3477*t3269;
  t3483 = t3470 + t3478;
  t3487 = t1497*t3483;
  t3488 = t2890*t3477;
  t3492 = t3469*t3269;
  t3496 = t3488 + t3492;
  t3498 = -1.*t3377*t3496;
  t3506 = 1.000000637725*t3499*t3504;
  t3512 = t3498 + t3506;
  t3514 = t3373*t3512;
  t3516 = t3487 + t3514;
  t3629 = Cos(var1[3]);
  t3641 = Sin(var1[3]);
  t3530 = 0.366501*t2890*t3504;
  t3535 = -0.930418*t3269*t3504;
  t3543 = t3530 + t3535;
  t3549 = t1497*t3543;
  t3552 = 1.000000637725*t3077;
  t3555 = -1. + t3552;
  t3559 = t3499*t3555;
  t3563 = 0.930418*t2890*t3504;
  t3592 = 0.366501*t3269*t3504;
  t3594 = t3563 + t3592;
  t3598 = -1.*t3377*t3594;
  t3599 = t3559 + t3598;
  t3601 = t3373*t3599;
  t3606 = t3549 + t3601;
  t3630 = t3499*t3399;
  t3637 = 0. + t3630;
  t3642 = t3373*t3322;
  t3646 = -1.*t1497*t3416;
  t3647 = t3642 + t3646;
  t3661 = t3499*t3496;
  t3662 = 1.000000637725*t3377*t3504;
  t3673 = t3661 + t3662;
  t3675 = t3373*t3483;
  t3678 = -1.*t1497*t3512;
  t3679 = t3675 + t3678;
  t3692 = t3555*t3377;
  t3693 = t3499*t3594;
  t3694 = t3692 + t3693;
  t3696 = t3373*t3543;
  t3698 = -1.*t1497*t3599;
  t3707 = t3696 + t3698;
  t3774 = -3.2909349868922137e-7*var1[7];
  t3775 = -0.086807*t3104;
  t3777 = -0.010947430124480524*t3077;
  t3781 = 3.5285855002654964e-6*t3504;
  t3782 = t3774 + t3775 + t3777 + t3781;
  t3784 = 1.296332362046933e-7*var1[7];
  t3788 = 0.123104*t3184;
  t3789 = 0.10837779271560144*t3077;
  t3790 = 8.957845855771251e-6*t3504;
  t3791 = t3784 + t3788 + t3789 + t3790;
  t3765 = -1.*t2890;
  t3772 = 1. + t3765;
  t3773 = 0.091*t3772;
  t3783 = t3269*t3782;
  t3792 = t2890*t3791;
  t3794 = t3773 + t3783 + t3792;
  t3796 = -1.*t3377*t3794;
  t3797 = -1.000000637725*t3077;
  t3798 = 1. + t3797;
  t3799 = -0.04501*t3798;
  t3803 = -0.04500040093286238*t3077;
  t3807 = -0.001944728829900294*t3504;
  t3808 = t3799 + t3803 + t3807;
  t3810 = t3499*t3808;
  t3813 = t3796 + t3810;
  t3815 = 0.091*t3269;
  t3816 = t2890*t3782;
  t3821 = -1.*t3269*t3791;
  t3822 = t3815 + t3816 + t3821;
  t3840 = t3499*t3794;
  t3842 = t3377*t3808;
  t3843 = t3840 + t3842;
  t3829 = t3373*t3813;
  t3831 = t1497*t3822;
  t3833 = t3829 + t3831;
  t3814 = -1.*t1497*t3813;
  t3825 = t3373*t3822;
  t3827 = t3814 + t3825;
  t3849 = t3637*t3843;
  t3855 = -1.*t3843*t3673;
  t3862 = t3843*t3673;
  t3873 = -1.*t3843*t3694;
  t3888 = -1.*t3637*t3843;
  t3891 = t3843*t3694;
  t3902 = t3322*t3822;
  t3907 = -1.*t3483*t3822;
  t3918 = t3483*t3822;
  t3922 = -1.*t3822*t3543;
  t3934 = -1.*t3322*t3822;
  t3937 = t3822*t3543;
  t4006 = -1. + t3552;
  t3961 = 1.000000637725*t3808*t3504;
  t3638 = t3629*t3637;
  t3655 = -1.*t3641*t3647;
  t3656 = t3638 + t3655;
  t3657 = 0.818753*t3420*t3656;
  t3674 = t3629*t3673;
  t3681 = -1.*t3641*t3679;
  t3686 = t3674 + t3681;
  t3687 = 0.818753*t3516*t3686;
  t3695 = t3629*t3694;
  t3712 = -1.*t3641*t3707;
  t3713 = t3695 + t3712;
  t3714 = 0.818753*t3606*t3713;
  t3719 = t3657 + t3687 + t3714;
  t3728 = t3641*t3637;
  t3730 = t3629*t3647;
  t3731 = t3728 + t3730;
  t3734 = t3641*t3673;
  t3739 = t3629*t3679;
  t3740 = t3734 + t3739;
  t3757 = t3641*t3694;
  t3758 = t3629*t3707;
  t3762 = t3757 + t3758;
  t3828 = t3647*t3827;
  t3834 = t3420*t3833;
  t3850 = t3828 + t3834 + t3849;
  t3851 = t3850*t3516;
  t3856 = -1.*t3833*t3516;
  t3857 = -1.*t3827*t3679;
  t3858 = t3855 + t3856 + t3857;
  t3859 = t3420*t3858;
  t3860 = t3851 + t3859;
  t3863 = t3833*t3516;
  t3870 = t3827*t3679;
  t3871 = t3862 + t3863 + t3870;
  t3872 = t3871*t3606;
  t3877 = -1.*t3833*t3606;
  t3878 = -1.*t3827*t3707;
  t3879 = t3873 + t3877 + t3878;
  t3880 = t3516*t3879;
  t3881 = t3872 + t3880;
  t3886 = -1.*t3647*t3827;
  t3887 = -1.*t3420*t3833;
  t3889 = t3886 + t3887 + t3888;
  t3890 = t3889*t3606;
  t3892 = t3833*t3606;
  t3893 = t3827*t3707;
  t3896 = t3891 + t3892 + t3893;
  t3897 = t3420*t3896;
  t3898 = t3890 + t3897;
  t3901 = t3416*t3813;
  t3903 = t3901 + t3849 + t3902;
  t3906 = t3903*t3673;
  t3908 = -1.*t3813*t3512;
  t3912 = t3907 + t3908 + t3855;
  t3915 = t3637*t3912;
  t3916 = t3906 + t3915;
  t3919 = t3813*t3512;
  t3920 = t3918 + t3919 + t3862;
  t3921 = t3920*t3694;
  t3923 = -1.*t3813*t3599;
  t3926 = t3922 + t3873 + t3923;
  t3927 = t3673*t3926;
  t3928 = t3921 + t3927;
  t3930 = -1.*t3416*t3813;
  t3935 = t3930 + t3888 + t3934;
  t3936 = t3935*t3694;
  t3938 = t3813*t3599;
  t3939 = t3937 + t3891 + t3938;
  t3940 = t3637*t3939;
  t3943 = t3936 + t3940;
  t3960 = t3496*t3794;
  t3962 = t3960 + t3918 + t3961;
  t3967 = t3543*t3962;
  t3968 = -1.*t3555*t3808;
  t3971 = -1.*t3794*t3594;
  t3972 = t3968 + t3922 + t3971;
  t3976 = t3483*t3972;
  t3977 = t3967 + t3976;
  t3981 = -1.*t3399*t3794;
  t3986 = 0. + t3981 + t3934;
  t3987 = t3986*t3543;
  t3992 = t3555*t3808;
  t3993 = t3794*t3594;
  t3999 = t3992 + t3937 + t3993;
  t4000 = t3322*t3999;
  t4001 = t3987 + t4000;
  t3946 = t3399*t3794;
  t3950 = 0. + t3946 + t3902;
  t3951 = t3483*t3950;
  t3952 = -1.*t3496*t3794;
  t3953 = -1.000000637725*t3808*t3504;
  t3956 = t3952 + t3907 + t3953;
  t3957 = t3322*t3956;
  t3958 = t3951 + t3957;
  t4021 = 0.091*t3142;
  t4022 = t3469*t3782;
  t4023 = t3477*t3791;
  t4024 = t4022 + t4023 + t3961;
  t4025 = -1.*t4006*t4024;
  t4026 = -1.*t4006*t3808;
  t4027 = -0.366501*t3782*t3504;
  t4028 = -0.930418*t3791*t3504;
  t4029 = t4026 + t4027 + t4028;
  t4030 = -1.000000637725*t3504*t4029;
  t4031 = t4021 + t4025 + t4030;
  t4004 = 0.091*t3469;
  t4007 = -1.*t3142*t3782;
  t4015 = -1.*t3264*t3791;
  t4016 = 0. + t4007 + t4015;
  t4017 = -1.*t4006*t4016;
  t4019 = 0. + t4004 + t4017;
  t4033 = 0.033351591*t3504;
  t4034 = t3142*t3782;
  t4035 = t3264*t3791;
  t4042 = 0. + t4034 + t4035;
  t4043 = -1.000000637725*t4042*t3504;
  t4044 = 0. + t4033 + t4043;
  t3733 = 0.818753*t3420*t3731;
  t3748 = 0.818753*t3516*t3740;
  t3763 = 0.818753*t3606*t3762;
  t3764 = t3733 + t3748 + t3763;
  t4064 = 0.818753*t3731*t3656;
  t4065 = 0.818753*t3740*t3686;
  t4066 = 0.818753*t3762*t3713;
  t4067 = t4064 + t4065 + t4066;
  t3861 = 0.818753*t3606*t3860;
  t3882 = 0.818753*t3420*t3881;
  t3899 = 0.818753*t3516*t3898;
  t3900 = t3861 + t3882 + t3899;
  t4068 = 0.818753*t3860*t3713;
  t4069 = 0.818753*t3656*t3881;
  t4070 = 0.818753*t3686*t3898;
  t4071 = t4068 + t4069 + t4070;
  t4104 = 0.818753*t3860*t3762;
  t4105 = 0.818753*t3731*t3881;
  t4106 = 0.818753*t3740*t3898;
  t4107 = t4104 + t4105 + t4106;
  t4189 = 1. + t3797;
  t3917 = 0.818753*t3916*t3606;
  t3929 = 0.818753*t3420*t3928;
  t3944 = 0.818753*t3516*t3943;
  t3945 = t3917 + t3929 + t3944;
  t4072 = 0.818753*t3916*t3713;
  t4073 = 0.818753*t3656*t3928;
  t4074 = 0.818753*t3686*t3943;
  t4078 = t4072 + t4073 + t4074;
  t4108 = 0.818753*t3916*t3762;
  t4109 = 0.818753*t3731*t3928;
  t4112 = 0.818753*t3740*t3943;
  t4113 = t4108 + t4109 + t4112;
  t4166 = 0.818753*t3916*t3860;
  t4128 = 0.000053*t3420;
  t4129 = 0.001929*t3516;
  t4130 = -1.e-6*t3606;
  t4131 = t4128 + t4129 + t4130;
  t4133 = 0.00077*t3420;
  t4134 = 0.000053*t3516;
  t4135 = 2.e-6*t3606;
  t4136 = t4133 + t4134 + t4135;
  t4138 = 2.e-6*t3420;
  t4142 = -1.e-6*t3516;
  t4143 = 0.001627*t3606;
  t4144 = t4138 + t4142 + t4143;
  t4167 = 0.818753*t3928*t3881;
  t4168 = 0.818753*t3943*t3898;
  t4151 = 0.000053*t3637;
  t4152 = 0.001929*t3673;
  t4153 = -1.e-6*t3694;
  t4154 = t4151 + t4152 + t4153;
  t4156 = 0.00077*t3637;
  t4157 = 0.000053*t3673;
  t4158 = 2.e-6*t3694;
  t4159 = t4156 + t4157 + t4158;
  t4161 = 2.e-6*t3637;
  t4162 = -1.e-6*t3673;
  t4163 = 0.001627*t3694;
  t4164 = t4161 + t4162 + t4163;
  t4170 = 0.001929*t3483;
  t4171 = 0.000053*t3322;
  t4172 = -1.e-6*t3543;
  t4173 = t4170 + t4171 + t4172;
  t4175 = 0.000053*t3483;
  t4176 = 0.00077*t3322;
  t4177 = 2.e-6*t3543;
  t4178 = t4175 + t4176 + t4177;
  t4180 = -1.e-6*t3483;
  t4181 = 2.e-6*t3322;
  t4182 = 0.001627*t3543;
  t4183 = t4180 + t4181 + t4182;
  t4190 = 2.e-6*t4189;
  t4191 = -0.000053000033799425*t3504;
  t4192 = t4190 + t4191;
  t4194 = -1.e-6*t4189;
  t4195 = -0.0019290012301715247*t3504;
  t4196 = t4194 + t4195;
  t4198 = 0.001627*t4189;
  t4199 = 1.0000006377249999e-6*t3504;
  t4200 = t4198 + t4199;
  t3959 = 0.818753*t3958*t3606;
  t3980 = 0.818753*t3420*t3977;
  t4002 = 0.818753*t3516*t4001;
  t4003 = t3959 + t3980 + t4002;
  t4079 = 0.818753*t3656*t3977;
  t4080 = 0.818753*t3686*t4001;
  t4081 = 0.818753*t3958*t3713;
  t4082 = t4079 + t4080 + t4081;
  t4114 = 0.818753*t3731*t3977;
  t4115 = 0.818753*t3740*t4001;
  t4116 = 0.818753*t3958*t3762;
  t4117 = t4114 + t4115 + t4116;
  t4185 = 0.818753*t3958*t3860;
  t4186 = 0.818753*t3977*t3881;
  t4187 = 0.818753*t4001*t3898;
  t4230 = 0.818753*t3958*t3916;
  t4231 = 0.818753*t3977*t3928;
  t4232 = 0.818753*t4001*t3943;
  t4020 = 0.818753*t4019*t3516;
  t4032 = 0.818753*t3420*t4031;
  t4045 = 0.818753*t4044*t3606;
  t4046 = t4020 + t4032 + t4045;
  t4083 = 0.818753*t3656*t4031;
  t4084 = 0.818753*t4019*t3686;
  t4088 = 0.818753*t4044*t3713;
  t4089 = t4083 + t4084 + t4088;
  t4118 = 0.818753*t3731*t4031;
  t4119 = 0.818753*t4019*t3740;
  t4120 = 0.818753*t4044*t3762;
  t4121 = t4118 + t4119 + t4120;
  t4202 = 0.818753*t4044*t3860;
  t4203 = 0.818753*t4031*t3881;
  t4204 = 0.818753*t4019*t3898;
  t4237 = 0.818753*t4044*t3916;
  t4238 = 0.818753*t4031*t3928;
  t4239 = 0.818753*t4019*t3943;
  t4269 = 0.818753*t4044*t3958;
  t4270 = 0.818753*t4031*t3977;
  t4271 = 0.818753*t4019*t4001;
  t4047 = 2.895970298628945e-7*t3420;
  t4048 = 7.906262964999585e-6*t3516;
  t4049 = 0.0015921651620852287*t3606;
  t4050 = t4047 + t4048 + t4049;
  t4090 = 2.895970298628945e-7*t3656;
  t4091 = 7.906262964999585e-6*t3686;
  t4092 = 0.0015921651620852287*t3713;
  t4093 = t4090 + t4091 + t4092;
  t4122 = 2.895970298628945e-7*t3731;
  t4123 = 7.906262964999585e-6*t3740;
  t4124 = 0.0015921651620852287*t3762;
  t4125 = t4122 + t4123 + t4124;
  t4209 = 0.0015921651620852287*t3860;
  t4210 = 2.895970298628945e-7*t3881;
  t4211 = 7.906262964999585e-6*t3898;
  t4244 = 0.0015921651620852287*t3916;
  t4245 = 2.895970298628945e-7*t3928;
  t4246 = 7.906262964999585e-6*t3943;
  t4278 = 0.0015921651620852287*t3958;
  t4279 = 2.895970298628945e-7*t3977;
  t4280 = 7.906262964999585e-6*t4001;
  t4303 = 7.906262964999585e-6*t4019;
  t4306 = 0.0015921651620852287*t4044;
  t4307 = 2.895970298628945e-7*t4031;
  p_output1[0]=0.818753*Power(t3420,2) + 0.818753*Power(t3516,2) + 0.818753*Power(t3606,2);
  p_output1[1]=t3719;
  p_output1[2]=t3764;
  p_output1[3]=t3900;
  p_output1[4]=t3945;
  p_output1[5]=t4003;
  p_output1[6]=t4046;
  p_output1[7]=t4050;
  p_output1[8]=0;
  p_output1[9]=0;
  p_output1[10]=0;
  p_output1[11]=0;
  p_output1[12]=0;
  p_output1[13]=0;
  p_output1[14]=0;
  p_output1[15]=0;
  p_output1[16]=0;
  p_output1[17]=0;
  p_output1[18]=0;
  p_output1[19]=0;
  p_output1[20]=0;
  p_output1[21]=0;
  p_output1[22]=0;
  p_output1[23]=0;
  p_output1[24]=0;
  p_output1[25]=0;
  p_output1[26]=0;
  p_output1[27]=0;
  p_output1[28]=0;
  p_output1[29]=0;
  p_output1[30]=t3719;
  p_output1[31]=0.818753*Power(t3656,2) + 0.818753*Power(t3686,2) + 0.818753*Power(t3713,2);
  p_output1[32]=t4067;
  p_output1[33]=t4071;
  p_output1[34]=t4078;
  p_output1[35]=t4082;
  p_output1[36]=t4089;
  p_output1[37]=t4093;
  p_output1[38]=0;
  p_output1[39]=0;
  p_output1[40]=0;
  p_output1[41]=0;
  p_output1[42]=0;
  p_output1[43]=0;
  p_output1[44]=0;
  p_output1[45]=0;
  p_output1[46]=0;
  p_output1[47]=0;
  p_output1[48]=0;
  p_output1[49]=0;
  p_output1[50]=0;
  p_output1[51]=0;
  p_output1[52]=0;
  p_output1[53]=0;
  p_output1[54]=0;
  p_output1[55]=0;
  p_output1[56]=0;
  p_output1[57]=0;
  p_output1[58]=0;
  p_output1[59]=0;
  p_output1[60]=t3764;
  p_output1[61]=t4067;
  p_output1[62]=0.818753*Power(t3731,2) + 0.818753*Power(t3740,2) + 0.818753*Power(t3762,2);
  p_output1[63]=t4107;
  p_output1[64]=t4113;
  p_output1[65]=t4117;
  p_output1[66]=t4121;
  p_output1[67]=t4125;
  p_output1[68]=0;
  p_output1[69]=0;
  p_output1[70]=0;
  p_output1[71]=0;
  p_output1[72]=0;
  p_output1[73]=0;
  p_output1[74]=0;
  p_output1[75]=0;
  p_output1[76]=0;
  p_output1[77]=0;
  p_output1[78]=0;
  p_output1[79]=0;
  p_output1[80]=0;
  p_output1[81]=0;
  p_output1[82]=0;
  p_output1[83]=0;
  p_output1[84]=0;
  p_output1[85]=0;
  p_output1[86]=0;
  p_output1[87]=0;
  p_output1[88]=0;
  p_output1[89]=0;
  p_output1[90]=t3900;
  p_output1[91]=t4071;
  p_output1[92]=t4107;
  p_output1[93]=0.818753*Power(t3860,2) + 0.818753*Power(t3881,2) + 0.818753*Power(t3898,2) + t3516*t4131 + t3420*t4136 + t3606*t4144;
  p_output1[94]=t3516*t4154 + t3420*t4159 + t3606*t4164 + t4166 + t4167 + t4168;
  p_output1[95]=t3516*t4173 + t3420*t4178 + t3606*t4183 + t4185 + t4186 + t4187;
  p_output1[96]=t3420*t4192 + t3516*t4196 + t3606*t4200 + t4202 + t4203 + t4204;
  p_output1[97]=0.0007700004910482499*t3420 + 0.000053000033799425*t3516 + 2.0000012754499998e-6*t3606 + t4209 + t4210 + t4211;
  p_output1[98]=0;
  p_output1[99]=0;
  p_output1[100]=0;
  p_output1[101]=0;
  p_output1[102]=0;
  p_output1[103]=0;
  p_output1[104]=0;
  p_output1[105]=0;
  p_output1[106]=0;
  p_output1[107]=0;
  p_output1[108]=0;
  p_output1[109]=0;
  p_output1[110]=0;
  p_output1[111]=0;
  p_output1[112]=0;
  p_output1[113]=0;
  p_output1[114]=0;
  p_output1[115]=0;
  p_output1[116]=0;
  p_output1[117]=0;
  p_output1[118]=0;
  p_output1[119]=0;
  p_output1[120]=t3945;
  p_output1[121]=t4078;
  p_output1[122]=t4113;
  p_output1[123]=t3673*t4131 + t3637*t4136 + t3694*t4144 + t4166 + t4167 + t4168;
  p_output1[124]=0.818753*Power(t3916,2) + 0.818753*Power(t3928,2) + 0.818753*Power(t3943,2) + t3673*t4154 + t3637*t4159 + t3694*t4164;
  p_output1[125]=t3673*t4173 + t3637*t4178 + t3694*t4183 + t4230 + t4231 + t4232;
  p_output1[126]=t3637*t4192 + t3673*t4196 + t3694*t4200 + t4237 + t4238 + t4239;
  p_output1[127]=0.0007700004910482499*t3637 + 0.000053000033799425*t3673 + 2.0000012754499998e-6*t3694 + t4244 + t4245 + t4246;
  p_output1[128]=0;
  p_output1[129]=0;
  p_output1[130]=0;
  p_output1[131]=0;
  p_output1[132]=0;
  p_output1[133]=0;
  p_output1[134]=0;
  p_output1[135]=0;
  p_output1[136]=0;
  p_output1[137]=0;
  p_output1[138]=0;
  p_output1[139]=0;
  p_output1[140]=0;
  p_output1[141]=0;
  p_output1[142]=0;
  p_output1[143]=0;
  p_output1[144]=0;
  p_output1[145]=0;
  p_output1[146]=0;
  p_output1[147]=0;
  p_output1[148]=0;
  p_output1[149]=0;
  p_output1[150]=t4003;
  p_output1[151]=t4082;
  p_output1[152]=t4117;
  p_output1[153]=t3483*t4131 + t3322*t4136 + t3543*t4144 + t4185 + t4186 + t4187;
  p_output1[154]=t3483*t4154 + t3322*t4159 + t3543*t4164 + t4230 + t4231 + t4232;
  p_output1[155]=0.818753*Power(t3958,2) + 0.818753*Power(t3977,2) + 0.818753*Power(t4001,2) + t3483*t4173 + t3322*t4178 + t3543*t4183;
  p_output1[156]=t3322*t4192 + t3483*t4196 + t3543*t4200 + t4269 + t4270 + t4271;
  p_output1[157]=0.0007700004910482499*t3322 + 0.000053000033799425*t3483 + 2.0000012754499998e-6*t3543 + t4278 + t4279 + t4280;
  p_output1[158]=0;
  p_output1[159]=0;
  p_output1[160]=0;
  p_output1[161]=0;
  p_output1[162]=0;
  p_output1[163]=0;
  p_output1[164]=0;
  p_output1[165]=0;
  p_output1[166]=0;
  p_output1[167]=0;
  p_output1[168]=0;
  p_output1[169]=0;
  p_output1[170]=0;
  p_output1[171]=0;
  p_output1[172]=0;
  p_output1[173]=0;
  p_output1[174]=0;
  p_output1[175]=0;
  p_output1[176]=0;
  p_output1[177]=0;
  p_output1[178]=0;
  p_output1[179]=0;
  p_output1[180]=t4046;
  p_output1[181]=t4089;
  p_output1[182]=t4121;
  p_output1[183]=-1.000000637725*t3504*t4131 + t4144*t4189 + t4202 + t4203 + t4204;
  p_output1[184]=-1.000000637725*t3504*t4154 + t4164*t4189 + t4237 + t4238 + t4239;
  p_output1[185]=-1.000000637725*t3504*t4173 + t4183*t4189 + t4269 + t4270 + t4271;
  p_output1[186]=0.818753*Power(t4019,2) + 0.818753*Power(t4031,2) + 0.818753*Power(t4044,2) - 1.000000637725*t3504*t4196 + t4189*t4200;
  p_output1[187]=-0.00005300006759887155*t3504 + 2.0000012754499998e-6*t4189 + t4303 + t4306 + t4307;
  p_output1[188]=0;
  p_output1[189]=0;
  p_output1[190]=0;
  p_output1[191]=0;
  p_output1[192]=0;
  p_output1[193]=0;
  p_output1[194]=0;
  p_output1[195]=0;
  p_output1[196]=0;
  p_output1[197]=0;
  p_output1[198]=0;
  p_output1[199]=0;
  p_output1[200]=0;
  p_output1[201]=0;
  p_output1[202]=0;
  p_output1[203]=0;
  p_output1[204]=0;
  p_output1[205]=0;
  p_output1[206]=0;
  p_output1[207]=0;
  p_output1[208]=0;
  p_output1[209]=0;
  p_output1[210]=t4050;
  p_output1[211]=t4093;
  p_output1[212]=t4125;
  p_output1[213]=1.000000637725*t4136 + t4209 + t4210 + t4211;
  p_output1[214]=1.000000637725*t4159 + t4244 + t4245 + t4246;
  p_output1[215]=1.000000637725*t4178 + t4278 + t4279 + t4280;
  p_output1[216]=1.000000637725*t4192 + t4303 + t4306 + t4307;
  p_output1[217]=0.0007730972180754517;
  p_output1[218]=0;
  p_output1[219]=0;
  p_output1[220]=0;
  p_output1[221]=0;
  p_output1[222]=0;
  p_output1[223]=0;
  p_output1[224]=0;
  p_output1[225]=0;
  p_output1[226]=0;
  p_output1[227]=0;
  p_output1[228]=0;
  p_output1[229]=0;
  p_output1[230]=0;
  p_output1[231]=0;
  p_output1[232]=0;
  p_output1[233]=0;
  p_output1[234]=0;
  p_output1[235]=0;
  p_output1[236]=0;
  p_output1[237]=0;
  p_output1[238]=0;
  p_output1[239]=0;
  p_output1[240]=0;
  p_output1[241]=0;
  p_output1[242]=0;
  p_output1[243]=0;
  p_output1[244]=0;
  p_output1[245]=0;
  p_output1[246]=0;
  p_output1[247]=0;
  p_output1[248]=0;
  p_output1[249]=0;
  p_output1[250]=0;
  p_output1[251]=0;
  p_output1[252]=0;
  p_output1[253]=0;
  p_output1[254]=0;
  p_output1[255]=0;
  p_output1[256]=0;
  p_output1[257]=0;
  p_output1[258]=0;
  p_output1[259]=0;
  p_output1[260]=0;
  p_output1[261]=0;
  p_output1[262]=0;
  p_output1[263]=0;
  p_output1[264]=0;
  p_output1[265]=0;
  p_output1[266]=0;
  p_output1[267]=0;
  p_output1[268]=0;
  p_output1[269]=0;
  p_output1[270]=0;
  p_output1[271]=0;
  p_output1[272]=0;
  p_output1[273]=0;
  p_output1[274]=0;
  p_output1[275]=0;
  p_output1[276]=0;
  p_output1[277]=0;
  p_output1[278]=0;
  p_output1[279]=0;
  p_output1[280]=0;
  p_output1[281]=0;
  p_output1[282]=0;
  p_output1[283]=0;
  p_output1[284]=0;
  p_output1[285]=0;
  p_output1[286]=0;
  p_output1[287]=0;
  p_output1[288]=0;
  p_output1[289]=0;
  p_output1[290]=0;
  p_output1[291]=0;
  p_output1[292]=0;
  p_output1[293]=0;
  p_output1[294]=0;
  p_output1[295]=0;
  p_output1[296]=0;
  p_output1[297]=0;
  p_output1[298]=0;
  p_output1[299]=0;
  p_output1[300]=0;
  p_output1[301]=0;
  p_output1[302]=0;
  p_output1[303]=0;
  p_output1[304]=0;
  p_output1[305]=0;
  p_output1[306]=0;
  p_output1[307]=0;
  p_output1[308]=0;
  p_output1[309]=0;
  p_output1[310]=0;
  p_output1[311]=0;
  p_output1[312]=0;
  p_output1[313]=0;
  p_output1[314]=0;
  p_output1[315]=0;
  p_output1[316]=0;
  p_output1[317]=0;
  p_output1[318]=0;
  p_output1[319]=0;
  p_output1[320]=0;
  p_output1[321]=0;
  p_output1[322]=0;
  p_output1[323]=0;
  p_output1[324]=0;
  p_output1[325]=0;
  p_output1[326]=0;
  p_output1[327]=0;
  p_output1[328]=0;
  p_output1[329]=0;
  p_output1[330]=0;
  p_output1[331]=0;
  p_output1[332]=0;
  p_output1[333]=0;
  p_output1[334]=0;
  p_output1[335]=0;
  p_output1[336]=0;
  p_output1[337]=0;
  p_output1[338]=0;
  p_output1[339]=0;
  p_output1[340]=0;
  p_output1[341]=0;
  p_output1[342]=0;
  p_output1[343]=0;
  p_output1[344]=0;
  p_output1[345]=0;
  p_output1[346]=0;
  p_output1[347]=0;
  p_output1[348]=0;
  p_output1[349]=0;
  p_output1[350]=0;
  p_output1[351]=0;
  p_output1[352]=0;
  p_output1[353]=0;
  p_output1[354]=0;
  p_output1[355]=0;
  p_output1[356]=0;
  p_output1[357]=0;
  p_output1[358]=0;
  p_output1[359]=0;
  p_output1[360]=0;
  p_output1[361]=0;
  p_output1[362]=0;
  p_output1[363]=0;
  p_output1[364]=0;
  p_output1[365]=0;
  p_output1[366]=0;
  p_output1[367]=0;
  p_output1[368]=0;
  p_output1[369]=0;
  p_output1[370]=0;
  p_output1[371]=0;
  p_output1[372]=0;
  p_output1[373]=0;
  p_output1[374]=0;
  p_output1[375]=0;
  p_output1[376]=0;
  p_output1[377]=0;
  p_output1[378]=0;
  p_output1[379]=0;
  p_output1[380]=0;
  p_output1[381]=0;
  p_output1[382]=0;
  p_output1[383]=0;
  p_output1[384]=0;
  p_output1[385]=0;
  p_output1[386]=0;
  p_output1[387]=0;
  p_output1[388]=0;
  p_output1[389]=0;
  p_output1[390]=0;
  p_output1[391]=0;
  p_output1[392]=0;
  p_output1[393]=0;
  p_output1[394]=0;
  p_output1[395]=0;
  p_output1[396]=0;
  p_output1[397]=0;
  p_output1[398]=0;
  p_output1[399]=0;
  p_output1[400]=0;
  p_output1[401]=0;
  p_output1[402]=0;
  p_output1[403]=0;
  p_output1[404]=0;
  p_output1[405]=0;
  p_output1[406]=0;
  p_output1[407]=0;
  p_output1[408]=0;
  p_output1[409]=0;
  p_output1[410]=0;
  p_output1[411]=0;
  p_output1[412]=0;
  p_output1[413]=0;
  p_output1[414]=0;
  p_output1[415]=0;
  p_output1[416]=0;
  p_output1[417]=0;
  p_output1[418]=0;
  p_output1[419]=0;
  p_output1[420]=0;
  p_output1[421]=0;
  p_output1[422]=0;
  p_output1[423]=0;
  p_output1[424]=0;
  p_output1[425]=0;
  p_output1[426]=0;
  p_output1[427]=0;
  p_output1[428]=0;
  p_output1[429]=0;
  p_output1[430]=0;
  p_output1[431]=0;
  p_output1[432]=0;
  p_output1[433]=0;
  p_output1[434]=0;
  p_output1[435]=0;
  p_output1[436]=0;
  p_output1[437]=0;
  p_output1[438]=0;
  p_output1[439]=0;
  p_output1[440]=0;
  p_output1[441]=0;
  p_output1[442]=0;
  p_output1[443]=0;
  p_output1[444]=0;
  p_output1[445]=0;
  p_output1[446]=0;
  p_output1[447]=0;
  p_output1[448]=0;
  p_output1[449]=0;
  p_output1[450]=0;
  p_output1[451]=0;
  p_output1[452]=0;
  p_output1[453]=0;
  p_output1[454]=0;
  p_output1[455]=0;
  p_output1[456]=0;
  p_output1[457]=0;
  p_output1[458]=0;
  p_output1[459]=0;
  p_output1[460]=0;
  p_output1[461]=0;
  p_output1[462]=0;
  p_output1[463]=0;
  p_output1[464]=0;
  p_output1[465]=0;
  p_output1[466]=0;
  p_output1[467]=0;
  p_output1[468]=0;
  p_output1[469]=0;
  p_output1[470]=0;
  p_output1[471]=0;
  p_output1[472]=0;
  p_output1[473]=0;
  p_output1[474]=0;
  p_output1[475]=0;
  p_output1[476]=0;
  p_output1[477]=0;
  p_output1[478]=0;
  p_output1[479]=0;
  p_output1[480]=0;
  p_output1[481]=0;
  p_output1[482]=0;
  p_output1[483]=0;
  p_output1[484]=0;
  p_output1[485]=0;
  p_output1[486]=0;
  p_output1[487]=0;
  p_output1[488]=0;
  p_output1[489]=0;
  p_output1[490]=0;
  p_output1[491]=0;
  p_output1[492]=0;
  p_output1[493]=0;
  p_output1[494]=0;
  p_output1[495]=0;
  p_output1[496]=0;
  p_output1[497]=0;
  p_output1[498]=0;
  p_output1[499]=0;
  p_output1[500]=0;
  p_output1[501]=0;
  p_output1[502]=0;
  p_output1[503]=0;
  p_output1[504]=0;
  p_output1[505]=0;
  p_output1[506]=0;
  p_output1[507]=0;
  p_output1[508]=0;
  p_output1[509]=0;
  p_output1[510]=0;
  p_output1[511]=0;
  p_output1[512]=0;
  p_output1[513]=0;
  p_output1[514]=0;
  p_output1[515]=0;
  p_output1[516]=0;
  p_output1[517]=0;
  p_output1[518]=0;
  p_output1[519]=0;
  p_output1[520]=0;
  p_output1[521]=0;
  p_output1[522]=0;
  p_output1[523]=0;
  p_output1[524]=0;
  p_output1[525]=0;
  p_output1[526]=0;
  p_output1[527]=0;
  p_output1[528]=0;
  p_output1[529]=0;
  p_output1[530]=0;
  p_output1[531]=0;
  p_output1[532]=0;
  p_output1[533]=0;
  p_output1[534]=0;
  p_output1[535]=0;
  p_output1[536]=0;
  p_output1[537]=0;
  p_output1[538]=0;
  p_output1[539]=0;
  p_output1[540]=0;
  p_output1[541]=0;
  p_output1[542]=0;
  p_output1[543]=0;
  p_output1[544]=0;
  p_output1[545]=0;
  p_output1[546]=0;
  p_output1[547]=0;
  p_output1[548]=0;
  p_output1[549]=0;
  p_output1[550]=0;
  p_output1[551]=0;
  p_output1[552]=0;
  p_output1[553]=0;
  p_output1[554]=0;
  p_output1[555]=0;
  p_output1[556]=0;
  p_output1[557]=0;
  p_output1[558]=0;
  p_output1[559]=0;
  p_output1[560]=0;
  p_output1[561]=0;
  p_output1[562]=0;
  p_output1[563]=0;
  p_output1[564]=0;
  p_output1[565]=0;
  p_output1[566]=0;
  p_output1[567]=0;
  p_output1[568]=0;
  p_output1[569]=0;
  p_output1[570]=0;
  p_output1[571]=0;
  p_output1[572]=0;
  p_output1[573]=0;
  p_output1[574]=0;
  p_output1[575]=0;
  p_output1[576]=0;
  p_output1[577]=0;
  p_output1[578]=0;
  p_output1[579]=0;
  p_output1[580]=0;
  p_output1[581]=0;
  p_output1[582]=0;
  p_output1[583]=0;
  p_output1[584]=0;
  p_output1[585]=0;
  p_output1[586]=0;
  p_output1[587]=0;
  p_output1[588]=0;
  p_output1[589]=0;
  p_output1[590]=0;
  p_output1[591]=0;
  p_output1[592]=0;
  p_output1[593]=0;
  p_output1[594]=0;
  p_output1[595]=0;
  p_output1[596]=0;
  p_output1[597]=0;
  p_output1[598]=0;
  p_output1[599]=0;
  p_output1[600]=0;
  p_output1[601]=0;
  p_output1[602]=0;
  p_output1[603]=0;
  p_output1[604]=0;
  p_output1[605]=0;
  p_output1[606]=0;
  p_output1[607]=0;
  p_output1[608]=0;
  p_output1[609]=0;
  p_output1[610]=0;
  p_output1[611]=0;
  p_output1[612]=0;
  p_output1[613]=0;
  p_output1[614]=0;
  p_output1[615]=0;
  p_output1[616]=0;
  p_output1[617]=0;
  p_output1[618]=0;
  p_output1[619]=0;
  p_output1[620]=0;
  p_output1[621]=0;
  p_output1[622]=0;
  p_output1[623]=0;
  p_output1[624]=0;
  p_output1[625]=0;
  p_output1[626]=0;
  p_output1[627]=0;
  p_output1[628]=0;
  p_output1[629]=0;
  p_output1[630]=0;
  p_output1[631]=0;
  p_output1[632]=0;
  p_output1[633]=0;
  p_output1[634]=0;
  p_output1[635]=0;
  p_output1[636]=0;
  p_output1[637]=0;
  p_output1[638]=0;
  p_output1[639]=0;
  p_output1[640]=0;
  p_output1[641]=0;
  p_output1[642]=0;
  p_output1[643]=0;
  p_output1[644]=0;
  p_output1[645]=0;
  p_output1[646]=0;
  p_output1[647]=0;
  p_output1[648]=0;
  p_output1[649]=0;
  p_output1[650]=0;
  p_output1[651]=0;
  p_output1[652]=0;
  p_output1[653]=0;
  p_output1[654]=0;
  p_output1[655]=0;
  p_output1[656]=0;
  p_output1[657]=0;
  p_output1[658]=0;
  p_output1[659]=0;
  p_output1[660]=0;
  p_output1[661]=0;
  p_output1[662]=0;
  p_output1[663]=0;
  p_output1[664]=0;
  p_output1[665]=0;
  p_output1[666]=0;
  p_output1[667]=0;
  p_output1[668]=0;
  p_output1[669]=0;
  p_output1[670]=0;
  p_output1[671]=0;
  p_output1[672]=0;
  p_output1[673]=0;
  p_output1[674]=0;
  p_output1[675]=0;
  p_output1[676]=0;
  p_output1[677]=0;
  p_output1[678]=0;
  p_output1[679]=0;
  p_output1[680]=0;
  p_output1[681]=0;
  p_output1[682]=0;
  p_output1[683]=0;
  p_output1[684]=0;
  p_output1[685]=0;
  p_output1[686]=0;
  p_output1[687]=0;
  p_output1[688]=0;
  p_output1[689]=0;
  p_output1[690]=0;
  p_output1[691]=0;
  p_output1[692]=0;
  p_output1[693]=0;
  p_output1[694]=0;
  p_output1[695]=0;
  p_output1[696]=0;
  p_output1[697]=0;
  p_output1[698]=0;
  p_output1[699]=0;
  p_output1[700]=0;
  p_output1[701]=0;
  p_output1[702]=0;
  p_output1[703]=0;
  p_output1[704]=0;
  p_output1[705]=0;
  p_output1[706]=0;
  p_output1[707]=0;
  p_output1[708]=0;
  p_output1[709]=0;
  p_output1[710]=0;
  p_output1[711]=0;
  p_output1[712]=0;
  p_output1[713]=0;
  p_output1[714]=0;
  p_output1[715]=0;
  p_output1[716]=0;
  p_output1[717]=0;
  p_output1[718]=0;
  p_output1[719]=0;
  p_output1[720]=0;
  p_output1[721]=0;
  p_output1[722]=0;
  p_output1[723]=0;
  p_output1[724]=0;
  p_output1[725]=0;
  p_output1[726]=0;
  p_output1[727]=0;
  p_output1[728]=0;
  p_output1[729]=0;
  p_output1[730]=0;
  p_output1[731]=0;
  p_output1[732]=0;
  p_output1[733]=0;
  p_output1[734]=0;
  p_output1[735]=0;
  p_output1[736]=0;
  p_output1[737]=0;
  p_output1[738]=0;
  p_output1[739]=0;
  p_output1[740]=0;
  p_output1[741]=0;
  p_output1[742]=0;
  p_output1[743]=0;
  p_output1[744]=0;
  p_output1[745]=0;
  p_output1[746]=0;
  p_output1[747]=0;
  p_output1[748]=0;
  p_output1[749]=0;
  p_output1[750]=0;
  p_output1[751]=0;
  p_output1[752]=0;
  p_output1[753]=0;
  p_output1[754]=0;
  p_output1[755]=0;
  p_output1[756]=0;
  p_output1[757]=0;
  p_output1[758]=0;
  p_output1[759]=0;
  p_output1[760]=0;
  p_output1[761]=0;
  p_output1[762]=0;
  p_output1[763]=0;
  p_output1[764]=0;
  p_output1[765]=0;
  p_output1[766]=0;
  p_output1[767]=0;
  p_output1[768]=0;
  p_output1[769]=0;
  p_output1[770]=0;
  p_output1[771]=0;
  p_output1[772]=0;
  p_output1[773]=0;
  p_output1[774]=0;
  p_output1[775]=0;
  p_output1[776]=0;
  p_output1[777]=0;
  p_output1[778]=0;
  p_output1[779]=0;
  p_output1[780]=0;
  p_output1[781]=0;
  p_output1[782]=0;
  p_output1[783]=0;
  p_output1[784]=0;
  p_output1[785]=0;
  p_output1[786]=0;
  p_output1[787]=0;
  p_output1[788]=0;
  p_output1[789]=0;
  p_output1[790]=0;
  p_output1[791]=0;
  p_output1[792]=0;
  p_output1[793]=0;
  p_output1[794]=0;
  p_output1[795]=0;
  p_output1[796]=0;
  p_output1[797]=0;
  p_output1[798]=0;
  p_output1[799]=0;
  p_output1[800]=0;
  p_output1[801]=0;
  p_output1[802]=0;
  p_output1[803]=0;
  p_output1[804]=0;
  p_output1[805]=0;
  p_output1[806]=0;
  p_output1[807]=0;
  p_output1[808]=0;
  p_output1[809]=0;
  p_output1[810]=0;
  p_output1[811]=0;
  p_output1[812]=0;
  p_output1[813]=0;
  p_output1[814]=0;
  p_output1[815]=0;
  p_output1[816]=0;
  p_output1[817]=0;
  p_output1[818]=0;
  p_output1[819]=0;
  p_output1[820]=0;
  p_output1[821]=0;
  p_output1[822]=0;
  p_output1[823]=0;
  p_output1[824]=0;
  p_output1[825]=0;
  p_output1[826]=0;
  p_output1[827]=0;
  p_output1[828]=0;
  p_output1[829]=0;
  p_output1[830]=0;
  p_output1[831]=0;
  p_output1[832]=0;
  p_output1[833]=0;
  p_output1[834]=0;
  p_output1[835]=0;
  p_output1[836]=0;
  p_output1[837]=0;
  p_output1[838]=0;
  p_output1[839]=0;
  p_output1[840]=0;
  p_output1[841]=0;
  p_output1[842]=0;
  p_output1[843]=0;
  p_output1[844]=0;
  p_output1[845]=0;
  p_output1[846]=0;
  p_output1[847]=0;
  p_output1[848]=0;
  p_output1[849]=0;
  p_output1[850]=0;
  p_output1[851]=0;
  p_output1[852]=0;
  p_output1[853]=0;
  p_output1[854]=0;
  p_output1[855]=0;
  p_output1[856]=0;
  p_output1[857]=0;
  p_output1[858]=0;
  p_output1[859]=0;
  p_output1[860]=0;
  p_output1[861]=0;
  p_output1[862]=0;
  p_output1[863]=0;
  p_output1[864]=0;
  p_output1[865]=0;
  p_output1[866]=0;
  p_output1[867]=0;
  p_output1[868]=0;
  p_output1[869]=0;
  p_output1[870]=0;
  p_output1[871]=0;
  p_output1[872]=0;
  p_output1[873]=0;
  p_output1[874]=0;
  p_output1[875]=0;
  p_output1[876]=0;
  p_output1[877]=0;
  p_output1[878]=0;
  p_output1[879]=0;
  p_output1[880]=0;
  p_output1[881]=0;
  p_output1[882]=0;
  p_output1[883]=0;
  p_output1[884]=0;
  p_output1[885]=0;
  p_output1[886]=0;
  p_output1[887]=0;
  p_output1[888]=0;
  p_output1[889]=0;
  p_output1[890]=0;
  p_output1[891]=0;
  p_output1[892]=0;
  p_output1[893]=0;
  p_output1[894]=0;
  p_output1[895]=0;
  p_output1[896]=0;
  p_output1[897]=0;
  p_output1[898]=0;
  p_output1[899]=0;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "One input(s) required (var1).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 30 && ncols == 1) && 
      !(mrows == 1 && ncols == 30))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 30, (mwSize) 30, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1);


}

#else // MATLAB_MEX_FILE

#include "Mmat_L3_digit.hh"

namespace SymFunction
{

void Mmat_L3_digit_raw(double *p_output1, const double *var1)
{
  // Call Subroutines
  output1(p_output1, var1);

}

}

#endif // MATLAB_MEX_FILE
