/*
 * Automatically Generated from Mathematica.
 * Mon 19 Jun 2023 23:05:53 GMT-04:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1)
{
  double t130;
  double t1188;
  double t1233;
  double t1101;
  double t1922;
  double t1929;
  double t2422;
  double t1921;
  double t702;
  double t5627;
  double t1190;
  double t1246;
  double t1714;
  double t5923;
  double t1873;
  double t2732;
  double t2992;
  double t3429;
  double t3545;
  double t3683;
  double t3327;
  double t3854;
  double t3875;
  double t6195;
  double t6373;
  double t6441;
  double t6655;
  double t6668;
  double t6669;
  double t6881;
  double t6898;
  double t6906;
  double t6910;
  double t6915;
  double t6917;
  double t6922;
  double t6935;
  double t6944;
  double t6948;
  double t6963;
  double t6964;
  double t6945;
  double t6967;
  double t6968;
  double t6992;
  double t6993;
  double t6994;
  double t7006;
  double t7007;
  double t7011;
  double t7088;
  double t7055;
  double t7041;
  double t7032;
  double t7016;
  double t7183;
  double t7196;
  double t5900;
  double t6043;
  double t6092;
  double t6180;
  double t6463;
  double t6592;
  double t6603;
  double t6625;
  double t6688;
  double t6689;
  double t6696;
  double t6722;
  double t6752;
  double t6774;
  double t6791;
  double t6792;
  double t6819;
  double t6822;
  double t6832;
  double t6845;
  double t6850;
  double t6858;
  double t6991;
  double t6999;
  double t7024;
  double t7027;
  double t7028;
  double t7031;
  double t7033;
  double t7037;
  double t7039;
  double t7042;
  double t7045;
  double t7048;
  double t7050;
  double t7051;
  double t7052;
  double t7056;
  double t7057;
  double t7058;
  double t7069;
  double t7070;
  double t7071;
  double t7073;
  double t7076;
  double t7077;
  double t7078;
  double t7089;
  double t7090;
  double t7096;
  double t7104;
  double t7106;
  double t7108;
  double t7110;
  double t7114;
  double t7119;
  double t7136;
  double t7139;
  double t7140;
  double t7144;
  double t7145;
  double t7154;
  double t7155;
  double t7156;
  double t7157;
  double t7164;
  double t7168;
  double t7186;
  double t7193;
  double t7195;
  double t7197;
  double t7200;
  double t7201;
  double t7202;
  double t7205;
  double t7206;
  double t7210;
  double t7216;
  double t7220;
  double t7223;
  double t7224;
  double t6805;
  double t6841;
  double t6867;
  double t6879;
  double t7251;
  double t7252;
  double t7255;
  double t7257;
  double t7040;
  double t7063;
  double t7102;
  double t7103;
  double t7261;
  double t7262;
  double t7263;
  double t7266;
  double t7323;
  double t7326;
  double t7333;
  double t7334;
  double t7367;
  double t7368;
  double t7370;
  double t7141;
  double t7180;
  double t7203;
  double t7204;
  double t7268;
  double t7274;
  double t7275;
  double t7278;
  double t7345;
  double t7347;
  double t7348;
  double t7349;
  double t7372;
  double t7411;
  double t7436;
  double t7437;
  double t7388;
  double t7390;
  double t7391;
  double t7394;
  double t7396;
  double t7400;
  double t7401;
  double t7402;
  double t7420;
  double t7421;
  double t7428;
  double t7429;
  double t7412;
  double t7413;
  double t7414;
  double t7418;
  double t7431;
  double t7432;
  double t7433;
  double t7434;
  double t7440;
  double t7441;
  double t7442;
  double t7447;
  double t7448;
  double t7449;
  double t7456;
  double t7457;
  double t7460;
  double t7225;
  double t7226;
  double t7232;
  double t7235;
  double t7281;
  double t7282;
  double t7283;
  double t7284;
  double t7350;
  double t7351;
  double t7352;
  double t7353;
  double t7455;
  double t7462;
  double t7463;
  double t7493;
  double t7494;
  double t7498;
  double t7236;
  double t7237;
  double t7238;
  double t7285;
  double t7286;
  double t7287;
  double t7361;
  double t7363;
  double t7364;
  double t7467;
  double t7468;
  double t7469;
  double t7501;
  double t7502;
  double t7503;
  double t7532;
  double t7540;
  double t7541;
  t130 = Cos(var1[4]);
  t1188 = Cos(var1[6]);
  t1233 = Sin(var1[6]);
  t1101 = Sin(var1[4]);
  t1922 = 0.930418*t1188;
  t1929 = 0.366501*t1233;
  t2422 = t1922 + t1929;
  t1921 = Sin(var1[5]);
  t702 = Cos(var1[5]);
  t5627 = Sin(var1[3]);
  t1190 = 0.366501*t1188;
  t1246 = -0.930418*t1233;
  t1714 = t1190 + t1246;
  t5923 = Cos(var1[3]);
  t1873 = t1101*t1714;
  t2732 = -1.*t130*t1921*t2422;
  t2992 = t1873 + t2732;
  t3429 = -0.366501*t1188;
  t3545 = 0.930418*t1233;
  t3683 = t3429 + t3545;
  t3327 = t1101*t2422;
  t3854 = -1.*t130*t1921*t3683;
  t3875 = t3327 + t3854;
  t6195 = t130*t1714;
  t6373 = t1101*t1921*t2422;
  t6441 = t6195 + t6373;
  t6655 = t130*t2422;
  t6668 = t1101*t1921*t3683;
  t6669 = t6655 + t6668;
  t6881 = -0.032435*t702;
  t6898 = -1.*t1188;
  t6906 = 1. + t6898;
  t6910 = 0.091*t6906;
  t6915 = 0.091948*t1188;
  t6917 = -0.001741*t1233;
  t6922 = t6910 + t6915 + t6917;
  t6935 = -1.*t1921*t6922;
  t6944 = t6881 + t6935;
  t6948 = -0.001741*t1188;
  t6963 = -0.0009480000000000044*t1233;
  t6964 = t6948 + t6963;
  t6945 = t130*t6944;
  t6967 = t1101*t6964;
  t6968 = t6945 + t6967;
  t6992 = -1.*t1101*t6944;
  t6993 = t130*t6964;
  t6994 = t6992 + t6993;
  t7006 = -0.032435*t1921;
  t7007 = t702*t6922;
  t7011 = t7006 + t7007;
  t7088 = -1.*t702*t7011*t2422;
  t7055 = t702*t7011*t3683;
  t7041 = t1921*t7011;
  t7032 = -1.*t702*t7011*t3683;
  t7016 = t702*t7011*t2422;
  t7183 = -1.*t6964*t2422;
  t7196 = t1714*t6964;
  t5900 = -1.*t702*t5627*t1101;
  t6043 = -1.*t5923*t1921;
  t6092 = t5900 + t6043;
  t6180 = -0.915088*t130*t702*t6092;
  t6463 = -1.*t5627*t6441;
  t6592 = t5923*t702*t2422;
  t6603 = t6463 + t6592;
  t6625 = 0.915088*t6603*t2992;
  t6688 = -1.*t5627*t6669;
  t6689 = t5923*t702*t3683;
  t6696 = t6688 + t6689;
  t6722 = 0.915088*t6696*t3875;
  t6752 = t6180 + t6625 + t6722;
  t6774 = t5923*t702*t1101;
  t6791 = -1.*t5627*t1921;
  t6792 = t6774 + t6791;
  t6819 = t5923*t6441;
  t6822 = t702*t5627*t2422;
  t6832 = t6819 + t6822;
  t6845 = t5923*t6669;
  t6850 = t702*t5627*t3683;
  t6858 = t6845 + t6850;
  t6991 = t6968*t2992;
  t6999 = t6994*t6441;
  t7024 = t6991 + t6999 + t7016;
  t7027 = t7024*t3875;
  t7028 = -1.*t6968*t3875;
  t7031 = -1.*t6994*t6669;
  t7033 = t7028 + t7031 + t7032;
  t7037 = t2992*t7033;
  t7039 = t7027 + t7037;
  t7042 = -1.*t702*t1101*t6994;
  t7045 = t130*t702*t6968;
  t7048 = t7041 + t7042 + t7045;
  t7050 = t7048*t3875;
  t7051 = t6968*t3875;
  t7052 = t6994*t6669;
  t7056 = t7051 + t7052 + t7055;
  t7057 = -1.*t130*t702*t7056;
  t7058 = t7050 + t7057;
  t7069 = -1.*t1921*t7011;
  t7070 = t702*t1101*t6994;
  t7071 = -1.*t130*t702*t6968;
  t7073 = t7069 + t7070 + t7071;
  t7076 = t7073*t2992;
  t7077 = -1.*t6968*t2992;
  t7078 = -1.*t6994*t6441;
  t7089 = t7077 + t7078 + t7088;
  t7090 = -1.*t130*t702*t7089;
  t7096 = t7076 + t7090;
  t7104 = -1.*t1714*t6964;
  t7106 = t1921*t6944*t2422;
  t7108 = t7104 + t7088 + t7106;
  t7110 = -1.*t1921*t7108;
  t7114 = -1.*t1921*t7011;
  t7119 = -1.*t702*t6944;
  t7136 = t7114 + t7119;
  t7139 = t702*t7136*t2422;
  t7140 = t7110 + t7139;
  t7144 = t6964*t2422;
  t7145 = -1.*t1921*t6944*t3683;
  t7154 = t7144 + t7055 + t7145;
  t7155 = -1.*t1921*t7154;
  t7156 = t702*t6944;
  t7157 = t7041 + t7156;
  t7164 = t702*t7157*t3683;
  t7168 = t7155 + t7164;
  t7186 = t1921*t6944*t3683;
  t7193 = t7183 + t7032 + t7186;
  t7195 = t702*t7193*t2422;
  t7197 = -1.*t1921*t6944*t2422;
  t7200 = t7196 + t7016 + t7197;
  t7201 = t702*t7200*t3683;
  t7202 = t7195 + t7201;
  t7205 = -1.*t6922*t3683;
  t7206 = t7183 + t7205;
  t7210 = t7206*t1714;
  t7216 = t6922*t2422;
  t7220 = t7196 + t7216;
  t7223 = t7220*t2422;
  t7224 = t7210 + t7223;
  t6805 = -0.915088*t130*t702*t6792;
  t6841 = 0.915088*t6832*t2992;
  t6867 = 0.915088*t6858*t3875;
  t6879 = t6805 + t6841 + t6867;
  t7251 = 0.915088*t6092*t6792;
  t7252 = 0.915088*t6603*t6832;
  t7255 = 0.915088*t6696*t6858;
  t7257 = t7251 + t7252 + t7255;
  t7040 = -0.915088*t130*t702*t7039;
  t7063 = 0.915088*t7058*t2992;
  t7102 = 0.915088*t7096*t3875;
  t7103 = t7040 + t7063 + t7102;
  t7261 = 0.915088*t6092*t7039;
  t7262 = 0.915088*t7058*t6603;
  t7263 = 0.915088*t7096*t6696;
  t7266 = t7261 + t7262 + t7263;
  t7323 = 0.915088*t6792*t7039;
  t7326 = 0.915088*t7058*t6832;
  t7333 = 0.915088*t7096*t6858;
  t7334 = t7323 + t7326 + t7333;
  t7367 = -0.000766*t130*t702;
  t7368 = -4.e-6*t2992;
  t7370 = 0.000013*t3875;
  t7141 = 0.915088*t7140*t3875;
  t7180 = 0.915088*t2992*t7168;
  t7203 = -0.915088*t130*t702*t7202;
  t7204 = t7141 + t7180 + t7203;
  t7268 = 0.915088*t7140*t6696;
  t7274 = 0.915088*t6603*t7168;
  t7275 = 0.915088*t6092*t7202;
  t7278 = t7268 + t7274 + t7275;
  t7345 = 0.915088*t7140*t6858;
  t7347 = 0.915088*t6832*t7168;
  t7348 = 0.915088*t6792*t7202;
  t7349 = t7345 + t7347 + t7348;
  t7372 = t7367 + t7368 + t7370;
  t7411 = 0.915088*t7096*t7140;
  t7436 = 0.915088*t7058*t7168;
  t7437 = 0.915088*t7039*t7202;
  t7388 = 4.e-6*t130*t702;
  t7390 = 0.001148*t2992;
  t7391 = -3.e-6*t3875;
  t7394 = t7388 + t7390 + t7391;
  t7396 = -0.000013*t130*t702;
  t7400 = -3.e-6*t2992;
  t7401 = 0.001017*t3875;
  t7402 = t7396 + t7400 + t7401;
  t7420 = -0.000766*t1921;
  t7421 = -4.e-6*t702*t2422;
  t7428 = 0.000013*t702*t3683;
  t7429 = t7420 + t7421 + t7428;
  t7412 = 4.e-6*t1921;
  t7413 = 0.001148*t702*t2422;
  t7414 = -3.e-6*t702*t3683;
  t7418 = t7412 + t7413 + t7414;
  t7431 = -0.000013*t1921;
  t7432 = -3.e-6*t702*t2422;
  t7433 = 0.001017*t702*t3683;
  t7434 = t7431 + t7432 + t7433;
  t7440 = -4.e-6*t1714;
  t7441 = 0.000013*t2422;
  t7442 = t7440 + t7441;
  t7447 = 0.001148*t1714;
  t7448 = -3.e-6*t2422;
  t7449 = t7447 + t7448;
  t7456 = -3.e-6*t1714;
  t7457 = 0.001017*t2422;
  t7460 = t7456 + t7457;
  t7225 = -0.915088*t130*t702*t7224;
  t7226 = 0.02968087928*t3875*t1714;
  t7232 = -0.02968087928*t2992*t2422;
  t7235 = t7225 + t7226 + t7232;
  t7281 = 0.915088*t6092*t7224;
  t7282 = 0.02968087928*t6696*t1714;
  t7283 = -0.02968087928*t6603*t2422;
  t7284 = t7281 + t7282 + t7283;
  t7350 = 0.915088*t6792*t7224;
  t7351 = 0.02968087928*t6858*t1714;
  t7352 = -0.02968087928*t6832*t2422;
  t7353 = t7350 + t7351 + t7352;
  t7455 = 0.915088*t7039*t7224;
  t7462 = 0.02968087928*t7096*t1714;
  t7463 = -0.02968087928*t7058*t2422;
  t7493 = 0.915088*t7224*t7202;
  t7494 = 0.02968087928*t7140*t1714;
  t7498 = -0.02968087928*t7168*t2422;
  t7236 = -0.0018002532501503663*t2992;
  t7237 = -0.00022324305935101784*t3875;
  t7238 = t7236 + t7237;
  t7285 = -0.0018002532501503663*t6603;
  t7286 = -0.00022324305935101784*t6696;
  t7287 = t7285 + t7286;
  t7361 = -0.0018002532501503663*t6832;
  t7363 = -0.00022324305935101784*t6858;
  t7364 = t7361 + t7363;
  t7467 = -0.00022324305935101784*t7096;
  t7468 = -0.0018002532501503663*t7058;
  t7469 = t7367 + t7467 + t7468 + t7368 + t7370;
  t7501 = -0.00022324305935101784*t7140;
  t7502 = -0.0018002532501503663*t7168;
  t7503 = t7420 + t7501 + t7502 + t7421 + t7428;
  t7532 = -0.000011240888630050262*t1714;
  t7540 = 0.00007139121416862712*t2422;
  t7541 = t7532 + t7540;
  p_output1[0]=0.915088*Power(t2992,2) + 0.915088*Power(t3875,2) + 0.915088*Power(t130,2)*Power(t702,2);
  p_output1[1]=t6752;
  p_output1[2]=t6879;
  p_output1[3]=t7103;
  p_output1[4]=t7204;
  p_output1[5]=t7235;
  p_output1[6]=t7238;
  p_output1[7]=0;
  p_output1[8]=0;
  p_output1[9]=0;
  p_output1[10]=0;
  p_output1[11]=0;
  p_output1[12]=0;
  p_output1[13]=0;
  p_output1[14]=0;
  p_output1[15]=0;
  p_output1[16]=0;
  p_output1[17]=0;
  p_output1[18]=0;
  p_output1[19]=0;
  p_output1[20]=0;
  p_output1[21]=0;
  p_output1[22]=0;
  p_output1[23]=0;
  p_output1[24]=0;
  p_output1[25]=0;
  p_output1[26]=0;
  p_output1[27]=0;
  p_output1[28]=0;
  p_output1[29]=0;
  p_output1[30]=t6752;
  p_output1[31]=0.915088*Power(t6092,2) + 0.915088*Power(t6603,2) + 0.915088*Power(t6696,2);
  p_output1[32]=t7257;
  p_output1[33]=t7266;
  p_output1[34]=t7278;
  p_output1[35]=t7284;
  p_output1[36]=t7287;
  p_output1[37]=0;
  p_output1[38]=0;
  p_output1[39]=0;
  p_output1[40]=0;
  p_output1[41]=0;
  p_output1[42]=0;
  p_output1[43]=0;
  p_output1[44]=0;
  p_output1[45]=0;
  p_output1[46]=0;
  p_output1[47]=0;
  p_output1[48]=0;
  p_output1[49]=0;
  p_output1[50]=0;
  p_output1[51]=0;
  p_output1[52]=0;
  p_output1[53]=0;
  p_output1[54]=0;
  p_output1[55]=0;
  p_output1[56]=0;
  p_output1[57]=0;
  p_output1[58]=0;
  p_output1[59]=0;
  p_output1[60]=t6879;
  p_output1[61]=t7257;
  p_output1[62]=0.915088*Power(t6792,2) + 0.915088*Power(t6832,2) + 0.915088*Power(t6858,2);
  p_output1[63]=t7334;
  p_output1[64]=t7349;
  p_output1[65]=t7353;
  p_output1[66]=t7364;
  p_output1[67]=0;
  p_output1[68]=0;
  p_output1[69]=0;
  p_output1[70]=0;
  p_output1[71]=0;
  p_output1[72]=0;
  p_output1[73]=0;
  p_output1[74]=0;
  p_output1[75]=0;
  p_output1[76]=0;
  p_output1[77]=0;
  p_output1[78]=0;
  p_output1[79]=0;
  p_output1[80]=0;
  p_output1[81]=0;
  p_output1[82]=0;
  p_output1[83]=0;
  p_output1[84]=0;
  p_output1[85]=0;
  p_output1[86]=0;
  p_output1[87]=0;
  p_output1[88]=0;
  p_output1[89]=0;
  p_output1[90]=t7103;
  p_output1[91]=t7266;
  p_output1[92]=t7334;
  p_output1[93]=0.915088*Power(t7039,2) + 0.915088*Power(t7058,2) + 0.915088*Power(t7096,2) - 1.*t130*t702*t7372 + t2992*t7394 + t3875*t7402;
  p_output1[94]=t7411 + t2992*t7418 - 1.*t130*t702*t7429 + t3875*t7434 + t7436 + t7437;
  p_output1[95]=-1.*t130*t702*t7442 + t2992*t7449 + t7455 + t3875*t7460 + t7462 + t7463;
  p_output1[96]=t7469;
  p_output1[97]=0;
  p_output1[98]=0;
  p_output1[99]=0;
  p_output1[100]=0;
  p_output1[101]=0;
  p_output1[102]=0;
  p_output1[103]=0;
  p_output1[104]=0;
  p_output1[105]=0;
  p_output1[106]=0;
  p_output1[107]=0;
  p_output1[108]=0;
  p_output1[109]=0;
  p_output1[110]=0;
  p_output1[111]=0;
  p_output1[112]=0;
  p_output1[113]=0;
  p_output1[114]=0;
  p_output1[115]=0;
  p_output1[116]=0;
  p_output1[117]=0;
  p_output1[118]=0;
  p_output1[119]=0;
  p_output1[120]=t7204;
  p_output1[121]=t7278;
  p_output1[122]=t7349;
  p_output1[123]=-1.*t1921*t7372 + t2422*t702*t7394 + t3683*t702*t7402 + t7411 + t7436 + t7437;
  p_output1[124]=0.915088*Power(t7140,2) + 0.915088*Power(t7168,2) + 0.915088*Power(t7202,2) + t2422*t702*t7418 - 1.*t1921*t7429 + t3683*t702*t7434;
  p_output1[125]=-1.*t1921*t7442 + t2422*t702*t7449 + t3683*t702*t7460 + t7493 + t7494 + t7498;
  p_output1[126]=t7503;
  p_output1[127]=0;
  p_output1[128]=0;
  p_output1[129]=0;
  p_output1[130]=0;
  p_output1[131]=0;
  p_output1[132]=0;
  p_output1[133]=0;
  p_output1[134]=0;
  p_output1[135]=0;
  p_output1[136]=0;
  p_output1[137]=0;
  p_output1[138]=0;
  p_output1[139]=0;
  p_output1[140]=0;
  p_output1[141]=0;
  p_output1[142]=0;
  p_output1[143]=0;
  p_output1[144]=0;
  p_output1[145]=0;
  p_output1[146]=0;
  p_output1[147]=0;
  p_output1[148]=0;
  p_output1[149]=0;
  p_output1[150]=t7235;
  p_output1[151]=t7284;
  p_output1[152]=t7353;
  p_output1[153]=t1714*t7394 + t2422*t7402 + t7455 + t7462 + t7463;
  p_output1[154]=t1714*t7418 + t2422*t7434 + t7493 + t7494 + t7498;
  p_output1[155]=0.0009626993194468*Power(t1714,2) + 0.0009626993194468*Power(t2422,2) + 0.915088*Power(t7224,2) + t1714*t7449 + t2422*t7460;
  p_output1[156]=t7541;
  p_output1[157]=0;
  p_output1[158]=0;
  p_output1[159]=0;
  p_output1[160]=0;
  p_output1[161]=0;
  p_output1[162]=0;
  p_output1[163]=0;
  p_output1[164]=0;
  p_output1[165]=0;
  p_output1[166]=0;
  p_output1[167]=0;
  p_output1[168]=0;
  p_output1[169]=0;
  p_output1[170]=0;
  p_output1[171]=0;
  p_output1[172]=0;
  p_output1[173]=0;
  p_output1[174]=0;
  p_output1[175]=0;
  p_output1[176]=0;
  p_output1[177]=0;
  p_output1[178]=0;
  p_output1[179]=0;
  p_output1[180]=t7238;
  p_output1[181]=t7287;
  p_output1[182]=t7364;
  p_output1[183]=t7469;
  p_output1[184]=t7503;
  p_output1[185]=t7541;
  p_output1[186]=0.0007695961013894023;
  p_output1[187]=0;
  p_output1[188]=0;
  p_output1[189]=0;
  p_output1[190]=0;
  p_output1[191]=0;
  p_output1[192]=0;
  p_output1[193]=0;
  p_output1[194]=0;
  p_output1[195]=0;
  p_output1[196]=0;
  p_output1[197]=0;
  p_output1[198]=0;
  p_output1[199]=0;
  p_output1[200]=0;
  p_output1[201]=0;
  p_output1[202]=0;
  p_output1[203]=0;
  p_output1[204]=0;
  p_output1[205]=0;
  p_output1[206]=0;
  p_output1[207]=0;
  p_output1[208]=0;
  p_output1[209]=0;
  p_output1[210]=0;
  p_output1[211]=0;
  p_output1[212]=0;
  p_output1[213]=0;
  p_output1[214]=0;
  p_output1[215]=0;
  p_output1[216]=0;
  p_output1[217]=0;
  p_output1[218]=0;
  p_output1[219]=0;
  p_output1[220]=0;
  p_output1[221]=0;
  p_output1[222]=0;
  p_output1[223]=0;
  p_output1[224]=0;
  p_output1[225]=0;
  p_output1[226]=0;
  p_output1[227]=0;
  p_output1[228]=0;
  p_output1[229]=0;
  p_output1[230]=0;
  p_output1[231]=0;
  p_output1[232]=0;
  p_output1[233]=0;
  p_output1[234]=0;
  p_output1[235]=0;
  p_output1[236]=0;
  p_output1[237]=0;
  p_output1[238]=0;
  p_output1[239]=0;
  p_output1[240]=0;
  p_output1[241]=0;
  p_output1[242]=0;
  p_output1[243]=0;
  p_output1[244]=0;
  p_output1[245]=0;
  p_output1[246]=0;
  p_output1[247]=0;
  p_output1[248]=0;
  p_output1[249]=0;
  p_output1[250]=0;
  p_output1[251]=0;
  p_output1[252]=0;
  p_output1[253]=0;
  p_output1[254]=0;
  p_output1[255]=0;
  p_output1[256]=0;
  p_output1[257]=0;
  p_output1[258]=0;
  p_output1[259]=0;
  p_output1[260]=0;
  p_output1[261]=0;
  p_output1[262]=0;
  p_output1[263]=0;
  p_output1[264]=0;
  p_output1[265]=0;
  p_output1[266]=0;
  p_output1[267]=0;
  p_output1[268]=0;
  p_output1[269]=0;
  p_output1[270]=0;
  p_output1[271]=0;
  p_output1[272]=0;
  p_output1[273]=0;
  p_output1[274]=0;
  p_output1[275]=0;
  p_output1[276]=0;
  p_output1[277]=0;
  p_output1[278]=0;
  p_output1[279]=0;
  p_output1[280]=0;
  p_output1[281]=0;
  p_output1[282]=0;
  p_output1[283]=0;
  p_output1[284]=0;
  p_output1[285]=0;
  p_output1[286]=0;
  p_output1[287]=0;
  p_output1[288]=0;
  p_output1[289]=0;
  p_output1[290]=0;
  p_output1[291]=0;
  p_output1[292]=0;
  p_output1[293]=0;
  p_output1[294]=0;
  p_output1[295]=0;
  p_output1[296]=0;
  p_output1[297]=0;
  p_output1[298]=0;
  p_output1[299]=0;
  p_output1[300]=0;
  p_output1[301]=0;
  p_output1[302]=0;
  p_output1[303]=0;
  p_output1[304]=0;
  p_output1[305]=0;
  p_output1[306]=0;
  p_output1[307]=0;
  p_output1[308]=0;
  p_output1[309]=0;
  p_output1[310]=0;
  p_output1[311]=0;
  p_output1[312]=0;
  p_output1[313]=0;
  p_output1[314]=0;
  p_output1[315]=0;
  p_output1[316]=0;
  p_output1[317]=0;
  p_output1[318]=0;
  p_output1[319]=0;
  p_output1[320]=0;
  p_output1[321]=0;
  p_output1[322]=0;
  p_output1[323]=0;
  p_output1[324]=0;
  p_output1[325]=0;
  p_output1[326]=0;
  p_output1[327]=0;
  p_output1[328]=0;
  p_output1[329]=0;
  p_output1[330]=0;
  p_output1[331]=0;
  p_output1[332]=0;
  p_output1[333]=0;
  p_output1[334]=0;
  p_output1[335]=0;
  p_output1[336]=0;
  p_output1[337]=0;
  p_output1[338]=0;
  p_output1[339]=0;
  p_output1[340]=0;
  p_output1[341]=0;
  p_output1[342]=0;
  p_output1[343]=0;
  p_output1[344]=0;
  p_output1[345]=0;
  p_output1[346]=0;
  p_output1[347]=0;
  p_output1[348]=0;
  p_output1[349]=0;
  p_output1[350]=0;
  p_output1[351]=0;
  p_output1[352]=0;
  p_output1[353]=0;
  p_output1[354]=0;
  p_output1[355]=0;
  p_output1[356]=0;
  p_output1[357]=0;
  p_output1[358]=0;
  p_output1[359]=0;
  p_output1[360]=0;
  p_output1[361]=0;
  p_output1[362]=0;
  p_output1[363]=0;
  p_output1[364]=0;
  p_output1[365]=0;
  p_output1[366]=0;
  p_output1[367]=0;
  p_output1[368]=0;
  p_output1[369]=0;
  p_output1[370]=0;
  p_output1[371]=0;
  p_output1[372]=0;
  p_output1[373]=0;
  p_output1[374]=0;
  p_output1[375]=0;
  p_output1[376]=0;
  p_output1[377]=0;
  p_output1[378]=0;
  p_output1[379]=0;
  p_output1[380]=0;
  p_output1[381]=0;
  p_output1[382]=0;
  p_output1[383]=0;
  p_output1[384]=0;
  p_output1[385]=0;
  p_output1[386]=0;
  p_output1[387]=0;
  p_output1[388]=0;
  p_output1[389]=0;
  p_output1[390]=0;
  p_output1[391]=0;
  p_output1[392]=0;
  p_output1[393]=0;
  p_output1[394]=0;
  p_output1[395]=0;
  p_output1[396]=0;
  p_output1[397]=0;
  p_output1[398]=0;
  p_output1[399]=0;
  p_output1[400]=0;
  p_output1[401]=0;
  p_output1[402]=0;
  p_output1[403]=0;
  p_output1[404]=0;
  p_output1[405]=0;
  p_output1[406]=0;
  p_output1[407]=0;
  p_output1[408]=0;
  p_output1[409]=0;
  p_output1[410]=0;
  p_output1[411]=0;
  p_output1[412]=0;
  p_output1[413]=0;
  p_output1[414]=0;
  p_output1[415]=0;
  p_output1[416]=0;
  p_output1[417]=0;
  p_output1[418]=0;
  p_output1[419]=0;
  p_output1[420]=0;
  p_output1[421]=0;
  p_output1[422]=0;
  p_output1[423]=0;
  p_output1[424]=0;
  p_output1[425]=0;
  p_output1[426]=0;
  p_output1[427]=0;
  p_output1[428]=0;
  p_output1[429]=0;
  p_output1[430]=0;
  p_output1[431]=0;
  p_output1[432]=0;
  p_output1[433]=0;
  p_output1[434]=0;
  p_output1[435]=0;
  p_output1[436]=0;
  p_output1[437]=0;
  p_output1[438]=0;
  p_output1[439]=0;
  p_output1[440]=0;
  p_output1[441]=0;
  p_output1[442]=0;
  p_output1[443]=0;
  p_output1[444]=0;
  p_output1[445]=0;
  p_output1[446]=0;
  p_output1[447]=0;
  p_output1[448]=0;
  p_output1[449]=0;
  p_output1[450]=0;
  p_output1[451]=0;
  p_output1[452]=0;
  p_output1[453]=0;
  p_output1[454]=0;
  p_output1[455]=0;
  p_output1[456]=0;
  p_output1[457]=0;
  p_output1[458]=0;
  p_output1[459]=0;
  p_output1[460]=0;
  p_output1[461]=0;
  p_output1[462]=0;
  p_output1[463]=0;
  p_output1[464]=0;
  p_output1[465]=0;
  p_output1[466]=0;
  p_output1[467]=0;
  p_output1[468]=0;
  p_output1[469]=0;
  p_output1[470]=0;
  p_output1[471]=0;
  p_output1[472]=0;
  p_output1[473]=0;
  p_output1[474]=0;
  p_output1[475]=0;
  p_output1[476]=0;
  p_output1[477]=0;
  p_output1[478]=0;
  p_output1[479]=0;
  p_output1[480]=0;
  p_output1[481]=0;
  p_output1[482]=0;
  p_output1[483]=0;
  p_output1[484]=0;
  p_output1[485]=0;
  p_output1[486]=0;
  p_output1[487]=0;
  p_output1[488]=0;
  p_output1[489]=0;
  p_output1[490]=0;
  p_output1[491]=0;
  p_output1[492]=0;
  p_output1[493]=0;
  p_output1[494]=0;
  p_output1[495]=0;
  p_output1[496]=0;
  p_output1[497]=0;
  p_output1[498]=0;
  p_output1[499]=0;
  p_output1[500]=0;
  p_output1[501]=0;
  p_output1[502]=0;
  p_output1[503]=0;
  p_output1[504]=0;
  p_output1[505]=0;
  p_output1[506]=0;
  p_output1[507]=0;
  p_output1[508]=0;
  p_output1[509]=0;
  p_output1[510]=0;
  p_output1[511]=0;
  p_output1[512]=0;
  p_output1[513]=0;
  p_output1[514]=0;
  p_output1[515]=0;
  p_output1[516]=0;
  p_output1[517]=0;
  p_output1[518]=0;
  p_output1[519]=0;
  p_output1[520]=0;
  p_output1[521]=0;
  p_output1[522]=0;
  p_output1[523]=0;
  p_output1[524]=0;
  p_output1[525]=0;
  p_output1[526]=0;
  p_output1[527]=0;
  p_output1[528]=0;
  p_output1[529]=0;
  p_output1[530]=0;
  p_output1[531]=0;
  p_output1[532]=0;
  p_output1[533]=0;
  p_output1[534]=0;
  p_output1[535]=0;
  p_output1[536]=0;
  p_output1[537]=0;
  p_output1[538]=0;
  p_output1[539]=0;
  p_output1[540]=0;
  p_output1[541]=0;
  p_output1[542]=0;
  p_output1[543]=0;
  p_output1[544]=0;
  p_output1[545]=0;
  p_output1[546]=0;
  p_output1[547]=0;
  p_output1[548]=0;
  p_output1[549]=0;
  p_output1[550]=0;
  p_output1[551]=0;
  p_output1[552]=0;
  p_output1[553]=0;
  p_output1[554]=0;
  p_output1[555]=0;
  p_output1[556]=0;
  p_output1[557]=0;
  p_output1[558]=0;
  p_output1[559]=0;
  p_output1[560]=0;
  p_output1[561]=0;
  p_output1[562]=0;
  p_output1[563]=0;
  p_output1[564]=0;
  p_output1[565]=0;
  p_output1[566]=0;
  p_output1[567]=0;
  p_output1[568]=0;
  p_output1[569]=0;
  p_output1[570]=0;
  p_output1[571]=0;
  p_output1[572]=0;
  p_output1[573]=0;
  p_output1[574]=0;
  p_output1[575]=0;
  p_output1[576]=0;
  p_output1[577]=0;
  p_output1[578]=0;
  p_output1[579]=0;
  p_output1[580]=0;
  p_output1[581]=0;
  p_output1[582]=0;
  p_output1[583]=0;
  p_output1[584]=0;
  p_output1[585]=0;
  p_output1[586]=0;
  p_output1[587]=0;
  p_output1[588]=0;
  p_output1[589]=0;
  p_output1[590]=0;
  p_output1[591]=0;
  p_output1[592]=0;
  p_output1[593]=0;
  p_output1[594]=0;
  p_output1[595]=0;
  p_output1[596]=0;
  p_output1[597]=0;
  p_output1[598]=0;
  p_output1[599]=0;
  p_output1[600]=0;
  p_output1[601]=0;
  p_output1[602]=0;
  p_output1[603]=0;
  p_output1[604]=0;
  p_output1[605]=0;
  p_output1[606]=0;
  p_output1[607]=0;
  p_output1[608]=0;
  p_output1[609]=0;
  p_output1[610]=0;
  p_output1[611]=0;
  p_output1[612]=0;
  p_output1[613]=0;
  p_output1[614]=0;
  p_output1[615]=0;
  p_output1[616]=0;
  p_output1[617]=0;
  p_output1[618]=0;
  p_output1[619]=0;
  p_output1[620]=0;
  p_output1[621]=0;
  p_output1[622]=0;
  p_output1[623]=0;
  p_output1[624]=0;
  p_output1[625]=0;
  p_output1[626]=0;
  p_output1[627]=0;
  p_output1[628]=0;
  p_output1[629]=0;
  p_output1[630]=0;
  p_output1[631]=0;
  p_output1[632]=0;
  p_output1[633]=0;
  p_output1[634]=0;
  p_output1[635]=0;
  p_output1[636]=0;
  p_output1[637]=0;
  p_output1[638]=0;
  p_output1[639]=0;
  p_output1[640]=0;
  p_output1[641]=0;
  p_output1[642]=0;
  p_output1[643]=0;
  p_output1[644]=0;
  p_output1[645]=0;
  p_output1[646]=0;
  p_output1[647]=0;
  p_output1[648]=0;
  p_output1[649]=0;
  p_output1[650]=0;
  p_output1[651]=0;
  p_output1[652]=0;
  p_output1[653]=0;
  p_output1[654]=0;
  p_output1[655]=0;
  p_output1[656]=0;
  p_output1[657]=0;
  p_output1[658]=0;
  p_output1[659]=0;
  p_output1[660]=0;
  p_output1[661]=0;
  p_output1[662]=0;
  p_output1[663]=0;
  p_output1[664]=0;
  p_output1[665]=0;
  p_output1[666]=0;
  p_output1[667]=0;
  p_output1[668]=0;
  p_output1[669]=0;
  p_output1[670]=0;
  p_output1[671]=0;
  p_output1[672]=0;
  p_output1[673]=0;
  p_output1[674]=0;
  p_output1[675]=0;
  p_output1[676]=0;
  p_output1[677]=0;
  p_output1[678]=0;
  p_output1[679]=0;
  p_output1[680]=0;
  p_output1[681]=0;
  p_output1[682]=0;
  p_output1[683]=0;
  p_output1[684]=0;
  p_output1[685]=0;
  p_output1[686]=0;
  p_output1[687]=0;
  p_output1[688]=0;
  p_output1[689]=0;
  p_output1[690]=0;
  p_output1[691]=0;
  p_output1[692]=0;
  p_output1[693]=0;
  p_output1[694]=0;
  p_output1[695]=0;
  p_output1[696]=0;
  p_output1[697]=0;
  p_output1[698]=0;
  p_output1[699]=0;
  p_output1[700]=0;
  p_output1[701]=0;
  p_output1[702]=0;
  p_output1[703]=0;
  p_output1[704]=0;
  p_output1[705]=0;
  p_output1[706]=0;
  p_output1[707]=0;
  p_output1[708]=0;
  p_output1[709]=0;
  p_output1[710]=0;
  p_output1[711]=0;
  p_output1[712]=0;
  p_output1[713]=0;
  p_output1[714]=0;
  p_output1[715]=0;
  p_output1[716]=0;
  p_output1[717]=0;
  p_output1[718]=0;
  p_output1[719]=0;
  p_output1[720]=0;
  p_output1[721]=0;
  p_output1[722]=0;
  p_output1[723]=0;
  p_output1[724]=0;
  p_output1[725]=0;
  p_output1[726]=0;
  p_output1[727]=0;
  p_output1[728]=0;
  p_output1[729]=0;
  p_output1[730]=0;
  p_output1[731]=0;
  p_output1[732]=0;
  p_output1[733]=0;
  p_output1[734]=0;
  p_output1[735]=0;
  p_output1[736]=0;
  p_output1[737]=0;
  p_output1[738]=0;
  p_output1[739]=0;
  p_output1[740]=0;
  p_output1[741]=0;
  p_output1[742]=0;
  p_output1[743]=0;
  p_output1[744]=0;
  p_output1[745]=0;
  p_output1[746]=0;
  p_output1[747]=0;
  p_output1[748]=0;
  p_output1[749]=0;
  p_output1[750]=0;
  p_output1[751]=0;
  p_output1[752]=0;
  p_output1[753]=0;
  p_output1[754]=0;
  p_output1[755]=0;
  p_output1[756]=0;
  p_output1[757]=0;
  p_output1[758]=0;
  p_output1[759]=0;
  p_output1[760]=0;
  p_output1[761]=0;
  p_output1[762]=0;
  p_output1[763]=0;
  p_output1[764]=0;
  p_output1[765]=0;
  p_output1[766]=0;
  p_output1[767]=0;
  p_output1[768]=0;
  p_output1[769]=0;
  p_output1[770]=0;
  p_output1[771]=0;
  p_output1[772]=0;
  p_output1[773]=0;
  p_output1[774]=0;
  p_output1[775]=0;
  p_output1[776]=0;
  p_output1[777]=0;
  p_output1[778]=0;
  p_output1[779]=0;
  p_output1[780]=0;
  p_output1[781]=0;
  p_output1[782]=0;
  p_output1[783]=0;
  p_output1[784]=0;
  p_output1[785]=0;
  p_output1[786]=0;
  p_output1[787]=0;
  p_output1[788]=0;
  p_output1[789]=0;
  p_output1[790]=0;
  p_output1[791]=0;
  p_output1[792]=0;
  p_output1[793]=0;
  p_output1[794]=0;
  p_output1[795]=0;
  p_output1[796]=0;
  p_output1[797]=0;
  p_output1[798]=0;
  p_output1[799]=0;
  p_output1[800]=0;
  p_output1[801]=0;
  p_output1[802]=0;
  p_output1[803]=0;
  p_output1[804]=0;
  p_output1[805]=0;
  p_output1[806]=0;
  p_output1[807]=0;
  p_output1[808]=0;
  p_output1[809]=0;
  p_output1[810]=0;
  p_output1[811]=0;
  p_output1[812]=0;
  p_output1[813]=0;
  p_output1[814]=0;
  p_output1[815]=0;
  p_output1[816]=0;
  p_output1[817]=0;
  p_output1[818]=0;
  p_output1[819]=0;
  p_output1[820]=0;
  p_output1[821]=0;
  p_output1[822]=0;
  p_output1[823]=0;
  p_output1[824]=0;
  p_output1[825]=0;
  p_output1[826]=0;
  p_output1[827]=0;
  p_output1[828]=0;
  p_output1[829]=0;
  p_output1[830]=0;
  p_output1[831]=0;
  p_output1[832]=0;
  p_output1[833]=0;
  p_output1[834]=0;
  p_output1[835]=0;
  p_output1[836]=0;
  p_output1[837]=0;
  p_output1[838]=0;
  p_output1[839]=0;
  p_output1[840]=0;
  p_output1[841]=0;
  p_output1[842]=0;
  p_output1[843]=0;
  p_output1[844]=0;
  p_output1[845]=0;
  p_output1[846]=0;
  p_output1[847]=0;
  p_output1[848]=0;
  p_output1[849]=0;
  p_output1[850]=0;
  p_output1[851]=0;
  p_output1[852]=0;
  p_output1[853]=0;
  p_output1[854]=0;
  p_output1[855]=0;
  p_output1[856]=0;
  p_output1[857]=0;
  p_output1[858]=0;
  p_output1[859]=0;
  p_output1[860]=0;
  p_output1[861]=0;
  p_output1[862]=0;
  p_output1[863]=0;
  p_output1[864]=0;
  p_output1[865]=0;
  p_output1[866]=0;
  p_output1[867]=0;
  p_output1[868]=0;
  p_output1[869]=0;
  p_output1[870]=0;
  p_output1[871]=0;
  p_output1[872]=0;
  p_output1[873]=0;
  p_output1[874]=0;
  p_output1[875]=0;
  p_output1[876]=0;
  p_output1[877]=0;
  p_output1[878]=0;
  p_output1[879]=0;
  p_output1[880]=0;
  p_output1[881]=0;
  p_output1[882]=0;
  p_output1[883]=0;
  p_output1[884]=0;
  p_output1[885]=0;
  p_output1[886]=0;
  p_output1[887]=0;
  p_output1[888]=0;
  p_output1[889]=0;
  p_output1[890]=0;
  p_output1[891]=0;
  p_output1[892]=0;
  p_output1[893]=0;
  p_output1[894]=0;
  p_output1[895]=0;
  p_output1[896]=0;
  p_output1[897]=0;
  p_output1[898]=0;
  p_output1[899]=0;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "One input(s) required (var1).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 30 && ncols == 1) && 
      !(mrows == 1 && ncols == 30))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 30, (mwSize) 30, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1);


}

#else // MATLAB_MEX_FILE

#include "Mmat_L2_digit.hh"

namespace SymFunction
{

void Mmat_L2_digit_raw(double *p_output1, const double *var1)
{
  // Call Subroutines
  output1(p_output1, var1);

}

}

#endif // MATLAB_MEX_FILE
