/*
 * Automatically Generated from Mathematica.
 * Mon 2 May 2022 22:30:43 GMT-04:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1)
{
  double t13;
  double t17;
  double t19;
  double t10;
  double t33;
  double t34;
  double t35;
  double t39;
  double t41;
  double t20;
  double t22;
  double t25;
  double t26;
  double t31;
  double t43;
  double t7;
  double t56;
  double t57;
  double t83;
  double t84;
  double t79;
  double t80;
  double t81;
  double t95;
  double t94;
  double t32;
  double t50;
  double t51;
  double t54;
  double t58;
  double t62;
  double t63;
  double t64;
  double t66;
  double t70;
  double t75;
  double t82;
  double t85;
  double t87;
  double t88;
  double t90;
  double t91;
  double t92;
  double t93;
  double t98;
  double t99;
  double t100;
  double t104;
  double t133;
  double t137;
  double t108;
  double t110;
  double t112;
  double t114;
  double t115;
  double t116;
  double t118;
  double t119;
  double t120;
  double t124;
  double t125;
  double t126;
  double t127;
  double t128;
  double t134;
  double t135;
  double t138;
  double t139;
  double t140;
  double t145;
  double t149;
  double t150;
  double t152;
  double t153;
  double t155;
  double t161;
  double t162;
  double t163;
  double t166;
  double t167;
  double t168;
  double t193;
  double t194;
  double t195;
  double t196;
  double t197;
  double t199;
  double t200;
  double t201;
  double t202;
  double t203;
  double t190;
  double t191;
  double t192;
  double t198;
  double t204;
  double t205;
  double t206;
  double t207;
  double t208;
  double t209;
  double t210;
  double t211;
  double t212;
  double t213;
  double t214;
  double t216;
  double t217;
  double t218;
  double t219;
  double t227;
  double t228;
  double t229;
  double t223;
  double t224;
  double t225;
  double t215;
  double t220;
  double t221;
  double t230;
  double t233;
  double t240;
  double t245;
  double t254;
  double t257;
  double t266;
  double t269;
  double t275;
  double t279;
  double t286;
  double t289;
  double t326;
  double t306;
  double t136;
  double t142;
  double t143;
  double t144;
  double t151;
  double t156;
  double t157;
  double t160;
  double t164;
  double t169;
  double t171;
  double t172;
  double t173;
  double t175;
  double t176;
  double t177;
  double t180;
  double t181;
  double t182;
  double t184;
  double t186;
  double t187;
  double t222;
  double t226;
  double t231;
  double t232;
  double t234;
  double t235;
  double t236;
  double t237;
  double t238;
  double t241;
  double t242;
  double t243;
  double t244;
  double t246;
  double t247;
  double t248;
  double t249;
  double t250;
  double t252;
  double t253;
  double t255;
  double t256;
  double t258;
  double t259;
  double t260;
  double t261;
  double t262;
  double t265;
  double t267;
  double t268;
  double t270;
  double t271;
  double t272;
  double t273;
  double t276;
  double t277;
  double t278;
  double t280;
  double t281;
  double t282;
  double t283;
  double t285;
  double t287;
  double t288;
  double t290;
  double t291;
  double t292;
  double t293;
  double t305;
  double t307;
  double t308;
  double t309;
  double t310;
  double t311;
  double t312;
  double t313;
  double t315;
  double t316;
  double t317;
  double t318;
  double t319;
  double t320;
  double t321;
  double t322;
  double t296;
  double t297;
  double t298;
  double t299;
  double t300;
  double t301;
  double t302;
  double t303;
  double t333;
  double t334;
  double t335;
  double t336;
  double t337;
  double t338;
  double t339;
  double t340;
  double t341;
  double t342;
  double t343;
  double t325;
  double t327;
  double t328;
  double t329;
  double t330;
  double t331;
  double t345;
  double t346;
  double t347;
  double t348;
  double t349;
  double t350;
  double t178;
  double t183;
  double t188;
  double t189;
  double t364;
  double t365;
  double t366;
  double t367;
  double t239;
  double t251;
  double t263;
  double t264;
  double t368;
  double t369;
  double t370;
  double t371;
  double t395;
  double t396;
  double t397;
  double t398;
  double t475;
  double t274;
  double t284;
  double t294;
  double t295;
  double t372;
  double t373;
  double t374;
  double t375;
  double t399;
  double t400;
  double t401;
  double t402;
  double t452;
  double t417;
  double t418;
  double t419;
  double t420;
  double t422;
  double t423;
  double t424;
  double t425;
  double t427;
  double t428;
  double t429;
  double t430;
  double t453;
  double t454;
  double t437;
  double t438;
  double t439;
  double t440;
  double t442;
  double t443;
  double t444;
  double t445;
  double t447;
  double t448;
  double t449;
  double t450;
  double t456;
  double t457;
  double t458;
  double t459;
  double t461;
  double t462;
  double t463;
  double t464;
  double t466;
  double t467;
  double t468;
  double t469;
  double t476;
  double t477;
  double t478;
  double t480;
  double t481;
  double t482;
  double t484;
  double t485;
  double t486;
  double t304;
  double t314;
  double t323;
  double t324;
  double t376;
  double t377;
  double t378;
  double t379;
  double t403;
  double t404;
  double t405;
  double t406;
  double t471;
  double t472;
  double t473;
  double t516;
  double t517;
  double t518;
  double t332;
  double t344;
  double t351;
  double t352;
  double t380;
  double t381;
  double t382;
  double t383;
  double t407;
  double t408;
  double t409;
  double t410;
  double t488;
  double t489;
  double t490;
  double t523;
  double t524;
  double t525;
  double t555;
  double t556;
  double t557;
  double t353;
  double t354;
  double t355;
  double t356;
  double t384;
  double t385;
  double t386;
  double t387;
  double t411;
  double t412;
  double t413;
  double t414;
  double t495;
  double t496;
  double t497;
  double t530;
  double t531;
  double t532;
  double t562;
  double t563;
  double t564;
  double t585;
  double t587;
  double t588;
  t13 = Cos(var1[7]);
  t17 = -1.*t13;
  t19 = 1. + t17;
  t10 = Cos(var1[6]);
  t33 = -0.8656776547239999*t19;
  t34 = 1. + t33;
  t35 = 0.366501*t34;
  t39 = 0.3172717261340007*t19;
  t41 = t35 + t39;
  t20 = -0.134322983001*t19;
  t22 = 1. + t20;
  t25 = -0.930418*t22;
  t26 = -0.12497652119782442*t19;
  t31 = t25 + t26;
  t43 = Sin(var1[6]);
  t7 = Sin(var1[4]);
  t56 = Cos(var1[4]);
  t57 = Sin(var1[5]);
  t83 = 0.930418*t34;
  t84 = t83 + t26;
  t79 = 0.366501*t22;
  t80 = -0.3172717261340007*t19;
  t81 = t79 + t80;
  t95 = Sin(var1[7]);
  t94 = Cos(var1[5]);
  t32 = t10*t31;
  t50 = -1.*t41*t43;
  t51 = t32 + t50;
  t54 = t7*t51;
  t58 = t10*t41;
  t62 = t31*t43;
  t63 = t58 + t62;
  t64 = -1.*t57*t63;
  t66 = 0. + t64;
  t70 = t56*t66;
  t75 = t54 + t70;
  t82 = t10*t81;
  t85 = -1.*t84*t43;
  t87 = t82 + t85;
  t88 = t7*t87;
  t90 = t10*t84;
  t91 = t81*t43;
  t92 = t90 + t91;
  t93 = -1.*t57*t92;
  t98 = 1.000000637725*t94*t95;
  t99 = t93 + t98;
  t100 = t56*t99;
  t104 = t88 + t100;
  t133 = Cos(var1[3]);
  t137 = Sin(var1[3]);
  t108 = 0.366501*t10*t95;
  t110 = -0.930418*t43*t95;
  t112 = t108 + t110;
  t114 = t7*t112;
  t115 = 1.000000637725*t19;
  t116 = -1. + t115;
  t118 = t94*t116;
  t119 = 0.930418*t10*t95;
  t120 = 0.366501*t43*t95;
  t124 = t119 + t120;
  t125 = -1.*t57*t124;
  t126 = t118 + t125;
  t127 = t56*t126;
  t128 = t114 + t127;
  t134 = t94*t63;
  t135 = 0. + t134;
  t138 = t56*t51;
  t139 = -1.*t7*t66;
  t140 = t138 + t139;
  t145 = t94*t92;
  t149 = 1.000000637725*t57*t95;
  t150 = t145 + t149;
  t152 = t56*t87;
  t153 = -1.*t7*t99;
  t155 = t152 + t153;
  t161 = t116*t57;
  t162 = t94*t124;
  t163 = t161 + t162;
  t166 = t56*t112;
  t167 = -1.*t7*t126;
  t168 = t166 + t167;
  t193 = -3.2909349868922137e-7*var1[7];
  t194 = -0.086807*t22;
  t195 = -0.010947430124480524*t19;
  t196 = 3.5285855002654964e-6*t95;
  t197 = t193 + t194 + t195 + t196;
  t199 = 1.296332362046933e-7*var1[7];
  t200 = 0.123104*t34;
  t201 = 0.10837779271560144*t19;
  t202 = 8.957845855771251e-6*t95;
  t203 = t199 + t200 + t201 + t202;
  t190 = -1.*t10;
  t191 = 1. + t190;
  t192 = 0.091*t191;
  t198 = t43*t197;
  t204 = t10*t203;
  t205 = t192 + t198 + t204;
  t206 = -1.*t57*t205;
  t207 = -1.000000637725*t19;
  t208 = 1. + t207;
  t209 = -0.04501*t208;
  t210 = -0.04500040093286238*t19;
  t211 = -0.001944728829900294*t95;
  t212 = t209 + t210 + t211;
  t213 = t94*t212;
  t214 = t206 + t213;
  t216 = 0.091*t43;
  t217 = t10*t197;
  t218 = -1.*t43*t203;
  t219 = t216 + t217 + t218;
  t227 = t94*t205;
  t228 = t57*t212;
  t229 = t227 + t228;
  t223 = t56*t214;
  t224 = t7*t219;
  t225 = t223 + t224;
  t215 = -1.*t7*t214;
  t220 = t56*t219;
  t221 = t215 + t220;
  t230 = t135*t229;
  t233 = -1.*t229*t150;
  t240 = t229*t150;
  t245 = -1.*t229*t163;
  t254 = -1.*t135*t229;
  t257 = t229*t163;
  t266 = t51*t219;
  t269 = -1.*t87*t219;
  t275 = t87*t219;
  t279 = -1.*t219*t112;
  t286 = -1.*t51*t219;
  t289 = t219*t112;
  t326 = -1. + t115;
  t306 = 1.000000637725*t212*t95;
  t136 = t133*t135;
  t142 = -1.*t137*t140;
  t143 = t136 + t142;
  t144 = 0.818753*t75*t143;
  t151 = t133*t150;
  t156 = -1.*t137*t155;
  t157 = t151 + t156;
  t160 = 0.818753*t104*t157;
  t164 = t133*t163;
  t169 = -1.*t137*t168;
  t171 = t164 + t169;
  t172 = 0.818753*t128*t171;
  t173 = t144 + t160 + t172;
  t175 = t137*t135;
  t176 = t133*t140;
  t177 = t175 + t176;
  t180 = t137*t150;
  t181 = t133*t155;
  t182 = t180 + t181;
  t184 = t137*t163;
  t186 = t133*t168;
  t187 = t184 + t186;
  t222 = t140*t221;
  t226 = t75*t225;
  t231 = t222 + t226 + t230;
  t232 = t231*t104;
  t234 = -1.*t225*t104;
  t235 = -1.*t221*t155;
  t236 = t233 + t234 + t235;
  t237 = t75*t236;
  t238 = t232 + t237;
  t241 = t225*t104;
  t242 = t221*t155;
  t243 = t240 + t241 + t242;
  t244 = t243*t128;
  t246 = -1.*t225*t128;
  t247 = -1.*t221*t168;
  t248 = t245 + t246 + t247;
  t249 = t104*t248;
  t250 = t244 + t249;
  t252 = -1.*t140*t221;
  t253 = -1.*t75*t225;
  t255 = t252 + t253 + t254;
  t256 = t255*t128;
  t258 = t225*t128;
  t259 = t221*t168;
  t260 = t257 + t258 + t259;
  t261 = t75*t260;
  t262 = t256 + t261;
  t265 = t66*t214;
  t267 = t265 + t230 + t266;
  t268 = t267*t150;
  t270 = -1.*t214*t99;
  t271 = t269 + t270 + t233;
  t272 = t135*t271;
  t273 = t268 + t272;
  t276 = t214*t99;
  t277 = t275 + t276 + t240;
  t278 = t277*t163;
  t280 = -1.*t214*t126;
  t281 = t279 + t245 + t280;
  t282 = t150*t281;
  t283 = t278 + t282;
  t285 = -1.*t66*t214;
  t287 = t285 + t254 + t286;
  t288 = t287*t163;
  t290 = t214*t126;
  t291 = t289 + t257 + t290;
  t292 = t135*t291;
  t293 = t288 + t292;
  t305 = t92*t205;
  t307 = t305 + t275 + t306;
  t308 = t112*t307;
  t309 = -1.*t116*t212;
  t310 = -1.*t205*t124;
  t311 = t309 + t279 + t310;
  t312 = t87*t311;
  t313 = t308 + t312;
  t315 = -1.*t63*t205;
  t316 = 0. + t315 + t286;
  t317 = t316*t112;
  t318 = t116*t212;
  t319 = t205*t124;
  t320 = t318 + t289 + t319;
  t321 = t51*t320;
  t322 = t317 + t321;
  t296 = t63*t205;
  t297 = 0. + t296 + t266;
  t298 = t87*t297;
  t299 = -1.*t92*t205;
  t300 = -1.000000637725*t212*t95;
  t301 = t299 + t269 + t300;
  t302 = t51*t301;
  t303 = t298 + t302;
  t333 = 0.091*t31;
  t334 = t81*t197;
  t335 = t84*t203;
  t336 = t334 + t335 + t306;
  t337 = -1.*t326*t336;
  t338 = -1.*t326*t212;
  t339 = -0.366501*t197*t95;
  t340 = -0.930418*t203*t95;
  t341 = t338 + t339 + t340;
  t342 = -1.000000637725*t95*t341;
  t343 = t333 + t337 + t342;
  t325 = 0.091*t81;
  t327 = -1.*t31*t197;
  t328 = -1.*t41*t203;
  t329 = 0. + t327 + t328;
  t330 = -1.*t326*t329;
  t331 = 0. + t325 + t330;
  t345 = 0.033351591*t95;
  t346 = t31*t197;
  t347 = t41*t203;
  t348 = 0. + t346 + t347;
  t349 = -1.000000637725*t348*t95;
  t350 = 0. + t345 + t349;
  t178 = 0.818753*t75*t177;
  t183 = 0.818753*t104*t182;
  t188 = 0.818753*t128*t187;
  t189 = t178 + t183 + t188;
  t364 = 0.818753*t177*t143;
  t365 = 0.818753*t182*t157;
  t366 = 0.818753*t187*t171;
  t367 = t364 + t365 + t366;
  t239 = 0.818753*t128*t238;
  t251 = 0.818753*t75*t250;
  t263 = 0.818753*t104*t262;
  t264 = t239 + t251 + t263;
  t368 = 0.818753*t238*t171;
  t369 = 0.818753*t143*t250;
  t370 = 0.818753*t157*t262;
  t371 = t368 + t369 + t370;
  t395 = 0.818753*t238*t187;
  t396 = 0.818753*t177*t250;
  t397 = 0.818753*t182*t262;
  t398 = t395 + t396 + t397;
  t475 = 1. + t207;
  t274 = 0.818753*t273*t128;
  t284 = 0.818753*t75*t283;
  t294 = 0.818753*t104*t293;
  t295 = t274 + t284 + t294;
  t372 = 0.818753*t273*t171;
  t373 = 0.818753*t143*t283;
  t374 = 0.818753*t157*t293;
  t375 = t372 + t373 + t374;
  t399 = 0.818753*t273*t187;
  t400 = 0.818753*t177*t283;
  t401 = 0.818753*t182*t293;
  t402 = t399 + t400 + t401;
  t452 = 0.818753*t273*t238;
  t417 = 0.000053*t75;
  t418 = 0.001929*t104;
  t419 = -1.e-6*t128;
  t420 = t417 + t418 + t419;
  t422 = 0.00077*t75;
  t423 = 0.000053*t104;
  t424 = 2.e-6*t128;
  t425 = t422 + t423 + t424;
  t427 = 2.e-6*t75;
  t428 = -1.e-6*t104;
  t429 = 0.001627*t128;
  t430 = t427 + t428 + t429;
  t453 = 0.818753*t283*t250;
  t454 = 0.818753*t293*t262;
  t437 = 0.000053*t135;
  t438 = 0.001929*t150;
  t439 = -1.e-6*t163;
  t440 = t437 + t438 + t439;
  t442 = 0.00077*t135;
  t443 = 0.000053*t150;
  t444 = 2.e-6*t163;
  t445 = t442 + t443 + t444;
  t447 = 2.e-6*t135;
  t448 = -1.e-6*t150;
  t449 = 0.001627*t163;
  t450 = t447 + t448 + t449;
  t456 = 0.001929*t87;
  t457 = 0.000053*t51;
  t458 = -1.e-6*t112;
  t459 = t456 + t457 + t458;
  t461 = 0.000053*t87;
  t462 = 0.00077*t51;
  t463 = 2.e-6*t112;
  t464 = t461 + t462 + t463;
  t466 = -1.e-6*t87;
  t467 = 2.e-6*t51;
  t468 = 0.001627*t112;
  t469 = t466 + t467 + t468;
  t476 = 2.e-6*t475;
  t477 = -0.000053000033799425*t95;
  t478 = t476 + t477;
  t480 = -1.e-6*t475;
  t481 = -0.0019290012301715247*t95;
  t482 = t480 + t481;
  t484 = 0.001627*t475;
  t485 = 1.0000006377249999e-6*t95;
  t486 = t484 + t485;
  t304 = 0.818753*t303*t128;
  t314 = 0.818753*t75*t313;
  t323 = 0.818753*t104*t322;
  t324 = t304 + t314 + t323;
  t376 = 0.818753*t143*t313;
  t377 = 0.818753*t157*t322;
  t378 = 0.818753*t303*t171;
  t379 = t376 + t377 + t378;
  t403 = 0.818753*t177*t313;
  t404 = 0.818753*t182*t322;
  t405 = 0.818753*t303*t187;
  t406 = t403 + t404 + t405;
  t471 = 0.818753*t303*t238;
  t472 = 0.818753*t313*t250;
  t473 = 0.818753*t322*t262;
  t516 = 0.818753*t303*t273;
  t517 = 0.818753*t313*t283;
  t518 = 0.818753*t322*t293;
  t332 = 0.818753*t331*t104;
  t344 = 0.818753*t75*t343;
  t351 = 0.818753*t350*t128;
  t352 = t332 + t344 + t351;
  t380 = 0.818753*t143*t343;
  t381 = 0.818753*t331*t157;
  t382 = 0.818753*t350*t171;
  t383 = t380 + t381 + t382;
  t407 = 0.818753*t177*t343;
  t408 = 0.818753*t331*t182;
  t409 = 0.818753*t350*t187;
  t410 = t407 + t408 + t409;
  t488 = 0.818753*t350*t238;
  t489 = 0.818753*t343*t250;
  t490 = 0.818753*t331*t262;
  t523 = 0.818753*t350*t273;
  t524 = 0.818753*t343*t283;
  t525 = 0.818753*t331*t293;
  t555 = 0.818753*t350*t303;
  t556 = 0.818753*t343*t313;
  t557 = 0.818753*t331*t322;
  t353 = 2.895970298628945e-7*t75;
  t354 = 7.906262964999585e-6*t104;
  t355 = 0.0015921651620852287*t128;
  t356 = t353 + t354 + t355;
  t384 = 2.895970298628945e-7*t143;
  t385 = 7.906262964999585e-6*t157;
  t386 = 0.0015921651620852287*t171;
  t387 = t384 + t385 + t386;
  t411 = 2.895970298628945e-7*t177;
  t412 = 7.906262964999585e-6*t182;
  t413 = 0.0015921651620852287*t187;
  t414 = t411 + t412 + t413;
  t495 = 0.0015921651620852287*t238;
  t496 = 2.895970298628945e-7*t250;
  t497 = 7.906262964999585e-6*t262;
  t530 = 0.0015921651620852287*t273;
  t531 = 2.895970298628945e-7*t283;
  t532 = 7.906262964999585e-6*t293;
  t562 = 0.0015921651620852287*t303;
  t563 = 2.895970298628945e-7*t313;
  t564 = 7.906262964999585e-6*t322;
  t585 = 7.906262964999585e-6*t331;
  t587 = 0.0015921651620852287*t350;
  t588 = 2.895970298628945e-7*t343;
  p_output1[0]=0.818753*Power(t104,2) + 0.818753*Power(t128,2) + 0.818753*Power(t75,2);
  p_output1[1]=t173;
  p_output1[2]=t189;
  p_output1[3]=t264;
  p_output1[4]=t295;
  p_output1[5]=t324;
  p_output1[6]=t352;
  p_output1[7]=t356;
  p_output1[8]=0;
  p_output1[9]=0;
  p_output1[10]=0;
  p_output1[11]=0;
  p_output1[12]=0;
  p_output1[13]=0;
  p_output1[14]=0;
  p_output1[15]=0;
  p_output1[16]=0;
  p_output1[17]=0;
  p_output1[18]=0;
  p_output1[19]=0;
  p_output1[20]=0;
  p_output1[21]=0;
  p_output1[22]=0;
  p_output1[23]=0;
  p_output1[24]=0;
  p_output1[25]=0;
  p_output1[26]=0;
  p_output1[27]=0;
  p_output1[28]=0;
  p_output1[29]=0;
  p_output1[30]=t173;
  p_output1[31]=0.818753*Power(t143,2) + 0.818753*Power(t157,2) + 0.818753*Power(t171,2);
  p_output1[32]=t367;
  p_output1[33]=t371;
  p_output1[34]=t375;
  p_output1[35]=t379;
  p_output1[36]=t383;
  p_output1[37]=t387;
  p_output1[38]=0;
  p_output1[39]=0;
  p_output1[40]=0;
  p_output1[41]=0;
  p_output1[42]=0;
  p_output1[43]=0;
  p_output1[44]=0;
  p_output1[45]=0;
  p_output1[46]=0;
  p_output1[47]=0;
  p_output1[48]=0;
  p_output1[49]=0;
  p_output1[50]=0;
  p_output1[51]=0;
  p_output1[52]=0;
  p_output1[53]=0;
  p_output1[54]=0;
  p_output1[55]=0;
  p_output1[56]=0;
  p_output1[57]=0;
  p_output1[58]=0;
  p_output1[59]=0;
  p_output1[60]=t189;
  p_output1[61]=t367;
  p_output1[62]=0.818753*Power(t177,2) + 0.818753*Power(t182,2) + 0.818753*Power(t187,2);
  p_output1[63]=t398;
  p_output1[64]=t402;
  p_output1[65]=t406;
  p_output1[66]=t410;
  p_output1[67]=t414;
  p_output1[68]=0;
  p_output1[69]=0;
  p_output1[70]=0;
  p_output1[71]=0;
  p_output1[72]=0;
  p_output1[73]=0;
  p_output1[74]=0;
  p_output1[75]=0;
  p_output1[76]=0;
  p_output1[77]=0;
  p_output1[78]=0;
  p_output1[79]=0;
  p_output1[80]=0;
  p_output1[81]=0;
  p_output1[82]=0;
  p_output1[83]=0;
  p_output1[84]=0;
  p_output1[85]=0;
  p_output1[86]=0;
  p_output1[87]=0;
  p_output1[88]=0;
  p_output1[89]=0;
  p_output1[90]=t264;
  p_output1[91]=t371;
  p_output1[92]=t398;
  p_output1[93]=0.818753*Power(t238,2) + 0.818753*Power(t250,2) + 0.818753*Power(t262,2) + t104*t420 + t128*t430 + t425*t75;
  p_output1[94]=t104*t440 + t128*t450 + t452 + t453 + t454 + t445*t75;
  p_output1[95]=t104*t459 + t128*t469 + t471 + t472 + t473 + t464*t75;
  p_output1[96]=t104*t482 + t128*t486 + t488 + t489 + t490 + t478*t75;
  p_output1[97]=0.000053000033799425*t104 + 2.0000012754499998e-6*t128 + t495 + t496 + t497 + 0.0007700004910482499*t75;
  p_output1[98]=0;
  p_output1[99]=0;
  p_output1[100]=0;
  p_output1[101]=0;
  p_output1[102]=0;
  p_output1[103]=0;
  p_output1[104]=0;
  p_output1[105]=0;
  p_output1[106]=0;
  p_output1[107]=0;
  p_output1[108]=0;
  p_output1[109]=0;
  p_output1[110]=0;
  p_output1[111]=0;
  p_output1[112]=0;
  p_output1[113]=0;
  p_output1[114]=0;
  p_output1[115]=0;
  p_output1[116]=0;
  p_output1[117]=0;
  p_output1[118]=0;
  p_output1[119]=0;
  p_output1[120]=t295;
  p_output1[121]=t375;
  p_output1[122]=t402;
  p_output1[123]=t150*t420 + t135*t425 + t163*t430 + t452 + t453 + t454;
  p_output1[124]=0.818753*Power(t273,2) + 0.818753*Power(t283,2) + 0.818753*Power(t293,2) + t150*t440 + t135*t445 + t163*t450;
  p_output1[125]=t150*t459 + t135*t464 + t163*t469 + t516 + t517 + t518;
  p_output1[126]=t135*t478 + t150*t482 + t163*t486 + t523 + t524 + t525;
  p_output1[127]=0.0007700004910482499*t135 + 0.000053000033799425*t150 + 2.0000012754499998e-6*t163 + t530 + t531 + t532;
  p_output1[128]=0;
  p_output1[129]=0;
  p_output1[130]=0;
  p_output1[131]=0;
  p_output1[132]=0;
  p_output1[133]=0;
  p_output1[134]=0;
  p_output1[135]=0;
  p_output1[136]=0;
  p_output1[137]=0;
  p_output1[138]=0;
  p_output1[139]=0;
  p_output1[140]=0;
  p_output1[141]=0;
  p_output1[142]=0;
  p_output1[143]=0;
  p_output1[144]=0;
  p_output1[145]=0;
  p_output1[146]=0;
  p_output1[147]=0;
  p_output1[148]=0;
  p_output1[149]=0;
  p_output1[150]=t324;
  p_output1[151]=t379;
  p_output1[152]=t406;
  p_output1[153]=t112*t430 + t471 + t472 + t473 + t425*t51 + t420*t87;
  p_output1[154]=t112*t450 + t445*t51 + t516 + t517 + t518 + t440*t87;
  p_output1[155]=0.818753*Power(t303,2) + 0.818753*Power(t313,2) + 0.818753*Power(t322,2) + t112*t469 + t464*t51 + t459*t87;
  p_output1[156]=t112*t486 + t478*t51 + t555 + t556 + t557 + t482*t87;
  p_output1[157]=2.0000012754499998e-6*t112 + 0.0007700004910482499*t51 + t562 + t563 + t564 + 0.000053000033799425*t87;
  p_output1[158]=0;
  p_output1[159]=0;
  p_output1[160]=0;
  p_output1[161]=0;
  p_output1[162]=0;
  p_output1[163]=0;
  p_output1[164]=0;
  p_output1[165]=0;
  p_output1[166]=0;
  p_output1[167]=0;
  p_output1[168]=0;
  p_output1[169]=0;
  p_output1[170]=0;
  p_output1[171]=0;
  p_output1[172]=0;
  p_output1[173]=0;
  p_output1[174]=0;
  p_output1[175]=0;
  p_output1[176]=0;
  p_output1[177]=0;
  p_output1[178]=0;
  p_output1[179]=0;
  p_output1[180]=t352;
  p_output1[181]=t383;
  p_output1[182]=t410;
  p_output1[183]=t430*t475 + t488 + t489 + t490 - 1.000000637725*t420*t95;
  p_output1[184]=t450*t475 + t523 + t524 + t525 - 1.000000637725*t440*t95;
  p_output1[185]=t469*t475 + t555 + t556 + t557 - 1.000000637725*t459*t95;
  p_output1[186]=0.818753*Power(t331,2) + 0.818753*Power(t343,2) + 0.818753*Power(t350,2) + t475*t486 - 1.000000637725*t482*t95;
  p_output1[187]=2.0000012754499998e-6*t475 + t585 + t587 + t588 - 0.00005300006759887155*t95;
  p_output1[188]=0;
  p_output1[189]=0;
  p_output1[190]=0;
  p_output1[191]=0;
  p_output1[192]=0;
  p_output1[193]=0;
  p_output1[194]=0;
  p_output1[195]=0;
  p_output1[196]=0;
  p_output1[197]=0;
  p_output1[198]=0;
  p_output1[199]=0;
  p_output1[200]=0;
  p_output1[201]=0;
  p_output1[202]=0;
  p_output1[203]=0;
  p_output1[204]=0;
  p_output1[205]=0;
  p_output1[206]=0;
  p_output1[207]=0;
  p_output1[208]=0;
  p_output1[209]=0;
  p_output1[210]=t356;
  p_output1[211]=t387;
  p_output1[212]=t414;
  p_output1[213]=1.000000637725*t425 + t495 + t496 + t497;
  p_output1[214]=1.000000637725*t445 + t530 + t531 + t532;
  p_output1[215]=1.000000637725*t464 + t562 + t563 + t564;
  p_output1[216]=1.000000637725*t478 + t585 + t587 + t588;
  p_output1[217]=0.0007730972180754517;
  p_output1[218]=0;
  p_output1[219]=0;
  p_output1[220]=0;
  p_output1[221]=0;
  p_output1[222]=0;
  p_output1[223]=0;
  p_output1[224]=0;
  p_output1[225]=0;
  p_output1[226]=0;
  p_output1[227]=0;
  p_output1[228]=0;
  p_output1[229]=0;
  p_output1[230]=0;
  p_output1[231]=0;
  p_output1[232]=0;
  p_output1[233]=0;
  p_output1[234]=0;
  p_output1[235]=0;
  p_output1[236]=0;
  p_output1[237]=0;
  p_output1[238]=0;
  p_output1[239]=0;
  p_output1[240]=0;
  p_output1[241]=0;
  p_output1[242]=0;
  p_output1[243]=0;
  p_output1[244]=0;
  p_output1[245]=0;
  p_output1[246]=0;
  p_output1[247]=0;
  p_output1[248]=0;
  p_output1[249]=0;
  p_output1[250]=0;
  p_output1[251]=0;
  p_output1[252]=0;
  p_output1[253]=0;
  p_output1[254]=0;
  p_output1[255]=0;
  p_output1[256]=0;
  p_output1[257]=0;
  p_output1[258]=0;
  p_output1[259]=0;
  p_output1[260]=0;
  p_output1[261]=0;
  p_output1[262]=0;
  p_output1[263]=0;
  p_output1[264]=0;
  p_output1[265]=0;
  p_output1[266]=0;
  p_output1[267]=0;
  p_output1[268]=0;
  p_output1[269]=0;
  p_output1[270]=0;
  p_output1[271]=0;
  p_output1[272]=0;
  p_output1[273]=0;
  p_output1[274]=0;
  p_output1[275]=0;
  p_output1[276]=0;
  p_output1[277]=0;
  p_output1[278]=0;
  p_output1[279]=0;
  p_output1[280]=0;
  p_output1[281]=0;
  p_output1[282]=0;
  p_output1[283]=0;
  p_output1[284]=0;
  p_output1[285]=0;
  p_output1[286]=0;
  p_output1[287]=0;
  p_output1[288]=0;
  p_output1[289]=0;
  p_output1[290]=0;
  p_output1[291]=0;
  p_output1[292]=0;
  p_output1[293]=0;
  p_output1[294]=0;
  p_output1[295]=0;
  p_output1[296]=0;
  p_output1[297]=0;
  p_output1[298]=0;
  p_output1[299]=0;
  p_output1[300]=0;
  p_output1[301]=0;
  p_output1[302]=0;
  p_output1[303]=0;
  p_output1[304]=0;
  p_output1[305]=0;
  p_output1[306]=0;
  p_output1[307]=0;
  p_output1[308]=0;
  p_output1[309]=0;
  p_output1[310]=0;
  p_output1[311]=0;
  p_output1[312]=0;
  p_output1[313]=0;
  p_output1[314]=0;
  p_output1[315]=0;
  p_output1[316]=0;
  p_output1[317]=0;
  p_output1[318]=0;
  p_output1[319]=0;
  p_output1[320]=0;
  p_output1[321]=0;
  p_output1[322]=0;
  p_output1[323]=0;
  p_output1[324]=0;
  p_output1[325]=0;
  p_output1[326]=0;
  p_output1[327]=0;
  p_output1[328]=0;
  p_output1[329]=0;
  p_output1[330]=0;
  p_output1[331]=0;
  p_output1[332]=0;
  p_output1[333]=0;
  p_output1[334]=0;
  p_output1[335]=0;
  p_output1[336]=0;
  p_output1[337]=0;
  p_output1[338]=0;
  p_output1[339]=0;
  p_output1[340]=0;
  p_output1[341]=0;
  p_output1[342]=0;
  p_output1[343]=0;
  p_output1[344]=0;
  p_output1[345]=0;
  p_output1[346]=0;
  p_output1[347]=0;
  p_output1[348]=0;
  p_output1[349]=0;
  p_output1[350]=0;
  p_output1[351]=0;
  p_output1[352]=0;
  p_output1[353]=0;
  p_output1[354]=0;
  p_output1[355]=0;
  p_output1[356]=0;
  p_output1[357]=0;
  p_output1[358]=0;
  p_output1[359]=0;
  p_output1[360]=0;
  p_output1[361]=0;
  p_output1[362]=0;
  p_output1[363]=0;
  p_output1[364]=0;
  p_output1[365]=0;
  p_output1[366]=0;
  p_output1[367]=0;
  p_output1[368]=0;
  p_output1[369]=0;
  p_output1[370]=0;
  p_output1[371]=0;
  p_output1[372]=0;
  p_output1[373]=0;
  p_output1[374]=0;
  p_output1[375]=0;
  p_output1[376]=0;
  p_output1[377]=0;
  p_output1[378]=0;
  p_output1[379]=0;
  p_output1[380]=0;
  p_output1[381]=0;
  p_output1[382]=0;
  p_output1[383]=0;
  p_output1[384]=0;
  p_output1[385]=0;
  p_output1[386]=0;
  p_output1[387]=0;
  p_output1[388]=0;
  p_output1[389]=0;
  p_output1[390]=0;
  p_output1[391]=0;
  p_output1[392]=0;
  p_output1[393]=0;
  p_output1[394]=0;
  p_output1[395]=0;
  p_output1[396]=0;
  p_output1[397]=0;
  p_output1[398]=0;
  p_output1[399]=0;
  p_output1[400]=0;
  p_output1[401]=0;
  p_output1[402]=0;
  p_output1[403]=0;
  p_output1[404]=0;
  p_output1[405]=0;
  p_output1[406]=0;
  p_output1[407]=0;
  p_output1[408]=0;
  p_output1[409]=0;
  p_output1[410]=0;
  p_output1[411]=0;
  p_output1[412]=0;
  p_output1[413]=0;
  p_output1[414]=0;
  p_output1[415]=0;
  p_output1[416]=0;
  p_output1[417]=0;
  p_output1[418]=0;
  p_output1[419]=0;
  p_output1[420]=0;
  p_output1[421]=0;
  p_output1[422]=0;
  p_output1[423]=0;
  p_output1[424]=0;
  p_output1[425]=0;
  p_output1[426]=0;
  p_output1[427]=0;
  p_output1[428]=0;
  p_output1[429]=0;
  p_output1[430]=0;
  p_output1[431]=0;
  p_output1[432]=0;
  p_output1[433]=0;
  p_output1[434]=0;
  p_output1[435]=0;
  p_output1[436]=0;
  p_output1[437]=0;
  p_output1[438]=0;
  p_output1[439]=0;
  p_output1[440]=0;
  p_output1[441]=0;
  p_output1[442]=0;
  p_output1[443]=0;
  p_output1[444]=0;
  p_output1[445]=0;
  p_output1[446]=0;
  p_output1[447]=0;
  p_output1[448]=0;
  p_output1[449]=0;
  p_output1[450]=0;
  p_output1[451]=0;
  p_output1[452]=0;
  p_output1[453]=0;
  p_output1[454]=0;
  p_output1[455]=0;
  p_output1[456]=0;
  p_output1[457]=0;
  p_output1[458]=0;
  p_output1[459]=0;
  p_output1[460]=0;
  p_output1[461]=0;
  p_output1[462]=0;
  p_output1[463]=0;
  p_output1[464]=0;
  p_output1[465]=0;
  p_output1[466]=0;
  p_output1[467]=0;
  p_output1[468]=0;
  p_output1[469]=0;
  p_output1[470]=0;
  p_output1[471]=0;
  p_output1[472]=0;
  p_output1[473]=0;
  p_output1[474]=0;
  p_output1[475]=0;
  p_output1[476]=0;
  p_output1[477]=0;
  p_output1[478]=0;
  p_output1[479]=0;
  p_output1[480]=0;
  p_output1[481]=0;
  p_output1[482]=0;
  p_output1[483]=0;
  p_output1[484]=0;
  p_output1[485]=0;
  p_output1[486]=0;
  p_output1[487]=0;
  p_output1[488]=0;
  p_output1[489]=0;
  p_output1[490]=0;
  p_output1[491]=0;
  p_output1[492]=0;
  p_output1[493]=0;
  p_output1[494]=0;
  p_output1[495]=0;
  p_output1[496]=0;
  p_output1[497]=0;
  p_output1[498]=0;
  p_output1[499]=0;
  p_output1[500]=0;
  p_output1[501]=0;
  p_output1[502]=0;
  p_output1[503]=0;
  p_output1[504]=0;
  p_output1[505]=0;
  p_output1[506]=0;
  p_output1[507]=0;
  p_output1[508]=0;
  p_output1[509]=0;
  p_output1[510]=0;
  p_output1[511]=0;
  p_output1[512]=0;
  p_output1[513]=0;
  p_output1[514]=0;
  p_output1[515]=0;
  p_output1[516]=0;
  p_output1[517]=0;
  p_output1[518]=0;
  p_output1[519]=0;
  p_output1[520]=0;
  p_output1[521]=0;
  p_output1[522]=0;
  p_output1[523]=0;
  p_output1[524]=0;
  p_output1[525]=0;
  p_output1[526]=0;
  p_output1[527]=0;
  p_output1[528]=0;
  p_output1[529]=0;
  p_output1[530]=0;
  p_output1[531]=0;
  p_output1[532]=0;
  p_output1[533]=0;
  p_output1[534]=0;
  p_output1[535]=0;
  p_output1[536]=0;
  p_output1[537]=0;
  p_output1[538]=0;
  p_output1[539]=0;
  p_output1[540]=0;
  p_output1[541]=0;
  p_output1[542]=0;
  p_output1[543]=0;
  p_output1[544]=0;
  p_output1[545]=0;
  p_output1[546]=0;
  p_output1[547]=0;
  p_output1[548]=0;
  p_output1[549]=0;
  p_output1[550]=0;
  p_output1[551]=0;
  p_output1[552]=0;
  p_output1[553]=0;
  p_output1[554]=0;
  p_output1[555]=0;
  p_output1[556]=0;
  p_output1[557]=0;
  p_output1[558]=0;
  p_output1[559]=0;
  p_output1[560]=0;
  p_output1[561]=0;
  p_output1[562]=0;
  p_output1[563]=0;
  p_output1[564]=0;
  p_output1[565]=0;
  p_output1[566]=0;
  p_output1[567]=0;
  p_output1[568]=0;
  p_output1[569]=0;
  p_output1[570]=0;
  p_output1[571]=0;
  p_output1[572]=0;
  p_output1[573]=0;
  p_output1[574]=0;
  p_output1[575]=0;
  p_output1[576]=0;
  p_output1[577]=0;
  p_output1[578]=0;
  p_output1[579]=0;
  p_output1[580]=0;
  p_output1[581]=0;
  p_output1[582]=0;
  p_output1[583]=0;
  p_output1[584]=0;
  p_output1[585]=0;
  p_output1[586]=0;
  p_output1[587]=0;
  p_output1[588]=0;
  p_output1[589]=0;
  p_output1[590]=0;
  p_output1[591]=0;
  p_output1[592]=0;
  p_output1[593]=0;
  p_output1[594]=0;
  p_output1[595]=0;
  p_output1[596]=0;
  p_output1[597]=0;
  p_output1[598]=0;
  p_output1[599]=0;
  p_output1[600]=0;
  p_output1[601]=0;
  p_output1[602]=0;
  p_output1[603]=0;
  p_output1[604]=0;
  p_output1[605]=0;
  p_output1[606]=0;
  p_output1[607]=0;
  p_output1[608]=0;
  p_output1[609]=0;
  p_output1[610]=0;
  p_output1[611]=0;
  p_output1[612]=0;
  p_output1[613]=0;
  p_output1[614]=0;
  p_output1[615]=0;
  p_output1[616]=0;
  p_output1[617]=0;
  p_output1[618]=0;
  p_output1[619]=0;
  p_output1[620]=0;
  p_output1[621]=0;
  p_output1[622]=0;
  p_output1[623]=0;
  p_output1[624]=0;
  p_output1[625]=0;
  p_output1[626]=0;
  p_output1[627]=0;
  p_output1[628]=0;
  p_output1[629]=0;
  p_output1[630]=0;
  p_output1[631]=0;
  p_output1[632]=0;
  p_output1[633]=0;
  p_output1[634]=0;
  p_output1[635]=0;
  p_output1[636]=0;
  p_output1[637]=0;
  p_output1[638]=0;
  p_output1[639]=0;
  p_output1[640]=0;
  p_output1[641]=0;
  p_output1[642]=0;
  p_output1[643]=0;
  p_output1[644]=0;
  p_output1[645]=0;
  p_output1[646]=0;
  p_output1[647]=0;
  p_output1[648]=0;
  p_output1[649]=0;
  p_output1[650]=0;
  p_output1[651]=0;
  p_output1[652]=0;
  p_output1[653]=0;
  p_output1[654]=0;
  p_output1[655]=0;
  p_output1[656]=0;
  p_output1[657]=0;
  p_output1[658]=0;
  p_output1[659]=0;
  p_output1[660]=0;
  p_output1[661]=0;
  p_output1[662]=0;
  p_output1[663]=0;
  p_output1[664]=0;
  p_output1[665]=0;
  p_output1[666]=0;
  p_output1[667]=0;
  p_output1[668]=0;
  p_output1[669]=0;
  p_output1[670]=0;
  p_output1[671]=0;
  p_output1[672]=0;
  p_output1[673]=0;
  p_output1[674]=0;
  p_output1[675]=0;
  p_output1[676]=0;
  p_output1[677]=0;
  p_output1[678]=0;
  p_output1[679]=0;
  p_output1[680]=0;
  p_output1[681]=0;
  p_output1[682]=0;
  p_output1[683]=0;
  p_output1[684]=0;
  p_output1[685]=0;
  p_output1[686]=0;
  p_output1[687]=0;
  p_output1[688]=0;
  p_output1[689]=0;
  p_output1[690]=0;
  p_output1[691]=0;
  p_output1[692]=0;
  p_output1[693]=0;
  p_output1[694]=0;
  p_output1[695]=0;
  p_output1[696]=0;
  p_output1[697]=0;
  p_output1[698]=0;
  p_output1[699]=0;
  p_output1[700]=0;
  p_output1[701]=0;
  p_output1[702]=0;
  p_output1[703]=0;
  p_output1[704]=0;
  p_output1[705]=0;
  p_output1[706]=0;
  p_output1[707]=0;
  p_output1[708]=0;
  p_output1[709]=0;
  p_output1[710]=0;
  p_output1[711]=0;
  p_output1[712]=0;
  p_output1[713]=0;
  p_output1[714]=0;
  p_output1[715]=0;
  p_output1[716]=0;
  p_output1[717]=0;
  p_output1[718]=0;
  p_output1[719]=0;
  p_output1[720]=0;
  p_output1[721]=0;
  p_output1[722]=0;
  p_output1[723]=0;
  p_output1[724]=0;
  p_output1[725]=0;
  p_output1[726]=0;
  p_output1[727]=0;
  p_output1[728]=0;
  p_output1[729]=0;
  p_output1[730]=0;
  p_output1[731]=0;
  p_output1[732]=0;
  p_output1[733]=0;
  p_output1[734]=0;
  p_output1[735]=0;
  p_output1[736]=0;
  p_output1[737]=0;
  p_output1[738]=0;
  p_output1[739]=0;
  p_output1[740]=0;
  p_output1[741]=0;
  p_output1[742]=0;
  p_output1[743]=0;
  p_output1[744]=0;
  p_output1[745]=0;
  p_output1[746]=0;
  p_output1[747]=0;
  p_output1[748]=0;
  p_output1[749]=0;
  p_output1[750]=0;
  p_output1[751]=0;
  p_output1[752]=0;
  p_output1[753]=0;
  p_output1[754]=0;
  p_output1[755]=0;
  p_output1[756]=0;
  p_output1[757]=0;
  p_output1[758]=0;
  p_output1[759]=0;
  p_output1[760]=0;
  p_output1[761]=0;
  p_output1[762]=0;
  p_output1[763]=0;
  p_output1[764]=0;
  p_output1[765]=0;
  p_output1[766]=0;
  p_output1[767]=0;
  p_output1[768]=0;
  p_output1[769]=0;
  p_output1[770]=0;
  p_output1[771]=0;
  p_output1[772]=0;
  p_output1[773]=0;
  p_output1[774]=0;
  p_output1[775]=0;
  p_output1[776]=0;
  p_output1[777]=0;
  p_output1[778]=0;
  p_output1[779]=0;
  p_output1[780]=0;
  p_output1[781]=0;
  p_output1[782]=0;
  p_output1[783]=0;
  p_output1[784]=0;
  p_output1[785]=0;
  p_output1[786]=0;
  p_output1[787]=0;
  p_output1[788]=0;
  p_output1[789]=0;
  p_output1[790]=0;
  p_output1[791]=0;
  p_output1[792]=0;
  p_output1[793]=0;
  p_output1[794]=0;
  p_output1[795]=0;
  p_output1[796]=0;
  p_output1[797]=0;
  p_output1[798]=0;
  p_output1[799]=0;
  p_output1[800]=0;
  p_output1[801]=0;
  p_output1[802]=0;
  p_output1[803]=0;
  p_output1[804]=0;
  p_output1[805]=0;
  p_output1[806]=0;
  p_output1[807]=0;
  p_output1[808]=0;
  p_output1[809]=0;
  p_output1[810]=0;
  p_output1[811]=0;
  p_output1[812]=0;
  p_output1[813]=0;
  p_output1[814]=0;
  p_output1[815]=0;
  p_output1[816]=0;
  p_output1[817]=0;
  p_output1[818]=0;
  p_output1[819]=0;
  p_output1[820]=0;
  p_output1[821]=0;
  p_output1[822]=0;
  p_output1[823]=0;
  p_output1[824]=0;
  p_output1[825]=0;
  p_output1[826]=0;
  p_output1[827]=0;
  p_output1[828]=0;
  p_output1[829]=0;
  p_output1[830]=0;
  p_output1[831]=0;
  p_output1[832]=0;
  p_output1[833]=0;
  p_output1[834]=0;
  p_output1[835]=0;
  p_output1[836]=0;
  p_output1[837]=0;
  p_output1[838]=0;
  p_output1[839]=0;
  p_output1[840]=0;
  p_output1[841]=0;
  p_output1[842]=0;
  p_output1[843]=0;
  p_output1[844]=0;
  p_output1[845]=0;
  p_output1[846]=0;
  p_output1[847]=0;
  p_output1[848]=0;
  p_output1[849]=0;
  p_output1[850]=0;
  p_output1[851]=0;
  p_output1[852]=0;
  p_output1[853]=0;
  p_output1[854]=0;
  p_output1[855]=0;
  p_output1[856]=0;
  p_output1[857]=0;
  p_output1[858]=0;
  p_output1[859]=0;
  p_output1[860]=0;
  p_output1[861]=0;
  p_output1[862]=0;
  p_output1[863]=0;
  p_output1[864]=0;
  p_output1[865]=0;
  p_output1[866]=0;
  p_output1[867]=0;
  p_output1[868]=0;
  p_output1[869]=0;
  p_output1[870]=0;
  p_output1[871]=0;
  p_output1[872]=0;
  p_output1[873]=0;
  p_output1[874]=0;
  p_output1[875]=0;
  p_output1[876]=0;
  p_output1[877]=0;
  p_output1[878]=0;
  p_output1[879]=0;
  p_output1[880]=0;
  p_output1[881]=0;
  p_output1[882]=0;
  p_output1[883]=0;
  p_output1[884]=0;
  p_output1[885]=0;
  p_output1[886]=0;
  p_output1[887]=0;
  p_output1[888]=0;
  p_output1[889]=0;
  p_output1[890]=0;
  p_output1[891]=0;
  p_output1[892]=0;
  p_output1[893]=0;
  p_output1[894]=0;
  p_output1[895]=0;
  p_output1[896]=0;
  p_output1[897]=0;
  p_output1[898]=0;
  p_output1[899]=0;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "One input(s) required (var1).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 30 && ncols == 1) && 
      !(mrows == 1 && ncols == 30))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 30, (mwSize) 30, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1);


}

#else // MATLAB_MEX_FILE

#include "Mmat3_digit.hh"

namespace SymFunction
{

void Mmat3_digit_raw(double *p_output1, const double *var1)
{
  // Call Subroutines
  output1(p_output1, var1);

}

}

#endif // MATLAB_MEX_FILE
