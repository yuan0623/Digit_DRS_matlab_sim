/*
 * Automatically Generated from Mathematica.
 * Mon 2 May 2022 22:30:45 GMT-04:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1)
{
  double t58;
  double t62;
  double t70;
  double t32;
  double t35;
  double t39;
  double t76;
  double t78;
  double t79;
  double t80;
  double t81;
  double t83;
  double t88;
  double t90;
  double t91;
  double t94;
  double t26;
  double t105;
  double t106;
  double t108;
  double t110;
  double t114;
  double t54;
  double t56;
  double t82;
  double t95;
  double t98;
  double t118;
  double t143;
  double t25;
  double t172;
  double t164;
  double t166;
  double t171;
  double t173;
  double t175;
  double t177;
  double t178;
  double t180;
  double t181;
  double t183;
  double t184;
  double t186;
  double t187;
  double t130;
  double t131;
  double t176;
  double t182;
  double t188;
  double t189;
  double t193;
  double t194;
  double t195;
  double t196;
  double t138;
  double t230;
  double t231;
  double t232;
  double t237;
  double t238;
  double t239;
  double t241;
  double t242;
  double t210;
  double t211;
  double t236;
  double t240;
  double t243;
  double t244;
  double t249;
  double t250;
  double t251;
  double t255;
  double t100;
  double t119;
  double t120;
  double t127;
  double t132;
  double t133;
  double t134;
  double t136;
  double t144;
  double t145;
  double t149;
  double t151;
  double t152;
  double t157;
  double t160;
  double t192;
  double t198;
  double t199;
  double t200;
  double t201;
  double t202;
  double t204;
  double t209;
  double t213;
  double t216;
  double t217;
  double t220;
  double t222;
  double t223;
  double t224;
  double t226;
  double t283;
  double t276;
  double t248;
  double t256;
  double t257;
  double t258;
  double t259;
  double t260;
  double t261;
  double t262;
  double t263;
  double t264;
  double t266;
  double t267;
  double t268;
  double t265;
  double t271;
  double t272;
  double t277;
  double t278;
  double t281;
  double t284;
  double t287;
  double t288;
  double t292;
  double t293;
  double t294;
  double t296;
  double t297;
  double t298;
  double t303;
  double t304;
  double t305;
  double t307;
  double t308;
  double t311;
  double t342;
  double t343;
  double t344;
  double t345;
  double t347;
  double t348;
  double t349;
  double t350;
  double t351;
  double t353;
  double t354;
  double t355;
  double t356;
  double t357;
  double t339;
  double t340;
  double t341;
  double t346;
  double t352;
  double t358;
  double t359;
  double t361;
  double t362;
  double t363;
  double t364;
  double t365;
  double t366;
  double t367;
  double t335;
  double t360;
  double t368;
  double t369;
  double t371;
  double t372;
  double t373;
  double t374;
  double t375;
  double t376;
  double t377;
  double t378;
  double t379;
  double t380;
  double t381;
  double t382;
  double t383;
  double t384;
  double t385;
  double t389;
  double t390;
  double t391;
  double t370;
  double t386;
  double t387;
  double t393;
  double t394;
  double t395;
  double t408;
  double t413;
  double t396;
  double t401;
  double t425;
  double t420;
  double t455;
  double t451;
  double t432;
  double t435;
  double t442;
  double t445;
  double t473;
  double t477;
  double t483;
  double t487;
  double t467;
  double t463;
  double t534;
  double t535;
  double t536;
  double t537;
  double t529;
  double t530;
  double t531;
  double t532;
  double t547;
  double t548;
  double t549;
  double t550;
  double t552;
  double t553;
  double t554;
  double t567;
  double t568;
  double t569;
  double t570;
  double t572;
  double t573;
  double t574;
  double t282;
  double t289;
  double t290;
  double t291;
  double t295;
  double t300;
  double t301;
  double t302;
  double t306;
  double t312;
  double t313;
  double t314;
  double t316;
  double t317;
  double t318;
  double t319;
  double t321;
  double t322;
  double t323;
  double t325;
  double t331;
  double t332;
  double t388;
  double t392;
  double t397;
  double t398;
  double t399;
  double t400;
  double t402;
  double t403;
  double t404;
  double t406;
  double t407;
  double t409;
  double t410;
  double t411;
  double t412;
  double t414;
  double t415;
  double t416;
  double t418;
  double t419;
  double t421;
  double t422;
  double t423;
  double t424;
  double t426;
  double t427;
  double t428;
  double t452;
  double t453;
  double t454;
  double t456;
  double t457;
  double t458;
  double t459;
  double t431;
  double t433;
  double t434;
  double t436;
  double t437;
  double t438;
  double t439;
  double t441;
  double t443;
  double t444;
  double t446;
  double t447;
  double t448;
  double t449;
  double t462;
  double t464;
  double t465;
  double t466;
  double t468;
  double t469;
  double t470;
  double t472;
  double t474;
  double t475;
  double t476;
  double t478;
  double t479;
  double t480;
  double t482;
  double t484;
  double t485;
  double t486;
  double t488;
  double t489;
  double t490;
  double t493;
  double t494;
  double t495;
  double t496;
  double t497;
  double t498;
  double t499;
  double t500;
  double t501;
  double t502;
  double t504;
  double t505;
  double t506;
  double t507;
  double t508;
  double t509;
  double t510;
  double t511;
  double t512;
  double t513;
  double t515;
  double t516;
  double t517;
  double t518;
  double t519;
  double t520;
  double t521;
  double t522;
  double t523;
  double t524;
  double t527;
  double t528;
  double t533;
  double t538;
  double t539;
  double t540;
  double t541;
  double t542;
  double t543;
  double t544;
  double t545;
  double t551;
  double t555;
  double t556;
  double t557;
  double t558;
  double t559;
  double t560;
  double t561;
  double t562;
  double t563;
  double t564;
  double t565;
  double t571;
  double t575;
  double t576;
  double t577;
  double t578;
  double t579;
  double t580;
  double t581;
  double t582;
  double t583;
  double t584;
  double t585;
  double t320;
  double t324;
  double t333;
  double t334;
  double t599;
  double t600;
  double t601;
  double t602;
  double t405;
  double t417;
  double t429;
  double t430;
  double t603;
  double t604;
  double t605;
  double t606;
  double t634;
  double t635;
  double t636;
  double t637;
  double t718;
  double t719;
  double t720;
  double t722;
  double t723;
  double t724;
  double t725;
  double t727;
  double t728;
  double t729;
  double t730;
  double t748;
  double t749;
  double t750;
  double t752;
  double t753;
  double t754;
  double t756;
  double t757;
  double t758;
  double t440;
  double t450;
  double t460;
  double t461;
  double t607;
  double t608;
  double t609;
  double t610;
  double t638;
  double t639;
  double t640;
  double t641;
  double t660;
  double t661;
  double t662;
  double t663;
  double t680;
  double t691;
  double t692;
  double t669;
  double t670;
  double t671;
  double t672;
  double t674;
  double t675;
  double t676;
  double t677;
  double t686;
  double t687;
  double t688;
  double t689;
  double t681;
  double t682;
  double t683;
  double t684;
  double t693;
  double t694;
  double t695;
  double t696;
  double t705;
  double t706;
  double t707;
  double t708;
  double t700;
  double t701;
  double t702;
  double t703;
  double t710;
  double t711;
  double t712;
  double t713;
  double t721;
  double t726;
  double t731;
  double t732;
  double t734;
  double t735;
  double t736;
  double t737;
  double t739;
  double t740;
  double t741;
  double t742;
  double t751;
  double t755;
  double t759;
  double t760;
  double t762;
  double t763;
  double t764;
  double t765;
  double t767;
  double t768;
  double t769;
  double t770;
  double t471;
  double t481;
  double t491;
  double t492;
  double t611;
  double t612;
  double t613;
  double t614;
  double t642;
  double t643;
  double t644;
  double t645;
  double t699;
  double t715;
  double t716;
  double t797;
  double t799;
  double t800;
  double t503;
  double t514;
  double t525;
  double t526;
  double t615;
  double t616;
  double t617;
  double t618;
  double t646;
  double t647;
  double t648;
  double t649;
  double t744;
  double t745;
  double t746;
  double t807;
  double t808;
  double t809;
  double t845;
  double t846;
  double t847;
  double t546;
  double t566;
  double t586;
  double t587;
  double t619;
  double t620;
  double t621;
  double t622;
  double t650;
  double t651;
  double t652;
  double t653;
  double t772;
  double t773;
  double t774;
  double t813;
  double t815;
  double t816;
  double t852;
  double t854;
  double t855;
  double t887;
  double t888;
  double t890;
  double t588;
  double t589;
  double t590;
  double t591;
  double t623;
  double t624;
  double t625;
  double t626;
  double t654;
  double t655;
  double t656;
  double t657;
  double t777;
  double t778;
  double t779;
  double t819;
  double t820;
  double t821;
  double t858;
  double t859;
  double t860;
  double t894;
  double t895;
  double t896;
  double t927;
  double t928;
  double t931;
  t58 = Cos(var1[8]);
  t62 = -1.*t58;
  t70 = 1. + t62;
  t32 = Cos(var1[7]);
  t35 = -1.*t32;
  t39 = 1. + t35;
  t76 = -0.8656776547239999*t70;
  t78 = 1. + t76;
  t79 = -0.366501*t78;
  t80 = -0.3172717261340007*t70;
  t81 = t79 + t80;
  t83 = -0.134322983001*t70;
  t88 = 1. + t83;
  t90 = -0.930418*t88;
  t91 = -0.12497652119782442*t70;
  t94 = t90 + t91;
  t26 = Cos(var1[6]);
  t105 = -0.340999127418*t39*t81;
  t106 = -0.8656776547239999*t39;
  t108 = 1. + t106;
  t110 = t108*t94;
  t114 = 0. + t105 + t110;
  t54 = -0.134322983001*t39;
  t56 = 1. + t54;
  t82 = t56*t81;
  t95 = -0.340999127418*t39*t94;
  t98 = 0. + t82 + t95;
  t118 = Sin(var1[6]);
  t143 = Sin(var1[7]);
  t25 = Sin(var1[4]);
  t172 = Sin(var1[8]);
  t164 = -1.000000637725*t70;
  t166 = 1. + t164;
  t171 = 0.707107*t166;
  t173 = -0.7071072209449999*t172;
  t175 = t171 + t173;
  t177 = -0.657905*t78;
  t178 = 0.0883716288660118*t70;
  t180 = -0.6579050807260001*t172;
  t181 = t177 + t178 + t180;
  t183 = 0.259155*t88;
  t184 = -0.22434503092393926*t70;
  t186 = 0.25915542260700003*t172;
  t187 = t183 + t184 + t186;
  t130 = Cos(var1[4]);
  t131 = Sin(var1[5]);
  t176 = -0.930418*t143*t175;
  t182 = -0.340999127418*t39*t181;
  t188 = t108*t187;
  t189 = t176 + t182 + t188;
  t193 = -0.366501*t143*t175;
  t194 = t56*t181;
  t195 = -0.340999127418*t39*t187;
  t196 = t193 + t194 + t195;
  t138 = Cos(var1[5]);
  t230 = 0.657905*t78;
  t231 = -0.0883716288660118*t70;
  t232 = t230 + t231 + t180;
  t237 = -0.259155*t88;
  t238 = 0.22434503092393926*t70;
  t239 = t237 + t238 + t186;
  t241 = 0.7071072209449999*t172;
  t242 = t171 + t241;
  t210 = -1.000000637725*t39;
  t211 = 1. + t210;
  t236 = -0.340999127418*t39*t232;
  t240 = t108*t239;
  t243 = -0.930418*t143*t242;
  t244 = t236 + t240 + t243;
  t249 = t56*t232;
  t250 = -0.340999127418*t39*t239;
  t251 = -0.366501*t143*t242;
  t255 = t249 + t250 + t251;
  t100 = t26*t98;
  t119 = -1.*t114*t118;
  t120 = t100 + t119;
  t127 = t25*t120;
  t132 = t26*t114;
  t133 = t98*t118;
  t134 = t132 + t133;
  t136 = -1.*t131*t134;
  t144 = 0.366501*t81*t143;
  t145 = 0.930418*t94*t143;
  t149 = 0. + t144 + t145;
  t151 = t138*t149;
  t152 = t136 + t151;
  t157 = t130*t152;
  t160 = t127 + t157;
  t192 = -1.*t118*t189;
  t198 = t26*t196;
  t199 = t192 + t198;
  t200 = t25*t199;
  t201 = t26*t189;
  t202 = t118*t196;
  t204 = t201 + t202;
  t209 = -1.*t131*t204;
  t213 = t211*t175;
  t216 = 0.366501*t143*t181;
  t217 = 0.930418*t143*t187;
  t220 = t213 + t216 + t217;
  t222 = t138*t220;
  t223 = t209 + t222;
  t224 = t130*t223;
  t226 = t200 + t224;
  t283 = Sin(var1[3]);
  t276 = Cos(var1[3]);
  t248 = t26*t244;
  t256 = t118*t255;
  t257 = t248 + t256;
  t258 = -1.*t131*t257;
  t259 = 0.366501*t143*t232;
  t260 = 0.930418*t143*t239;
  t261 = t211*t242;
  t262 = t259 + t260 + t261;
  t263 = t138*t262;
  t264 = t258 + t263;
  t266 = -1.*t118*t244;
  t267 = t26*t255;
  t268 = t266 + t267;
  t265 = t130*t264;
  t271 = t25*t268;
  t272 = t265 + t271;
  t277 = t138*t134;
  t278 = t131*t149;
  t281 = t277 + t278;
  t284 = t130*t120;
  t287 = -1.*t25*t152;
  t288 = t284 + t287;
  t292 = t130*t199;
  t293 = -1.*t25*t223;
  t294 = t292 + t293;
  t296 = t138*t204;
  t297 = t131*t220;
  t298 = t296 + t297;
  t303 = -1.*t25*t264;
  t304 = t130*t268;
  t305 = t303 + t304;
  t307 = t138*t257;
  t308 = t131*t262;
  t311 = t307 + t308;
  t342 = -0.001825*t166;
  t343 = -0.04500040093286238*t70;
  t344 = -0.042437201895183324*t172;
  t345 = t342 + t343 + t344;
  t347 = 1.296332362046933e-7*var1[8];
  t348 = -0.134032*t78;
  t349 = -0.07654417090505448*t70;
  t350 = -0.04017114348414423*t172;
  t351 = t347 + t348 + t349 + t350;
  t353 = 3.2909349868922137e-7*var1[8];
  t354 = 0.189859*t88;
  t355 = 0.009949150297800281*t70;
  t356 = 0.015823817099499735*t172;
  t357 = t353 + t354 + t355 + t356;
  t339 = 1.296332362046933e-7*var1[7];
  t340 = 0.07877668146182712*t39;
  t341 = -0.04186915633414423*t143;
  t346 = -0.930418*t143*t345;
  t352 = -0.340999127418*t39*t351;
  t358 = t108*t357;
  t359 = t339 + t340 + t341 + t346 + t352 + t358;
  t361 = -3.2909349868922137e-7*var1[7];
  t362 = 0.03103092645718495*t39;
  t363 = -0.016492681424499736*t143;
  t364 = -0.366501*t143*t345;
  t365 = t56*t351;
  t366 = -0.340999127418*t39*t357;
  t367 = t361 + t362 + t363 + t364 + t365 + t366;
  t335 = 0.091*t118;
  t360 = -1.*t118*t359;
  t368 = t26*t367;
  t369 = t335 + t360 + t368;
  t371 = -1.*t26;
  t372 = 1. + t371;
  t373 = 0.091*t372;
  t374 = t26*t359;
  t375 = t118*t367;
  t376 = t373 + t374 + t375;
  t377 = -1.*t131*t376;
  t378 = -0.04500040093286238*t39;
  t379 = -0.0846680539949003*t143;
  t380 = t211*t345;
  t381 = 0.366501*t143*t351;
  t382 = 0.930418*t143*t357;
  t383 = t378 + t379 + t380 + t381 + t382;
  t384 = t138*t383;
  t385 = t377 + t384;
  t389 = t25*t369;
  t390 = t130*t385;
  t391 = t389 + t390;
  t370 = t130*t369;
  t386 = -1.*t25*t385;
  t387 = t370 + t386;
  t393 = t138*t376;
  t394 = t131*t383;
  t395 = t393 + t394;
  t408 = -1.*t395*t311;
  t413 = t281*t395;
  t396 = t395*t311;
  t401 = -1.*t395*t298;
  t425 = t395*t298;
  t420 = -1.*t281*t395;
  t455 = -1.*t120*t369;
  t451 = t369*t199;
  t432 = -1.*t369*t268;
  t435 = t120*t369;
  t442 = t369*t268;
  t445 = -1.*t369*t199;
  t473 = -1.*t383*t262;
  t477 = t149*t383;
  t483 = t383*t262;
  t487 = -1.*t383*t220;
  t467 = t383*t220;
  t463 = -1.*t149*t383;
  t534 = t232*t351;
  t535 = t357*t239;
  t536 = t345*t242;
  t537 = t534 + t535 + t536;
  t529 = -1.*t175*t345;
  t530 = -1.*t181*t351;
  t531 = -1.*t357*t187;
  t532 = t529 + t530 + t531;
  t547 = -1.*t232*t351;
  t548 = -1.*t357*t239;
  t549 = -1.*t345*t242;
  t550 = t547 + t548 + t549;
  t552 = t81*t351;
  t553 = t94*t357;
  t554 = 0. + t552 + t553;
  t567 = t175*t345;
  t568 = t181*t351;
  t569 = t357*t187;
  t570 = t567 + t568 + t569;
  t572 = -1.*t81*t351;
  t573 = -1.*t94*t357;
  t574 = 0. + t572 + t573;
  t282 = t276*t281;
  t289 = -1.*t283*t288;
  t290 = t282 + t289;
  t291 = 6.244279*t160*t290;
  t295 = -1.*t283*t294;
  t300 = t276*t298;
  t301 = t295 + t300;
  t302 = 6.244279*t226*t301;
  t306 = -1.*t283*t305;
  t312 = t276*t311;
  t313 = t306 + t312;
  t314 = 6.244279*t313*t272;
  t316 = t291 + t302 + t314;
  t317 = t283*t281;
  t318 = t276*t288;
  t319 = t317 + t318;
  t321 = t276*t294;
  t322 = t283*t298;
  t323 = t321 + t322;
  t325 = t276*t305;
  t331 = t283*t311;
  t332 = t325 + t331;
  t388 = t387*t305;
  t392 = t391*t272;
  t397 = t388 + t392 + t396;
  t398 = t226*t397;
  t399 = -1.*t391*t226;
  t400 = -1.*t387*t294;
  t402 = t399 + t400 + t401;
  t403 = t402*t272;
  t404 = t398 + t403;
  t406 = -1.*t387*t305;
  t407 = -1.*t391*t272;
  t409 = t406 + t407 + t408;
  t410 = t160*t409;
  t411 = t160*t391;
  t412 = t288*t387;
  t414 = t411 + t412 + t413;
  t415 = t414*t272;
  t416 = t410 + t415;
  t418 = -1.*t160*t391;
  t419 = -1.*t288*t387;
  t421 = t418 + t419 + t420;
  t422 = t421*t226;
  t423 = t391*t226;
  t424 = t387*t294;
  t426 = t423 + t424 + t425;
  t427 = t160*t426;
  t428 = t422 + t427;
  t452 = t385*t223;
  t453 = t451 + t452 + t425;
  t454 = t281*t453;
  t456 = -1.*t152*t385;
  t457 = t455 + t456 + t420;
  t458 = t457*t298;
  t459 = t454 + t458;
  t431 = -1.*t385*t264;
  t433 = t431 + t408 + t432;
  t434 = t281*t433;
  t436 = t152*t385;
  t437 = t435 + t436 + t413;
  t438 = t437*t311;
  t439 = t434 + t438;
  t441 = t385*t264;
  t443 = t441 + t396 + t442;
  t444 = t443*t298;
  t446 = -1.*t385*t223;
  t447 = t445 + t446 + t401;
  t448 = t447*t311;
  t449 = t444 + t448;
  t462 = -1.*t134*t376;
  t464 = t455 + t462 + t463;
  t465 = t464*t199;
  t466 = t376*t204;
  t468 = t451 + t466 + t467;
  t469 = t120*t468;
  t470 = t465 + t469;
  t472 = -1.*t376*t257;
  t474 = t432 + t472 + t473;
  t475 = t120*t474;
  t476 = t134*t376;
  t478 = t435 + t476 + t477;
  t479 = t478*t268;
  t480 = t475 + t479;
  t482 = t376*t257;
  t484 = t442 + t482 + t483;
  t485 = t199*t484;
  t486 = -1.*t376*t204;
  t488 = t445 + t486 + t487;
  t489 = t488*t268;
  t490 = t485 + t489;
  t493 = -1.*t359*t244;
  t494 = -1.*t367*t255;
  t495 = t473 + t493 + t494;
  t496 = -1.*t149*t495;
  t497 = 0.091*t196;
  t498 = t114*t359;
  t499 = t98*t367;
  t500 = t498 + t499 + t477;
  t501 = -1.*t500*t262;
  t502 = t496 + t497 + t501;
  t504 = 0.091*t98;
  t505 = t359*t244;
  t506 = t367*t255;
  t507 = t483 + t505 + t506;
  t508 = -1.*t507*t220;
  t509 = -1.*t359*t189;
  t510 = -1.*t367*t196;
  t511 = t509 + t510 + t487;
  t512 = -1.*t511*t262;
  t513 = t504 + t508 + t512;
  t515 = t359*t189;
  t516 = t367*t196;
  t517 = t515 + t516 + t467;
  t518 = -1.*t149*t517;
  t519 = -1.*t114*t359;
  t520 = -1.*t98*t367;
  t521 = t519 + t520 + t463;
  t522 = -1.*t521*t220;
  t523 = 0.091*t255;
  t524 = t518 + t522 + t523;
  t527 = -0.016493*t81;
  t528 = -0.041869*t94;
  t533 = t532*t232;
  t538 = t537*t181;
  t539 = t533 + t538;
  t540 = -0.930418*t539;
  t541 = t537*t187;
  t542 = t532*t239;
  t543 = t541 + t542;
  t544 = 0.366501*t543;
  t545 = 0. + t527 + t528 + t540 + t544;
  t551 = t81*t550;
  t555 = t554*t232;
  t556 = t551 + t555;
  t557 = -0.930418*t556;
  t558 = t94*t550;
  t559 = t554*t239;
  t560 = t558 + t559;
  t561 = 0.366501*t560;
  t562 = -0.084668*t175;
  t563 = -0.016493*t181;
  t564 = -0.041869*t187;
  t565 = t557 + t561 + t562 + t563 + t564;
  t571 = t81*t570;
  t575 = t574*t181;
  t576 = t571 + t575;
  t577 = -0.930418*t576;
  t578 = t94*t570;
  t579 = t574*t187;
  t580 = t578 + t579;
  t581 = 0.366501*t580;
  t582 = -0.016493*t232;
  t583 = -0.041869*t239;
  t584 = -0.084668*t242;
  t585 = t577 + t581 + t582 + t583 + t584;
  t320 = 6.244279*t160*t319;
  t324 = 6.244279*t226*t323;
  t333 = 6.244279*t332*t272;
  t334 = t320 + t324 + t333;
  t599 = 6.244279*t319*t290;
  t600 = 6.244279*t301*t323;
  t601 = 6.244279*t313*t332;
  t602 = t599 + t600 + t601;
  t405 = 6.244279*t160*t404;
  t417 = 6.244279*t416*t226;
  t429 = 6.244279*t428*t272;
  t430 = t405 + t417 + t429;
  t603 = 6.244279*t290*t404;
  t604 = 6.244279*t416*t301;
  t605 = 6.244279*t428*t313;
  t606 = t603 + t604 + t605;
  t634 = 6.244279*t319*t404;
  t635 = 6.244279*t416*t323;
  t636 = 6.244279*t428*t332;
  t637 = t634 + t635 + t636;
  t718 = -0.366501*t81*t143;
  t719 = -0.930418*t94*t143;
  t720 = 0. + t718 + t719;
  t722 = -1.*t211*t175;
  t723 = -0.366501*t143*t181;
  t724 = -0.930418*t143*t187;
  t725 = t722 + t723 + t724;
  t727 = -0.366501*t143*t232;
  t728 = -0.930418*t143*t239;
  t729 = -1.*t211*t242;
  t730 = t727 + t728 + t729;
  t748 = -0.930418*t81;
  t749 = 0.366501*t94;
  t750 = t748 + t749;
  t752 = -0.930418*t181;
  t753 = 0.366501*t187;
  t754 = t752 + t753;
  t756 = -0.930418*t232;
  t757 = 0.366501*t239;
  t758 = t756 + t757;
  t440 = 6.244279*t226*t439;
  t450 = 6.244279*t160*t449;
  t460 = 6.244279*t459*t272;
  t461 = t440 + t450 + t460;
  t607 = 6.244279*t459*t313;
  t608 = 6.244279*t301*t439;
  t609 = 6.244279*t290*t449;
  t610 = t607 + t608 + t609;
  t638 = 6.244279*t459*t332;
  t639 = 6.244279*t323*t439;
  t640 = 6.244279*t319*t449;
  t641 = t638 + t639 + t640;
  t660 = 0.033958*t160;
  t661 = 0.000148*t226;
  t662 = 0.000178*t272;
  t663 = t660 + t661 + t662;
  t680 = 6.244279*t428*t459;
  t691 = 6.244279*t416*t439;
  t692 = 6.244279*t404*t449;
  t669 = 0.000148*t160;
  t670 = 0.011533*t226;
  t671 = -0.000171*t272;
  t672 = t669 + t670 + t671;
  t674 = 0.000178*t160;
  t675 = -0.000171*t226;
  t676 = 0.033345*t272;
  t677 = t674 + t675 + t676;
  t686 = 0.033958*t281;
  t687 = 0.000148*t298;
  t688 = 0.000178*t311;
  t689 = t686 + t687 + t688;
  t681 = 0.000148*t281;
  t682 = 0.011533*t298;
  t683 = -0.000171*t311;
  t684 = t681 + t682 + t683;
  t693 = 0.000178*t281;
  t694 = -0.000171*t298;
  t695 = 0.033345*t311;
  t696 = t693 + t694 + t695;
  t705 = 0.033958*t120;
  t706 = 0.000148*t199;
  t707 = 0.000178*t268;
  t708 = t705 + t706 + t707;
  t700 = 0.000148*t120;
  t701 = 0.011533*t199;
  t702 = -0.000171*t268;
  t703 = t700 + t701 + t702;
  t710 = 0.000178*t120;
  t711 = -0.000171*t199;
  t712 = 0.033345*t268;
  t713 = t710 + t711 + t712;
  t721 = 0.000148*t720;
  t726 = 0.011533*t725;
  t731 = -0.000171*t730;
  t732 = t721 + t726 + t731;
  t734 = 0.033958*t720;
  t735 = 0.000148*t725;
  t736 = 0.000178*t730;
  t737 = t734 + t735 + t736;
  t739 = 0.000178*t720;
  t740 = -0.000171*t725;
  t741 = 0.033345*t730;
  t742 = t739 + t740 + t741;
  t751 = 0.000148*t750;
  t755 = 0.011533*t754;
  t759 = -0.000171*t758;
  t760 = t751 + t755 + t759;
  t762 = 0.033958*t750;
  t763 = 0.000148*t754;
  t764 = 0.000178*t758;
  t765 = t762 + t763 + t764;
  t767 = 0.000178*t750;
  t768 = -0.000171*t754;
  t769 = 0.033345*t758;
  t770 = t767 + t768 + t769;
  t471 = 6.244279*t470*t272;
  t481 = 6.244279*t226*t480;
  t491 = 6.244279*t160*t490;
  t492 = t471 + t481 + t491;
  t611 = 6.244279*t470*t313;
  t612 = 6.244279*t301*t480;
  t613 = 6.244279*t290*t490;
  t614 = t611 + t612 + t613;
  t642 = 6.244279*t470*t332;
  t643 = 6.244279*t323*t480;
  t644 = 6.244279*t319*t490;
  t645 = t642 + t643 + t644;
  t699 = 6.244279*t428*t470;
  t715 = 6.244279*t416*t480;
  t716 = 6.244279*t404*t490;
  t797 = 6.244279*t459*t470;
  t799 = 6.244279*t439*t480;
  t800 = 6.244279*t449*t490;
  t503 = 6.244279*t226*t502;
  t514 = 6.244279*t160*t513;
  t525 = 6.244279*t272*t524;
  t526 = t503 + t514 + t525;
  t615 = 6.244279*t301*t502;
  t616 = 6.244279*t290*t513;
  t617 = 6.244279*t313*t524;
  t618 = t615 + t616 + t617;
  t646 = 6.244279*t323*t502;
  t647 = 6.244279*t319*t513;
  t648 = 6.244279*t332*t524;
  t649 = t646 + t647 + t648;
  t744 = 6.244279*t416*t502;
  t745 = 6.244279*t404*t513;
  t746 = 6.244279*t428*t524;
  t807 = 6.244279*t439*t502;
  t808 = 6.244279*t449*t513;
  t809 = 6.244279*t459*t524;
  t845 = 6.244279*t480*t502;
  t846 = 6.244279*t490*t513;
  t847 = 6.244279*t470*t524;
  t546 = 6.244279*t160*t545;
  t566 = 6.244279*t226*t565;
  t586 = 6.244279*t272*t585;
  t587 = t546 + t566 + t586;
  t619 = 6.244279*t290*t545;
  t620 = 6.244279*t301*t565;
  t621 = 6.244279*t313*t585;
  t622 = t619 + t620 + t621;
  t650 = 6.244279*t319*t545;
  t651 = 6.244279*t323*t565;
  t652 = 6.244279*t332*t585;
  t653 = t650 + t651 + t652;
  t772 = 6.244279*t404*t545;
  t773 = 6.244279*t416*t565;
  t774 = 6.244279*t428*t585;
  t813 = 6.244279*t449*t545;
  t815 = 6.244279*t439*t565;
  t816 = 6.244279*t459*t585;
  t852 = 6.244279*t490*t545;
  t854 = 6.244279*t480*t565;
  t855 = 6.244279*t470*t585;
  t887 = 6.244279*t545*t513;
  t888 = 6.244279*t502*t565;
  t890 = 6.244279*t524*t585;
  t588 = -2.2027726432915287e-6*t160;
  t589 = 0.0032585322757234594*t226;
  t590 = -0.37801210760356113*t272;
  t591 = t588 + t589 + t590;
  t623 = -2.2027726432915287e-6*t290;
  t624 = 0.0032585322757234594*t301;
  t625 = -0.37801210760356113*t313;
  t626 = t623 + t624 + t625;
  t654 = -2.2027726432915287e-6*t319;
  t655 = 0.0032585322757234594*t323;
  t656 = -0.37801210760356113*t332;
  t657 = t654 + t655 + t656;
  t777 = -0.37801210760356113*t428;
  t778 = 0.0032585322757234594*t416;
  t779 = -2.2027726432915287e-6*t404;
  t819 = -0.37801210760356113*t459;
  t820 = 0.0032585322757234594*t439;
  t821 = -2.2027726432915287e-6*t449;
  t858 = -0.37801210760356113*t470;
  t859 = 0.0032585322757234594*t480;
  t860 = -2.2027726432915287e-6*t490;
  t894 = 0.0032585322757234594*t502;
  t895 = -2.2027726432915287e-6*t513;
  t896 = -0.37801210760356113*t524;
  t927 = -2.2027726432915287e-6*t545;
  t928 = 0.0032585322757234594*t565;
  t931 = -0.37801210760356113*t585;
  p_output1[0]=6.244279*Power(t160,2) + 6.244279*Power(t226,2) + 6.244279*Power(t272,2);
  p_output1[1]=t316;
  p_output1[2]=t334;
  p_output1[3]=t430;
  p_output1[4]=t461;
  p_output1[5]=t492;
  p_output1[6]=t526;
  p_output1[7]=t587;
  p_output1[8]=t591;
  p_output1[9]=0;
  p_output1[10]=0;
  p_output1[11]=0;
  p_output1[12]=0;
  p_output1[13]=0;
  p_output1[14]=0;
  p_output1[15]=0;
  p_output1[16]=0;
  p_output1[17]=0;
  p_output1[18]=0;
  p_output1[19]=0;
  p_output1[20]=0;
  p_output1[21]=0;
  p_output1[22]=0;
  p_output1[23]=0;
  p_output1[24]=0;
  p_output1[25]=0;
  p_output1[26]=0;
  p_output1[27]=0;
  p_output1[28]=0;
  p_output1[29]=0;
  p_output1[30]=t316;
  p_output1[31]=6.244279*Power(t290,2) + 6.244279*Power(t301,2) + 6.244279*Power(t313,2);
  p_output1[32]=t602;
  p_output1[33]=t606;
  p_output1[34]=t610;
  p_output1[35]=t614;
  p_output1[36]=t618;
  p_output1[37]=t622;
  p_output1[38]=t626;
  p_output1[39]=0;
  p_output1[40]=0;
  p_output1[41]=0;
  p_output1[42]=0;
  p_output1[43]=0;
  p_output1[44]=0;
  p_output1[45]=0;
  p_output1[46]=0;
  p_output1[47]=0;
  p_output1[48]=0;
  p_output1[49]=0;
  p_output1[50]=0;
  p_output1[51]=0;
  p_output1[52]=0;
  p_output1[53]=0;
  p_output1[54]=0;
  p_output1[55]=0;
  p_output1[56]=0;
  p_output1[57]=0;
  p_output1[58]=0;
  p_output1[59]=0;
  p_output1[60]=t334;
  p_output1[61]=t602;
  p_output1[62]=6.244279*Power(t319,2) + 6.244279*Power(t323,2) + 6.244279*Power(t332,2);
  p_output1[63]=t637;
  p_output1[64]=t641;
  p_output1[65]=t645;
  p_output1[66]=t649;
  p_output1[67]=t653;
  p_output1[68]=t657;
  p_output1[69]=0;
  p_output1[70]=0;
  p_output1[71]=0;
  p_output1[72]=0;
  p_output1[73]=0;
  p_output1[74]=0;
  p_output1[75]=0;
  p_output1[76]=0;
  p_output1[77]=0;
  p_output1[78]=0;
  p_output1[79]=0;
  p_output1[80]=0;
  p_output1[81]=0;
  p_output1[82]=0;
  p_output1[83]=0;
  p_output1[84]=0;
  p_output1[85]=0;
  p_output1[86]=0;
  p_output1[87]=0;
  p_output1[88]=0;
  p_output1[89]=0;
  p_output1[90]=t430;
  p_output1[91]=t606;
  p_output1[92]=t637;
  p_output1[93]=6.244279*Power(t404,2) + 6.244279*Power(t416,2) + 6.244279*Power(t428,2) + t160*t663 + t226*t672 + t272*t677;
  p_output1[94]=t680 + t226*t684 + t160*t689 + t691 + t692 + t272*t696;
  p_output1[95]=t699 + t226*t703 + t160*t708 + t272*t713 + t715 + t716;
  p_output1[96]=t226*t732 + t160*t737 + t272*t742 + t744 + t745 + t746;
  p_output1[97]=t226*t760 + t160*t765 + t272*t770 + t772 + t773 + t774;
  p_output1[98]=-0.0339580216449571*t160 - 0.00014800435013325995*t226 - 0.00017798792659471*t272 + t777 + t778 + t779;
  p_output1[99]=0;
  p_output1[100]=0;
  p_output1[101]=0;
  p_output1[102]=0;
  p_output1[103]=0;
  p_output1[104]=0;
  p_output1[105]=0;
  p_output1[106]=0;
  p_output1[107]=0;
  p_output1[108]=0;
  p_output1[109]=0;
  p_output1[110]=0;
  p_output1[111]=0;
  p_output1[112]=0;
  p_output1[113]=0;
  p_output1[114]=0;
  p_output1[115]=0;
  p_output1[116]=0;
  p_output1[117]=0;
  p_output1[118]=0;
  p_output1[119]=0;
  p_output1[120]=t461;
  p_output1[121]=t610;
  p_output1[122]=t641;
  p_output1[123]=t281*t663 + t298*t672 + t311*t677 + t680 + t691 + t692;
  p_output1[124]=6.244279*Power(t439,2) + 6.244279*Power(t449,2) + 6.244279*Power(t459,2) + t298*t684 + t281*t689 + t311*t696;
  p_output1[125]=t298*t703 + t281*t708 + t311*t713 + t797 + t799 + t800;
  p_output1[126]=t298*t732 + t281*t737 + t311*t742 + t807 + t808 + t809;
  p_output1[127]=t298*t760 + t281*t765 + t311*t770 + t813 + t815 + t816;
  p_output1[128]=-0.0339580216449571*t281 - 0.00014800435013325995*t298 - 0.00017798792659471*t311 + t819 + t820 + t821;
  p_output1[129]=0;
  p_output1[130]=0;
  p_output1[131]=0;
  p_output1[132]=0;
  p_output1[133]=0;
  p_output1[134]=0;
  p_output1[135]=0;
  p_output1[136]=0;
  p_output1[137]=0;
  p_output1[138]=0;
  p_output1[139]=0;
  p_output1[140]=0;
  p_output1[141]=0;
  p_output1[142]=0;
  p_output1[143]=0;
  p_output1[144]=0;
  p_output1[145]=0;
  p_output1[146]=0;
  p_output1[147]=0;
  p_output1[148]=0;
  p_output1[149]=0;
  p_output1[150]=t492;
  p_output1[151]=t614;
  p_output1[152]=t645;
  p_output1[153]=t120*t663 + t199*t672 + t268*t677 + t699 + t715 + t716;
  p_output1[154]=t199*t684 + t120*t689 + t268*t696 + t797 + t799 + t800;
  p_output1[155]=6.244279*Power(t470,2) + 6.244279*Power(t480,2) + 6.244279*Power(t490,2) + t199*t703 + t120*t708 + t268*t713;
  p_output1[156]=t199*t732 + t120*t737 + t268*t742 + t845 + t846 + t847;
  p_output1[157]=t199*t760 + t120*t765 + t268*t770 + t852 + t854 + t855;
  p_output1[158]=-0.0339580216449571*t120 - 0.00014800435013325995*t199 - 0.00017798792659471*t268 + t858 + t859 + t860;
  p_output1[159]=0;
  p_output1[160]=0;
  p_output1[161]=0;
  p_output1[162]=0;
  p_output1[163]=0;
  p_output1[164]=0;
  p_output1[165]=0;
  p_output1[166]=0;
  p_output1[167]=0;
  p_output1[168]=0;
  p_output1[169]=0;
  p_output1[170]=0;
  p_output1[171]=0;
  p_output1[172]=0;
  p_output1[173]=0;
  p_output1[174]=0;
  p_output1[175]=0;
  p_output1[176]=0;
  p_output1[177]=0;
  p_output1[178]=0;
  p_output1[179]=0;
  p_output1[180]=t526;
  p_output1[181]=t618;
  p_output1[182]=t649;
  p_output1[183]=t663*t720 + t672*t725 + t677*t730 + t744 + t745 + t746;
  p_output1[184]=t689*t720 + t684*t725 + t696*t730 + t807 + t808 + t809;
  p_output1[185]=t708*t720 + t703*t725 + t713*t730 + t845 + t846 + t847;
  p_output1[186]=6.244279*Power(t502,2) + 6.244279*Power(t513,2) + 6.244279*Power(t524,2) + t725*t732 + t720*t737 + t730*t742;
  p_output1[187]=t725*t760 + t720*t765 + t730*t770 + t887 + t888 + t890;
  p_output1[188]=-0.0339580216449571*t720 - 0.00014800435013325995*t725 - 0.00017798792659471*t730 + t894 + t895 + t896;
  p_output1[189]=0;
  p_output1[190]=0;
  p_output1[191]=0;
  p_output1[192]=0;
  p_output1[193]=0;
  p_output1[194]=0;
  p_output1[195]=0;
  p_output1[196]=0;
  p_output1[197]=0;
  p_output1[198]=0;
  p_output1[199]=0;
  p_output1[200]=0;
  p_output1[201]=0;
  p_output1[202]=0;
  p_output1[203]=0;
  p_output1[204]=0;
  p_output1[205]=0;
  p_output1[206]=0;
  p_output1[207]=0;
  p_output1[208]=0;
  p_output1[209]=0;
  p_output1[210]=t587;
  p_output1[211]=t622;
  p_output1[212]=t653;
  p_output1[213]=t663*t750 + t672*t754 + t677*t758 + t772 + t773 + t774;
  p_output1[214]=t689*t750 + t684*t754 + t696*t758 + t813 + t815 + t816;
  p_output1[215]=t708*t750 + t703*t754 + t713*t758 + t852 + t854 + t855;
  p_output1[216]=t737*t750 + t732*t754 + t742*t758 + t887 + t888 + t890;
  p_output1[217]=6.244279*Power(t545,2) + 6.244279*Power(t565,2) + 6.244279*Power(t585,2) + t754*t760 + t750*t765 + t758*t770;
  p_output1[218]=-0.0339580216449571*t750 - 0.00014800435013325995*t754 - 0.00017798792659471*t758 + t927 + t928 + t931;
  p_output1[219]=0;
  p_output1[220]=0;
  p_output1[221]=0;
  p_output1[222]=0;
  p_output1[223]=0;
  p_output1[224]=0;
  p_output1[225]=0;
  p_output1[226]=0;
  p_output1[227]=0;
  p_output1[228]=0;
  p_output1[229]=0;
  p_output1[230]=0;
  p_output1[231]=0;
  p_output1[232]=0;
  p_output1[233]=0;
  p_output1[234]=0;
  p_output1[235]=0;
  p_output1[236]=0;
  p_output1[237]=0;
  p_output1[238]=0;
  p_output1[239]=0;
  p_output1[240]=t591;
  p_output1[241]=t626;
  p_output1[242]=t657;
  p_output1[243]=-1.000000637725*t663 - 3.6361499999859603e-7*t672 + 3.6361499999859603e-7*t677 + t777 + t778 + t779;
  p_output1[244]=-3.6361499999859603e-7*t684 - 1.000000637725*t689 + 3.6361499999859603e-7*t696 + t819 + t820 + t821;
  p_output1[245]=-3.6361499999859603e-7*t703 - 1.000000637725*t708 + 3.6361499999859603e-7*t713 + t858 + t859 + t860;
  p_output1[246]=-3.6361499999859603e-7*t732 - 1.000000637725*t737 + 3.6361499999859603e-7*t742 + t894 + t895 + t896;
  p_output1[247]=-3.6361499999859603e-7*t760 - 1.000000637725*t765 + 3.6361499999859603e-7*t770 + t927 + t928 + t931;
  p_output1[248]=0.056843595253952627;
  p_output1[249]=0;
  p_output1[250]=0;
  p_output1[251]=0;
  p_output1[252]=0;
  p_output1[253]=0;
  p_output1[254]=0;
  p_output1[255]=0;
  p_output1[256]=0;
  p_output1[257]=0;
  p_output1[258]=0;
  p_output1[259]=0;
  p_output1[260]=0;
  p_output1[261]=0;
  p_output1[262]=0;
  p_output1[263]=0;
  p_output1[264]=0;
  p_output1[265]=0;
  p_output1[266]=0;
  p_output1[267]=0;
  p_output1[268]=0;
  p_output1[269]=0;
  p_output1[270]=0;
  p_output1[271]=0;
  p_output1[272]=0;
  p_output1[273]=0;
  p_output1[274]=0;
  p_output1[275]=0;
  p_output1[276]=0;
  p_output1[277]=0;
  p_output1[278]=0;
  p_output1[279]=0;
  p_output1[280]=0;
  p_output1[281]=0;
  p_output1[282]=0;
  p_output1[283]=0;
  p_output1[284]=0;
  p_output1[285]=0;
  p_output1[286]=0;
  p_output1[287]=0;
  p_output1[288]=0;
  p_output1[289]=0;
  p_output1[290]=0;
  p_output1[291]=0;
  p_output1[292]=0;
  p_output1[293]=0;
  p_output1[294]=0;
  p_output1[295]=0;
  p_output1[296]=0;
  p_output1[297]=0;
  p_output1[298]=0;
  p_output1[299]=0;
  p_output1[300]=0;
  p_output1[301]=0;
  p_output1[302]=0;
  p_output1[303]=0;
  p_output1[304]=0;
  p_output1[305]=0;
  p_output1[306]=0;
  p_output1[307]=0;
  p_output1[308]=0;
  p_output1[309]=0;
  p_output1[310]=0;
  p_output1[311]=0;
  p_output1[312]=0;
  p_output1[313]=0;
  p_output1[314]=0;
  p_output1[315]=0;
  p_output1[316]=0;
  p_output1[317]=0;
  p_output1[318]=0;
  p_output1[319]=0;
  p_output1[320]=0;
  p_output1[321]=0;
  p_output1[322]=0;
  p_output1[323]=0;
  p_output1[324]=0;
  p_output1[325]=0;
  p_output1[326]=0;
  p_output1[327]=0;
  p_output1[328]=0;
  p_output1[329]=0;
  p_output1[330]=0;
  p_output1[331]=0;
  p_output1[332]=0;
  p_output1[333]=0;
  p_output1[334]=0;
  p_output1[335]=0;
  p_output1[336]=0;
  p_output1[337]=0;
  p_output1[338]=0;
  p_output1[339]=0;
  p_output1[340]=0;
  p_output1[341]=0;
  p_output1[342]=0;
  p_output1[343]=0;
  p_output1[344]=0;
  p_output1[345]=0;
  p_output1[346]=0;
  p_output1[347]=0;
  p_output1[348]=0;
  p_output1[349]=0;
  p_output1[350]=0;
  p_output1[351]=0;
  p_output1[352]=0;
  p_output1[353]=0;
  p_output1[354]=0;
  p_output1[355]=0;
  p_output1[356]=0;
  p_output1[357]=0;
  p_output1[358]=0;
  p_output1[359]=0;
  p_output1[360]=0;
  p_output1[361]=0;
  p_output1[362]=0;
  p_output1[363]=0;
  p_output1[364]=0;
  p_output1[365]=0;
  p_output1[366]=0;
  p_output1[367]=0;
  p_output1[368]=0;
  p_output1[369]=0;
  p_output1[370]=0;
  p_output1[371]=0;
  p_output1[372]=0;
  p_output1[373]=0;
  p_output1[374]=0;
  p_output1[375]=0;
  p_output1[376]=0;
  p_output1[377]=0;
  p_output1[378]=0;
  p_output1[379]=0;
  p_output1[380]=0;
  p_output1[381]=0;
  p_output1[382]=0;
  p_output1[383]=0;
  p_output1[384]=0;
  p_output1[385]=0;
  p_output1[386]=0;
  p_output1[387]=0;
  p_output1[388]=0;
  p_output1[389]=0;
  p_output1[390]=0;
  p_output1[391]=0;
  p_output1[392]=0;
  p_output1[393]=0;
  p_output1[394]=0;
  p_output1[395]=0;
  p_output1[396]=0;
  p_output1[397]=0;
  p_output1[398]=0;
  p_output1[399]=0;
  p_output1[400]=0;
  p_output1[401]=0;
  p_output1[402]=0;
  p_output1[403]=0;
  p_output1[404]=0;
  p_output1[405]=0;
  p_output1[406]=0;
  p_output1[407]=0;
  p_output1[408]=0;
  p_output1[409]=0;
  p_output1[410]=0;
  p_output1[411]=0;
  p_output1[412]=0;
  p_output1[413]=0;
  p_output1[414]=0;
  p_output1[415]=0;
  p_output1[416]=0;
  p_output1[417]=0;
  p_output1[418]=0;
  p_output1[419]=0;
  p_output1[420]=0;
  p_output1[421]=0;
  p_output1[422]=0;
  p_output1[423]=0;
  p_output1[424]=0;
  p_output1[425]=0;
  p_output1[426]=0;
  p_output1[427]=0;
  p_output1[428]=0;
  p_output1[429]=0;
  p_output1[430]=0;
  p_output1[431]=0;
  p_output1[432]=0;
  p_output1[433]=0;
  p_output1[434]=0;
  p_output1[435]=0;
  p_output1[436]=0;
  p_output1[437]=0;
  p_output1[438]=0;
  p_output1[439]=0;
  p_output1[440]=0;
  p_output1[441]=0;
  p_output1[442]=0;
  p_output1[443]=0;
  p_output1[444]=0;
  p_output1[445]=0;
  p_output1[446]=0;
  p_output1[447]=0;
  p_output1[448]=0;
  p_output1[449]=0;
  p_output1[450]=0;
  p_output1[451]=0;
  p_output1[452]=0;
  p_output1[453]=0;
  p_output1[454]=0;
  p_output1[455]=0;
  p_output1[456]=0;
  p_output1[457]=0;
  p_output1[458]=0;
  p_output1[459]=0;
  p_output1[460]=0;
  p_output1[461]=0;
  p_output1[462]=0;
  p_output1[463]=0;
  p_output1[464]=0;
  p_output1[465]=0;
  p_output1[466]=0;
  p_output1[467]=0;
  p_output1[468]=0;
  p_output1[469]=0;
  p_output1[470]=0;
  p_output1[471]=0;
  p_output1[472]=0;
  p_output1[473]=0;
  p_output1[474]=0;
  p_output1[475]=0;
  p_output1[476]=0;
  p_output1[477]=0;
  p_output1[478]=0;
  p_output1[479]=0;
  p_output1[480]=0;
  p_output1[481]=0;
  p_output1[482]=0;
  p_output1[483]=0;
  p_output1[484]=0;
  p_output1[485]=0;
  p_output1[486]=0;
  p_output1[487]=0;
  p_output1[488]=0;
  p_output1[489]=0;
  p_output1[490]=0;
  p_output1[491]=0;
  p_output1[492]=0;
  p_output1[493]=0;
  p_output1[494]=0;
  p_output1[495]=0;
  p_output1[496]=0;
  p_output1[497]=0;
  p_output1[498]=0;
  p_output1[499]=0;
  p_output1[500]=0;
  p_output1[501]=0;
  p_output1[502]=0;
  p_output1[503]=0;
  p_output1[504]=0;
  p_output1[505]=0;
  p_output1[506]=0;
  p_output1[507]=0;
  p_output1[508]=0;
  p_output1[509]=0;
  p_output1[510]=0;
  p_output1[511]=0;
  p_output1[512]=0;
  p_output1[513]=0;
  p_output1[514]=0;
  p_output1[515]=0;
  p_output1[516]=0;
  p_output1[517]=0;
  p_output1[518]=0;
  p_output1[519]=0;
  p_output1[520]=0;
  p_output1[521]=0;
  p_output1[522]=0;
  p_output1[523]=0;
  p_output1[524]=0;
  p_output1[525]=0;
  p_output1[526]=0;
  p_output1[527]=0;
  p_output1[528]=0;
  p_output1[529]=0;
  p_output1[530]=0;
  p_output1[531]=0;
  p_output1[532]=0;
  p_output1[533]=0;
  p_output1[534]=0;
  p_output1[535]=0;
  p_output1[536]=0;
  p_output1[537]=0;
  p_output1[538]=0;
  p_output1[539]=0;
  p_output1[540]=0;
  p_output1[541]=0;
  p_output1[542]=0;
  p_output1[543]=0;
  p_output1[544]=0;
  p_output1[545]=0;
  p_output1[546]=0;
  p_output1[547]=0;
  p_output1[548]=0;
  p_output1[549]=0;
  p_output1[550]=0;
  p_output1[551]=0;
  p_output1[552]=0;
  p_output1[553]=0;
  p_output1[554]=0;
  p_output1[555]=0;
  p_output1[556]=0;
  p_output1[557]=0;
  p_output1[558]=0;
  p_output1[559]=0;
  p_output1[560]=0;
  p_output1[561]=0;
  p_output1[562]=0;
  p_output1[563]=0;
  p_output1[564]=0;
  p_output1[565]=0;
  p_output1[566]=0;
  p_output1[567]=0;
  p_output1[568]=0;
  p_output1[569]=0;
  p_output1[570]=0;
  p_output1[571]=0;
  p_output1[572]=0;
  p_output1[573]=0;
  p_output1[574]=0;
  p_output1[575]=0;
  p_output1[576]=0;
  p_output1[577]=0;
  p_output1[578]=0;
  p_output1[579]=0;
  p_output1[580]=0;
  p_output1[581]=0;
  p_output1[582]=0;
  p_output1[583]=0;
  p_output1[584]=0;
  p_output1[585]=0;
  p_output1[586]=0;
  p_output1[587]=0;
  p_output1[588]=0;
  p_output1[589]=0;
  p_output1[590]=0;
  p_output1[591]=0;
  p_output1[592]=0;
  p_output1[593]=0;
  p_output1[594]=0;
  p_output1[595]=0;
  p_output1[596]=0;
  p_output1[597]=0;
  p_output1[598]=0;
  p_output1[599]=0;
  p_output1[600]=0;
  p_output1[601]=0;
  p_output1[602]=0;
  p_output1[603]=0;
  p_output1[604]=0;
  p_output1[605]=0;
  p_output1[606]=0;
  p_output1[607]=0;
  p_output1[608]=0;
  p_output1[609]=0;
  p_output1[610]=0;
  p_output1[611]=0;
  p_output1[612]=0;
  p_output1[613]=0;
  p_output1[614]=0;
  p_output1[615]=0;
  p_output1[616]=0;
  p_output1[617]=0;
  p_output1[618]=0;
  p_output1[619]=0;
  p_output1[620]=0;
  p_output1[621]=0;
  p_output1[622]=0;
  p_output1[623]=0;
  p_output1[624]=0;
  p_output1[625]=0;
  p_output1[626]=0;
  p_output1[627]=0;
  p_output1[628]=0;
  p_output1[629]=0;
  p_output1[630]=0;
  p_output1[631]=0;
  p_output1[632]=0;
  p_output1[633]=0;
  p_output1[634]=0;
  p_output1[635]=0;
  p_output1[636]=0;
  p_output1[637]=0;
  p_output1[638]=0;
  p_output1[639]=0;
  p_output1[640]=0;
  p_output1[641]=0;
  p_output1[642]=0;
  p_output1[643]=0;
  p_output1[644]=0;
  p_output1[645]=0;
  p_output1[646]=0;
  p_output1[647]=0;
  p_output1[648]=0;
  p_output1[649]=0;
  p_output1[650]=0;
  p_output1[651]=0;
  p_output1[652]=0;
  p_output1[653]=0;
  p_output1[654]=0;
  p_output1[655]=0;
  p_output1[656]=0;
  p_output1[657]=0;
  p_output1[658]=0;
  p_output1[659]=0;
  p_output1[660]=0;
  p_output1[661]=0;
  p_output1[662]=0;
  p_output1[663]=0;
  p_output1[664]=0;
  p_output1[665]=0;
  p_output1[666]=0;
  p_output1[667]=0;
  p_output1[668]=0;
  p_output1[669]=0;
  p_output1[670]=0;
  p_output1[671]=0;
  p_output1[672]=0;
  p_output1[673]=0;
  p_output1[674]=0;
  p_output1[675]=0;
  p_output1[676]=0;
  p_output1[677]=0;
  p_output1[678]=0;
  p_output1[679]=0;
  p_output1[680]=0;
  p_output1[681]=0;
  p_output1[682]=0;
  p_output1[683]=0;
  p_output1[684]=0;
  p_output1[685]=0;
  p_output1[686]=0;
  p_output1[687]=0;
  p_output1[688]=0;
  p_output1[689]=0;
  p_output1[690]=0;
  p_output1[691]=0;
  p_output1[692]=0;
  p_output1[693]=0;
  p_output1[694]=0;
  p_output1[695]=0;
  p_output1[696]=0;
  p_output1[697]=0;
  p_output1[698]=0;
  p_output1[699]=0;
  p_output1[700]=0;
  p_output1[701]=0;
  p_output1[702]=0;
  p_output1[703]=0;
  p_output1[704]=0;
  p_output1[705]=0;
  p_output1[706]=0;
  p_output1[707]=0;
  p_output1[708]=0;
  p_output1[709]=0;
  p_output1[710]=0;
  p_output1[711]=0;
  p_output1[712]=0;
  p_output1[713]=0;
  p_output1[714]=0;
  p_output1[715]=0;
  p_output1[716]=0;
  p_output1[717]=0;
  p_output1[718]=0;
  p_output1[719]=0;
  p_output1[720]=0;
  p_output1[721]=0;
  p_output1[722]=0;
  p_output1[723]=0;
  p_output1[724]=0;
  p_output1[725]=0;
  p_output1[726]=0;
  p_output1[727]=0;
  p_output1[728]=0;
  p_output1[729]=0;
  p_output1[730]=0;
  p_output1[731]=0;
  p_output1[732]=0;
  p_output1[733]=0;
  p_output1[734]=0;
  p_output1[735]=0;
  p_output1[736]=0;
  p_output1[737]=0;
  p_output1[738]=0;
  p_output1[739]=0;
  p_output1[740]=0;
  p_output1[741]=0;
  p_output1[742]=0;
  p_output1[743]=0;
  p_output1[744]=0;
  p_output1[745]=0;
  p_output1[746]=0;
  p_output1[747]=0;
  p_output1[748]=0;
  p_output1[749]=0;
  p_output1[750]=0;
  p_output1[751]=0;
  p_output1[752]=0;
  p_output1[753]=0;
  p_output1[754]=0;
  p_output1[755]=0;
  p_output1[756]=0;
  p_output1[757]=0;
  p_output1[758]=0;
  p_output1[759]=0;
  p_output1[760]=0;
  p_output1[761]=0;
  p_output1[762]=0;
  p_output1[763]=0;
  p_output1[764]=0;
  p_output1[765]=0;
  p_output1[766]=0;
  p_output1[767]=0;
  p_output1[768]=0;
  p_output1[769]=0;
  p_output1[770]=0;
  p_output1[771]=0;
  p_output1[772]=0;
  p_output1[773]=0;
  p_output1[774]=0;
  p_output1[775]=0;
  p_output1[776]=0;
  p_output1[777]=0;
  p_output1[778]=0;
  p_output1[779]=0;
  p_output1[780]=0;
  p_output1[781]=0;
  p_output1[782]=0;
  p_output1[783]=0;
  p_output1[784]=0;
  p_output1[785]=0;
  p_output1[786]=0;
  p_output1[787]=0;
  p_output1[788]=0;
  p_output1[789]=0;
  p_output1[790]=0;
  p_output1[791]=0;
  p_output1[792]=0;
  p_output1[793]=0;
  p_output1[794]=0;
  p_output1[795]=0;
  p_output1[796]=0;
  p_output1[797]=0;
  p_output1[798]=0;
  p_output1[799]=0;
  p_output1[800]=0;
  p_output1[801]=0;
  p_output1[802]=0;
  p_output1[803]=0;
  p_output1[804]=0;
  p_output1[805]=0;
  p_output1[806]=0;
  p_output1[807]=0;
  p_output1[808]=0;
  p_output1[809]=0;
  p_output1[810]=0;
  p_output1[811]=0;
  p_output1[812]=0;
  p_output1[813]=0;
  p_output1[814]=0;
  p_output1[815]=0;
  p_output1[816]=0;
  p_output1[817]=0;
  p_output1[818]=0;
  p_output1[819]=0;
  p_output1[820]=0;
  p_output1[821]=0;
  p_output1[822]=0;
  p_output1[823]=0;
  p_output1[824]=0;
  p_output1[825]=0;
  p_output1[826]=0;
  p_output1[827]=0;
  p_output1[828]=0;
  p_output1[829]=0;
  p_output1[830]=0;
  p_output1[831]=0;
  p_output1[832]=0;
  p_output1[833]=0;
  p_output1[834]=0;
  p_output1[835]=0;
  p_output1[836]=0;
  p_output1[837]=0;
  p_output1[838]=0;
  p_output1[839]=0;
  p_output1[840]=0;
  p_output1[841]=0;
  p_output1[842]=0;
  p_output1[843]=0;
  p_output1[844]=0;
  p_output1[845]=0;
  p_output1[846]=0;
  p_output1[847]=0;
  p_output1[848]=0;
  p_output1[849]=0;
  p_output1[850]=0;
  p_output1[851]=0;
  p_output1[852]=0;
  p_output1[853]=0;
  p_output1[854]=0;
  p_output1[855]=0;
  p_output1[856]=0;
  p_output1[857]=0;
  p_output1[858]=0;
  p_output1[859]=0;
  p_output1[860]=0;
  p_output1[861]=0;
  p_output1[862]=0;
  p_output1[863]=0;
  p_output1[864]=0;
  p_output1[865]=0;
  p_output1[866]=0;
  p_output1[867]=0;
  p_output1[868]=0;
  p_output1[869]=0;
  p_output1[870]=0;
  p_output1[871]=0;
  p_output1[872]=0;
  p_output1[873]=0;
  p_output1[874]=0;
  p_output1[875]=0;
  p_output1[876]=0;
  p_output1[877]=0;
  p_output1[878]=0;
  p_output1[879]=0;
  p_output1[880]=0;
  p_output1[881]=0;
  p_output1[882]=0;
  p_output1[883]=0;
  p_output1[884]=0;
  p_output1[885]=0;
  p_output1[886]=0;
  p_output1[887]=0;
  p_output1[888]=0;
  p_output1[889]=0;
  p_output1[890]=0;
  p_output1[891]=0;
  p_output1[892]=0;
  p_output1[893]=0;
  p_output1[894]=0;
  p_output1[895]=0;
  p_output1[896]=0;
  p_output1[897]=0;
  p_output1[898]=0;
  p_output1[899]=0;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "One input(s) required (var1).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 30 && ncols == 1) && 
      !(mrows == 1 && ncols == 30))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 30, (mwSize) 30, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1);


}

#else // MATLAB_MEX_FILE

#include "Mmat4_digit.hh"

namespace SymFunction
{

void Mmat4_digit_raw(double *p_output1, const double *var1)
{
  // Call Subroutines
  output1(p_output1, var1);

}

}

#endif // MATLAB_MEX_FILE
